/*
 * Algorithm testing framework and tests.
 *
 * Copyright (c) 2002 James Morris <jmorris@intercode.com.au>
 * Copyright (c) 2002 Jean-Francois Dive <jef@linuxbe.org>
 * Copyright (c) 2007 Nokia Siemens Networks
 * Copyright (c) 2008 Herbert Xu <herbert@gondor.apana.org.au>
 *
 * Updated RFC4106 AES-GCM testing. Some test vectors were taken from
 * http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/
 * gcm/gcm-test-vectors.tar.gz
 *     Authors: Aidan O'Mahony (aidan.o.mahony@intel.com)
 *              Adrian Hoban <adrian.hoban@intel.com>
 *              Gabriele Paoloni <gabriele.paoloni@intel.com>
 *              Tadeusz Struk (tadeusz.struk@intel.com)
 *     Copyright (c) 2010, Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 */
#ifndef _LGECRYPTO_SELFTEST_H
#define _LGECRYPTO_SELFTEST_H

#include <linux/netlink.h>
#include <linux/zlib.h>

#include "lgecrypto_fips.h"

#define MAX_DIGEST_SIZE        64
#define MAX_TAP            8

#define MAX_KEYLEN        56
#define MAX_IVLEN        32

struct hash_testvec {
    /* only used with keyed hash algorithms */
    char *key;
    char *plaintext;
    char *digest;
    unsigned char tap[MAX_TAP];
    unsigned short psize;
    unsigned char np;
    unsigned char ksize;
};

struct cipher_testvec {
    char *key;
    char *iv;
    char *input;
    char *result;
    unsigned short tap[MAX_TAP];
    int np;
    unsigned char also_non_np;
    unsigned char fail;
    unsigned char wk; /* weak key flag */
    unsigned char klen;
    unsigned short ilen;
    unsigned short rlen;
};

struct aead_testvec {
    char *key;
    char *iv;
    char *input;
    char *assoc;
    char *result;
    unsigned char tap[MAX_TAP];
    unsigned char atap[MAX_TAP];
    int np;
    int anp;
    unsigned char fail;
    unsigned char novrfy;    /* ccm dec verification failure expected */
    unsigned char wk; /* weak key flag */
    unsigned char klen;
    unsigned short ilen;
    unsigned short alen;
    unsigned short rlen;
};

struct cprng_testvec {
    char *key;
    char *dt;
    char *v;
    char *result;
    unsigned char klen;
    unsigned short dtlen;
    unsigned short vlen;
    unsigned short rlen;
    unsigned short loops;
};

struct drbg_testvec {
    unsigned char *entropy;
    size_t entropylen;
    unsigned char *entpra;
    unsigned char *entprb;
    size_t entprlen;
    unsigned char *addtla;
    unsigned char *addtlb;
    size_t addtllen;
    unsigned char *pers;
    size_t perslen;
    unsigned char *expected;
    size_t expectedlen;
};

/*
 * SHA1 test vectors  from from FIPS PUB 180-1
 * Long vector from CAVS 5.0
 */
#define SHA1_TEST_VECTORS    3

static struct hash_testvec sha1_tv_template[] = {
    {
        .plaintext = "abc",
        .psize    = 3,
        .digest    = "\xa9\x99\x3e\x36\x47\x06\x81\x6a\xba\x3e"
              "\x25\x71\x78\x50\xc2\x6c\x9c\xd0\xd8\x9d",
    }, {
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 56,
        .digest    = "\x84\x98\x3e\x44\x1c\x3b\xd2\x6e\xba\xae"
              "\x4a\xa1\xf9\x51\x29\xe5\xe5\x46\x70\xf1",
        .np    = 2,
        .tap    = { 28, 28 }
    }, {
        .plaintext = "\xec\x29\x56\x12\x44\xed\xe7\x06"
                 "\xb6\xeb\x30\xa1\xc3\x71\xd7\x44"
                 "\x50\xa1\x05\xc3\xf9\x73\x5f\x7f"
                 "\xa9\xfe\x38\xcf\x67\xf3\x04\xa5"
                 "\x73\x6a\x10\x6e\x92\xe1\x71\x39"
                 "\xa6\x81\x3b\x1c\x81\xa4\xf3\xd3"
                 "\xfb\x95\x46\xab\x42\x96\xfa\x9f"
                 "\x72\x28\x26\xc0\x66\x86\x9e\xda"
                 "\xcd\x73\xb2\x54\x80\x35\x18\x58"
                 "\x13\xe2\x26\x34\xa9\xda\x44\x00"
                 "\x0d\x95\xa2\x81\xff\x9f\x26\x4e"
                 "\xcc\xe0\xa9\x31\x22\x21\x62\xd0"
                 "\x21\xcc\xa2\x8d\xb5\xf3\xc2\xaa"
                 "\x24\x94\x5a\xb1\xe3\x1c\xb4\x13"
                 "\xae\x29\x81\x0f\xd7\x94\xca\xd5"
                 "\xdf\xaf\x29\xec\x43\xcb\x38\xd1"
                 "\x98\xfe\x4a\xe1\xda\x23\x59\x78"
                 "\x02\x21\x40\x5b\xd6\x71\x2a\x53"
                 "\x05\xda\x4b\x1b\x73\x7f\xce\x7c"
                 "\xd2\x1c\x0e\xb7\x72\x8d\x08\x23"
                 "\x5a\x90\x11",
        .psize    = 163,
        .digest    = "\x97\x01\x11\xc4\xe7\x7b\xcc\x88\xcc\x20"
              "\x45\x9c\x02\xb6\x9b\x4a\xa8\xf5\x82\x17",
        .np    = 4,
        .tap    = { 63, 64, 31, 5 }
    }
};

/*
 * SHA224 test vectors from from FIPS PUB 180-2
 */
#define SHA224_TEST_VECTORS     2

static struct hash_testvec sha224_tv_template[] = {
    {
        .plaintext = "abc",
        .psize  = 3,
        .digest = "\x23\x09\x7D\x22\x34\x05\xD8\x22"
              "\x86\x42\xA4\x77\xBD\xA2\x55\xB3"
              "\x2A\xAD\xBC\xE4\xBD\xA0\xB3\xF7"
              "\xE3\x6C\x9D\xA7",
    }, {
        .plaintext =
        "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize  = 56,
        .digest = "\x75\x38\x8B\x16\x51\x27\x76\xCC"
              "\x5D\xBA\x5D\xA1\xFD\x89\x01\x50"
              "\xB0\xC6\x45\x5C\xB4\xF5\x8B\x19"
              "\x52\x52\x25\x25",
        .np     = 2,
        .tap    = { 28, 28 }
    }
};

/*
 * SHA256 test vectors from from NIST
 */
#define SHA256_TEST_VECTORS    2

static struct hash_testvec sha256_tv_template[] = {
    {
        .plaintext = "abc",
        .psize    = 3,
        .digest    = "\xba\x78\x16\xbf\x8f\x01\xcf\xea"
              "\x41\x41\x40\xde\x5d\xae\x22\x23"
              "\xb0\x03\x61\xa3\x96\x17\x7a\x9c"
              "\xb4\x10\xff\x61\xf2\x00\x15\xad",
    }, {
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 56,
        .digest    = "\x24\x8d\x6a\x61\xd2\x06\x38\xb8"
              "\xe5\xc0\x26\x93\x0c\x3e\x60\x39"
              "\xa3\x3c\xe4\x59\x64\xff\x21\x67"
              "\xf6\xec\xed\xd4\x19\xdb\x06\xc1",
        .np    = 2,
        .tap    = { 28, 28 }
    },
};

/*
 * SHA384 test vectors from from NIST and kerneli
 */
#define SHA384_TEST_VECTORS    4

static struct hash_testvec sha384_tv_template[] = {
    {
        .plaintext= "abc",
        .psize    = 3,
        .digest    = "\xcb\x00\x75\x3f\x45\xa3\x5e\x8b"
              "\xb5\xa0\x3d\x69\x9a\xc6\x50\x07"
              "\x27\x2c\x32\xab\x0e\xde\xd1\x63"
              "\x1a\x8b\x60\x5a\x43\xff\x5b\xed"
              "\x80\x86\x07\x2b\xa1\xe7\xcc\x23"
              "\x58\xba\xec\xa1\x34\xc8\x25\xa7",
    }, {
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 56,
        .digest    = "\x33\x91\xfd\xdd\xfc\x8d\xc7\x39"
              "\x37\x07\xa6\x5b\x1b\x47\x09\x39"
              "\x7c\xf8\xb1\xd1\x62\xaf\x05\xab"
              "\xfe\x8f\x45\x0d\xe5\xf3\x6b\xc6"
              "\xb0\x45\x5a\x85\x20\xbc\x4e\x6f"
              "\x5f\xe9\x5b\x1f\xe3\xc8\x45\x2b",
    }, {
        .plaintext = "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn"
               "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu",
        .psize    = 112,
        .digest    = "\x09\x33\x0c\x33\xf7\x11\x47\xe8"
              "\x3d\x19\x2f\xc7\x82\xcd\x1b\x47"
              "\x53\x11\x1b\x17\x3b\x3b\x05\xd2"
              "\x2f\xa0\x80\x86\xe3\xb0\xf7\x12"
              "\xfc\xc7\xc7\x1a\x55\x7e\x2d\xb9"
              "\x66\xc3\xe9\xfa\x91\x74\x60\x39",
    }, {
        .plaintext = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd"
               "efghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz",
        .psize    = 104,
        .digest    = "\x3d\x20\x89\x73\xab\x35\x08\xdb"
              "\xbd\x7e\x2c\x28\x62\xba\x29\x0a"
              "\xd3\x01\x0e\x49\x78\xc1\x98\xdc"
              "\x4d\x8f\xd0\x14\xe5\x82\x82\x3a"
              "\x89\xe1\x6f\x9b\x2a\x7b\xbc\x1a"
              "\xc9\x38\xe2\xd1\x99\xe8\xbe\xa4",
        .np    = 4,
        .tap    = { 26, 26, 26, 26 }
    },
};

/*
 * SHA512 test vectors from from NIST and kerneli
 */
#define SHA512_TEST_VECTORS    4

static struct hash_testvec sha512_tv_template[] = {
    {
        .plaintext = "abc",
        .psize    = 3,
        .digest    = "\xdd\xaf\x35\xa1\x93\x61\x7a\xba"
              "\xcc\x41\x73\x49\xae\x20\x41\x31"
              "\x12\xe6\xfa\x4e\x89\xa9\x7e\xa2"
              "\x0a\x9e\xee\xe6\x4b\x55\xd3\x9a"
              "\x21\x92\x99\x2a\x27\x4f\xc1\xa8"
              "\x36\xba\x3c\x23\xa3\xfe\xeb\xbd"
              "\x45\x4d\x44\x23\x64\x3c\xe8\x0e"
              "\x2a\x9a\xc9\x4f\xa5\x4c\xa4\x9f",
    }, {
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 56,
        .digest    = "\x20\x4a\x8f\xc6\xdd\xa8\x2f\x0a"
              "\x0c\xed\x7b\xeb\x8e\x08\xa4\x16"
              "\x57\xc1\x6e\xf4\x68\xb2\x28\xa8"
              "\x27\x9b\xe3\x31\xa7\x03\xc3\x35"
              "\x96\xfd\x15\xc1\x3b\x1b\x07\xf9"
              "\xaa\x1d\x3b\xea\x57\x78\x9c\xa0"
              "\x31\xad\x85\xc7\xa7\x1d\xd7\x03"
              "\x54\xec\x63\x12\x38\xca\x34\x45",
    }, {
        .plaintext = "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmn"
               "hijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu",
        .psize    = 112,
        .digest    = "\x8e\x95\x9b\x75\xda\xe3\x13\xda"
              "\x8c\xf4\xf7\x28\x14\xfc\x14\x3f"
              "\x8f\x77\x79\xc6\xeb\x9f\x7f\xa1"
              "\x72\x99\xae\xad\xb6\x88\x90\x18"
              "\x50\x1d\x28\x9e\x49\x00\xf7\xe4"
              "\x33\x1b\x99\xde\xc4\xb5\x43\x3a"
              "\xc7\xd3\x29\xee\xb6\xdd\x26\x54"
              "\x5e\x96\xe5\x5b\x87\x4b\xe9\x09",
    }, {
        .plaintext = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd"
               "efghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz",
        .psize    = 104,
        .digest    = "\x93\x0d\x0c\xef\xcb\x30\xff\x11"
              "\x33\xb6\x89\x81\x21\xf1\xcf\x3d"
              "\x27\x57\x8a\xfc\xaf\xe8\x67\x7c"
              "\x52\x57\xcf\x06\x99\x11\xf7\x5d"
              "\x8f\x58\x31\xb5\x6e\xbf\xda\x67"
              "\xb2\x78\xe6\x6d\xff\x8b\x84\xfe"
              "\x2b\x28\x70\xf7\x42\xa5\x80\xd8"
              "\xed\xb4\x19\x87\x23\x28\x50\xc9",
        .np    = 4,
        .tap    = { 26, 26, 26, 26 }
    },
};

/*
 * HMAC-SHA1 test vectors from RFC2202
 */
#define HMAC_SHA1_TEST_VECTORS    7

static struct hash_testvec hmac_sha1_tv_template[] = {
    {
        .key    = "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b",
        .ksize    = 20,
        .plaintext = "Hi There",
        .psize    = 8,
        .digest    = "\xb6\x17\x31\x86\x55\x05\x72\x64"
#if FIPS_FUNC_TEST == 2
              "\xe3\x8b\xc0\xb6\xfb\x37\x8c\x8e\xf1"
#else
              "\xe2\x8b\xc0\xb6\xfb\x37\x8c\x8e\xf1"
#endif
              "\x46\xbe",
    }, {
        .key    = "Jefe",
        .ksize    = 4,
        .plaintext = "what do ya want for nothing?",
        .psize    = 28,
        .digest    = "\xef\xfc\xdf\x6a\xe5\xeb\x2f\xa2\xd2\x74"
              "\x16\xd5\xf1\x84\xdf\x9c\x25\x9a\x7c\x79",
        .np    = 2,
        .tap    = { 14, 14 }
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa",
        .ksize    = 20,
        .plaintext = "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd",
        .psize    = 50,
        .digest    = "\x12\x5d\x73\x42\xb9\xac\x11\xcd\x91\xa3"
              "\x9a\xf4\x8a\xa1\x7b\x4f\x63\xf1\x75\xd3",
    }, {
        .key    = "\x01\x02\x03\x04\x05\x06\x07\x08"
              "\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
              "\x11\x12\x13\x14\x15\x16\x17\x18\x19",
        .ksize    = 25,
        .plaintext = "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd",
        .psize    = 50,
        .digest    = "\x4c\x90\x07\xf4\x02\x62\x50\xc6\xbc\x84"
              "\x14\xf9\xbf\x50\xc8\x6c\x2d\x72\x35\xda",
    }, {
        .key    = "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c",
        .ksize    = 20,
        .plaintext = "Test With Truncation",
        .psize    = 20,
        .digest    = "\x4c\x1a\x03\x42\x4b\x55\xe0\x7f\xe7\xf2"
              "\x7b\xe1\xd5\x8b\xb9\x32\x4a\x9a\x5a\x04",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa",
        .ksize    = 80,
        .plaintext = "Test Using Larger Than Block-Size Key - Hash Key First",
        .psize    = 54,
        .digest    = "\xaa\x4a\xe5\xe1\x52\x72\xd0\x0e\x95\x70"
              "\x56\x37\xce\x8a\x3b\x55\xed\x40\x21\x12",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa",
        .ksize    = 80,
        .plaintext = "Test Using Larger Than Block-Size Key and Larger Than One "
               "Block-Size Data",
        .psize    = 73,
        .digest    = "\xe8\xe9\x9d\x0f\x45\x23\x7d\x78\x6d\x6b"
              "\xba\xa7\x96\x5c\x78\x08\xbb\xff\x1a\x91",
    },
};


/*
 * SHA224 HMAC test vectors from RFC4231
 */
#define HMAC_SHA224_TEST_VECTORS    4

static struct hash_testvec hmac_sha224_tv_template[] = {
    {
        .key    = "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
            "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
            "\x0b\x0b\x0b\x0b",
        .ksize  = 20,
        /*  ("Hi There") */
        .plaintext = "\x48\x69\x20\x54\x68\x65\x72\x65",
        .psize  = 8,
        .digest = "\x89\x6f\xb1\x12\x8a\xbb\xdf\x19"
            "\x68\x32\x10\x7c\xd4\x9d\xf3\x3f"
            "\x47\xb4\xb1\x16\x99\x12\xba\x4f"
            "\x53\x68\x4b\x22",
    }, {
        .key    = "Jefe",
        .ksize  = 4,
        /* ("what do ya want for nothing?") */
        .plaintext = "\x77\x68\x61\x74\x20\x64\x6f\x20"
            "\x79\x61\x20\x77\x61\x6e\x74\x20"
            "\x66\x6f\x72\x20\x6e\x6f\x74\x68"
            "\x69\x6e\x67\x3f",
        .psize  = 28,
        .digest = "\xa3\x0e\x01\x09\x8b\xc6\xdb\xbf"
            "\x45\x69\x0f\x3a\x7e\x9e\x6d\x0f"
            "\x8b\xbe\xa2\xa3\x9e\x61\x48\x00"
            "\x8f\xd0\x5e\x44",
        .np = 4,
        .tap    = { 7, 7, 7, 7 }
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa",
        .ksize  = 131,
        /* ("Test Using Larger Than Block-Size Key - Hash Key First") */
        .plaintext = "\x54\x65\x73\x74\x20\x55\x73\x69"
            "\x6e\x67\x20\x4c\x61\x72\x67\x65"
            "\x72\x20\x54\x68\x61\x6e\x20\x42"
            "\x6c\x6f\x63\x6b\x2d\x53\x69\x7a"
            "\x65\x20\x4b\x65\x79\x20\x2d\x20"
            "\x48\x61\x73\x68\x20\x4b\x65\x79"
            "\x20\x46\x69\x72\x73\x74",
        .psize  = 54,
        .digest = "\x95\xe9\xa0\xdb\x96\x20\x95\xad"
            "\xae\xbe\x9b\x2d\x6f\x0d\xbc\xe2"
            "\xd4\x99\xf1\x12\xf2\xd2\xb7\x27"
            "\x3f\xa6\x87\x0e",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa",
        .ksize  = 131,
        /* ("This is a test using a larger than block-size key and a")
        (" larger than block-size data. The key needs to be")
            (" hashed before being used by the HMAC algorithm.") */
        .plaintext = "\x54\x68\x69\x73\x20\x69\x73\x20"
            "\x61\x20\x74\x65\x73\x74\x20\x75"
            "\x73\x69\x6e\x67\x20\x61\x20\x6c"
            "\x61\x72\x67\x65\x72\x20\x74\x68"
            "\x61\x6e\x20\x62\x6c\x6f\x63\x6b"
            "\x2d\x73\x69\x7a\x65\x20\x6b\x65"
            "\x79\x20\x61\x6e\x64\x20\x61\x20"
            "\x6c\x61\x72\x67\x65\x72\x20\x74"
            "\x68\x61\x6e\x20\x62\x6c\x6f\x63"
            "\x6b\x2d\x73\x69\x7a\x65\x20\x64"
            "\x61\x74\x61\x2e\x20\x54\x68\x65"
            "\x20\x6b\x65\x79\x20\x6e\x65\x65"
            "\x64\x73\x20\x74\x6f\x20\x62\x65"
            "\x20\x68\x61\x73\x68\x65\x64\x20"
            "\x62\x65\x66\x6f\x72\x65\x20\x62"
            "\x65\x69\x6e\x67\x20\x75\x73\x65"
            "\x64\x20\x62\x79\x20\x74\x68\x65"
            "\x20\x48\x4d\x41\x43\x20\x61\x6c"
            "\x67\x6f\x72\x69\x74\x68\x6d\x2e",
        .psize  = 152,
        .digest = "\x3a\x85\x41\x66\xac\x5d\x9f\x02"
            "\x3f\x54\xd5\x17\xd0\xb3\x9d\xbd"
            "\x94\x67\x70\xdb\x9c\x2b\x95\xc9"
            "\xf6\xf5\x65\xd1",
    },
};

/*
 * HMAC-SHA256 test vectors from
 * draft-ietf-ipsec-ciph-sha-256-01.txt
 */
#define HMAC_SHA256_TEST_VECTORS    10

static struct hash_testvec hmac_sha256_tv_template[] = {
    {
        .key    = "\x01\x02\x03\x04\x05\x06\x07\x08"
              "\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
              "\x11\x12\x13\x14\x15\x16\x17\x18"
              "\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20",
        .ksize    = 32,
        .plaintext = "abc",
        .psize    = 3,
        .digest    = "\xa2\x1b\x1f\x5d\x4c\xf4\xf7\x3a"
              "\x4d\xd9\x39\x75\x0f\x7a\x06\x6a"
              "\x7f\x98\xcc\x13\x1c\xb1\x6a\x66"
              "\x92\x75\x90\x21\xcf\xab\x81\x81",
    }, {
        .key    = "\x01\x02\x03\x04\x05\x06\x07\x08"
              "\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
              "\x11\x12\x13\x14\x15\x16\x17\x18"
              "\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20",
        .ksize    = 32,
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 56,
        .digest    = "\x10\x4f\xdc\x12\x57\x32\x8f\x08"
              "\x18\x4b\xa7\x31\x31\xc5\x3c\xae"
              "\xe6\x98\xe3\x61\x19\x42\x11\x49"
              "\xea\x8c\x71\x24\x56\x69\x7d\x30",
    }, {
        .key    = "\x01\x02\x03\x04\x05\x06\x07\x08"
              "\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
              "\x11\x12\x13\x14\x15\x16\x17\x18"
              "\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20",
        .ksize    = 32,
        .plaintext = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
               "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq",
        .psize    = 112,
        .digest    = "\x47\x03\x05\xfc\x7e\x40\xfe\x34"
              "\xd3\xee\xb3\xe7\x73\xd9\x5a\xab"
              "\x73\xac\xf0\xfd\x06\x04\x47\xa5"
              "\xeb\x45\x95\xbf\x33\xa9\xd1\xa3",
    }, {
        .key    = "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
            "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
            "\x0b\x0b\x0b\x0b\x0b\x0b",
        .ksize    = 32,
        .plaintext = "Hi There",
        .psize    = 8,
        .digest    = "\x19\x8a\x60\x7e\xb4\x4b\xfb\xc6"
              "\x99\x03\xa0\xf1\xcf\x2b\xbd\xc5"
              "\xba\x0a\xa3\xf3\xd9\xae\x3c\x1c"
              "\x7a\x3b\x16\x96\xa0\xb6\x8c\xf7",
    }, {
        .key    = "Jefe",
        .ksize    = 4,
        .plaintext = "what do ya want for nothing?",
        .psize    = 28,
        .digest    = "\x5b\xdc\xc1\x46\xbf\x60\x75\x4e"
              "\x6a\x04\x24\x26\x08\x95\x75\xc7"
              "\x5a\x00\x3f\x08\x9d\x27\x39\x83"
              "\x9d\xec\x58\xb9\x64\xec\x38\x43",
        .np    = 2,
        .tap    = { 14, 14 }
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa",
        .ksize    = 32,
        .plaintext = "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd"
            "\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd\xdd",
        .psize    = 50,
        .digest    = "\xcd\xcb\x12\x20\xd1\xec\xcc\xea"
              "\x91\xe5\x3a\xba\x30\x92\xf9\x62"
              "\xe5\x49\xfe\x6c\xe9\xed\x7f\xdc"
              "\x43\x19\x1f\xbd\xe4\x5c\x30\xb0",
    }, {
        .key    = "\x01\x02\x03\x04\x05\x06\x07\x08"
              "\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
              "\x11\x12\x13\x14\x15\x16\x17\x18"
              "\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
              "\x21\x22\x23\x24\x25",
        .ksize    = 37,
        .plaintext = "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd"
            "\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd",
        .psize    = 50,
        .digest    = "\xd4\x63\x3c\x17\xf6\xfb\x8d\x74"
              "\x4c\x66\xde\xe0\xf8\xf0\x74\x55"
              "\x6e\xc4\xaf\x55\xef\x07\x99\x85"
              "\x41\x46\x8e\xb4\x9b\xd2\xe9\x17",
    }, {
        .key    = "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
            "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
            "\x0c\x0c\x0c\x0c\x0c\x0c",
        .ksize    = 32,
        .plaintext = "Test With Truncation",
        .psize    = 20,
        .digest    = "\x75\x46\xaf\x01\x84\x1f\xc0\x9b"
              "\x1a\xb9\xc3\x74\x9a\x5f\x1c\x17"
              "\xd4\xf5\x89\x66\x8a\x58\x7b\x27"
              "\x00\xa9\xc9\x7c\x11\x93\xcf\x42",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa",
        .ksize    = 80,
        .plaintext = "Test Using Larger Than Block-Size Key - Hash Key First",
        .psize    = 54,
        .digest    = "\x69\x53\x02\x5e\xd9\x6f\x0c\x09"
              "\xf8\x0a\x96\xf7\x8e\x65\x38\xdb"
              "\xe2\xe7\xb8\x20\xe3\xdd\x97\x0e"
              "\x7d\xdd\x39\x09\x1b\x32\x35\x2f",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa",
        .ksize    = 80,
        .plaintext = "Test Using Larger Than Block-Size Key and Larger Than "
               "One Block-Size Data",
        .psize    = 73,
        .digest    = "\x63\x55\xac\x22\xe8\x90\xd0\xa3"
              "\xc8\x48\x1a\x5c\xa4\x82\x5b\xc8"
              "\x84\xd3\xe7\xa1\xff\x98\xa2\xfc"
              "\x2a\xc7\xd8\xe0\x64\xc3\xb2\xe6",
    },
};

/*
 * SHA384 HMAC test vectors from RFC4231
 */

#define HMAC_SHA384_TEST_VECTORS    4

static struct hash_testvec hmac_sha384_tv_template[] = {
    {
        .key    = "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
              "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
              "\x0b\x0b\x0b\x0b",
        .ksize    = 20,
        .plaintext = "Hi There",
        .psize    = 8,
        .digest    = "\xaf\xd0\x39\x44\xd8\x48\x95\x62"
              "\x6b\x08\x25\xf4\xab\x46\x90\x7f"
              "\x15\xf9\xda\xdb\xe4\x10\x1e\xc6"
              "\x82\xaa\x03\x4c\x7c\xeb\xc5\x9c"
              "\xfa\xea\x9e\xa9\x07\x6e\xde\x7f"
              "\x4a\xf1\x52\xe8\xb2\xfa\x9c\xb6",
    }, {
        .key    = "Jefe",
        .ksize    = 4,
        .plaintext = "what do ya want for nothing?",
        .psize    = 28,
        .digest    = "\xaf\x45\xd2\xe3\x76\x48\x40\x31"
              "\x61\x7f\x78\xd2\xb5\x8a\x6b\x1b"
              "\x9c\x7e\xf4\x64\xf5\xa0\x1b\x47"
              "\xe4\x2e\xc3\x73\x63\x22\x44\x5e"
              "\x8e\x22\x40\xca\x5e\x69\xe2\xc7"
              "\x8b\x32\x39\xec\xfa\xb2\x16\x49",
        .np    = 4,
        .tap    = { 7, 7, 7, 7 }
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa",
        .ksize    = 131,
        .plaintext = "Test Using Larger Than Block-Siz"
               "e Key - Hash Key First",
        .psize    = 54,
        .digest    = "\x4e\xce\x08\x44\x85\x81\x3e\x90"
              "\x88\xd2\xc6\x3a\x04\x1b\xc5\xb4"
              "\x4f\x9e\xf1\x01\x2a\x2b\x58\x8f"
              "\x3c\xd1\x1f\x05\x03\x3a\xc4\xc6"
              "\x0c\x2e\xf6\xab\x40\x30\xfe\x82"
              "\x96\x24\x8d\xf1\x63\xf4\x49\x52",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa",
        .ksize    = 131,
        .plaintext = "This is a test u"
               "sing a larger th"
               "an block-size ke"
               "y and a larger t"
               "han block-size d"
               "ata. The key nee"
               "ds to be hashed "
               "before being use"
               "d by the HMAC al"
               "gorithm.",
        .psize    = 152,
        .digest    = "\x66\x17\x17\x8e\x94\x1f\x02\x0d"
              "\x35\x1e\x2f\x25\x4e\x8f\xd3\x2c"
              "\x60\x24\x20\xfe\xb0\xb8\xfb\x9a"
              "\xdc\xce\xbb\x82\x46\x1e\x99\xc5"
              "\xa6\x78\xcc\x31\xe7\x99\x17\x6d"
              "\x38\x60\xe6\x11\x0c\x46\x52\x3e",
    },
};

/*
 * SHA512 HMAC test vectors from RFC4231
 */

#define HMAC_SHA512_TEST_VECTORS    4

static struct hash_testvec hmac_sha512_tv_template[] = {
    {
        .key    = "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
              "\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b"
              "\x0b\x0b\x0b\x0b",
        .ksize    = 20,
        .plaintext = "Hi There",
        .psize    = 8,
        .digest    = "\x87\xaa\x7c\xde\xa5\xef\x61\x9d"
              "\x4f\xf0\xb4\x24\x1a\x1d\x6c\xb0"
              "\x23\x79\xf4\xe2\xce\x4e\xc2\x78"
              "\x7a\xd0\xb3\x05\x45\xe1\x7c\xde"
              "\xda\xa8\x33\xb7\xd6\xb8\xa7\x02"
              "\x03\x8b\x27\x4e\xae\xa3\xf4\xe4"
              "\xbe\x9d\x91\x4e\xeb\x61\xf1\x70"
              "\x2e\x69\x6c\x20\x3a\x12\x68\x54",
    }, {
        .key    = "Jefe",
        .ksize    = 4,
        .plaintext = "what do ya want for nothing?",
        .psize    = 28,
        .digest    = "\x16\x4b\x7a\x7b\xfc\xf8\x19\xe2"
              "\xe3\x95\xfb\xe7\x3b\x56\xe0\xa3"
              "\x87\xbd\x64\x22\x2e\x83\x1f\xd6"
              "\x10\x27\x0c\xd7\xea\x25\x05\x54"
              "\x97\x58\xbf\x75\xc0\x5a\x99\x4a"
              "\x6d\x03\x4f\x65\xf8\xf0\xe6\xfd"
              "\xca\xea\xb1\xa3\x4d\x4a\x6b\x4b"
              "\x63\x6e\x07\x0a\x38\xbc\xe7\x37",
        .np    = 4,
        .tap    = { 7, 7, 7, 7 }
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
              "\xaa\xaa\xaa",
        .ksize    = 131,
        .plaintext = "Test Using Large"
               "r Than Block-Siz"
               "e Key - Hash Key"
               " First",
        .psize    = 54,
        .digest    = "\x80\xb2\x42\x63\xc7\xc1\xa3\xeb"
            "\xb7\x14\x93\xc1\xdd\x7b\xe8\xb4"
            "\x9b\x46\xd1\xf4\x1b\x4a\xee\xc1"
            "\x12\x1b\x01\x37\x83\xf8\xf3\x52"
            "\x6b\x56\xd0\x37\xe0\x5f\x25\x98"
            "\xbd\x0f\xd2\x21\x5d\x6a\x1e\x52"
            "\x95\xe6\x4f\x73\xf6\x3f\x0a\xec"
            "\x8b\x91\x5a\x98\x5d\x78\x65\x98",
    }, {
        .key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
            "\xaa\xaa\xaa",
        .ksize    = 131,
        .plaintext =
              "This is a test u"
              "sing a larger th"
              "an block-size ke"
              "y and a larger t"
              "han block-size d"
              "ata. The key nee"
              "ds to be hashed "
              "before being use"
              "d by the HMAC al"
              "gorithm.",
        .psize    = 152,
        .digest    = "\xe3\x7b\x6a\x77\x5d\xc8\x7d\xba"
            "\xa4\xdf\xa9\xf9\x6e\x5e\x3f\xfd"
            "\xde\xbd\x71\xf8\x86\x72\x89\x86"
            "\x5d\xf5\xa3\x2d\x20\xcd\xc9\x44"
            "\xb6\x02\x2c\xac\x3c\x49\x82\xb1"
            "\x0d\x5e\xeb\x55\xc3\xe4\xde\x15"
            "\x13\x46\x76\xfb\x6d\xe0\x44\x60"
            "\x65\xc9\x74\x40\xfa\x8c\x6a\x58",
    },
};

/*
 * DES test vectors.
 */
#define DES3_EDE_ENC_TEST_VECTORS    4
#define DES3_EDE_DEC_TEST_VECTORS    4
#define DES3_EDE_CBC_ENC_TEST_VECTORS    2
#define DES3_EDE_CBC_DEC_TEST_VECTORS    2
#define DES3_EDE_CTR_ENC_TEST_VECTORS    2
#define DES3_EDE_CTR_DEC_TEST_VECTORS    2

static struct cipher_testvec des3_ede_enc_tv_template[] = {
    { /* These are from openssl */
        .key    = "\x01\x23\x45\x67\x89\xab\xcd\xef"
              "\x55\x55\x55\x55\x55\x55\x55\x55"
              "\xfe\xdc\xba\x98\x76\x54\x32\x10",
        .klen    = 24,
        .input    = "\x73\x6f\x6d\x65\x64\x61\x74\x61",
        .ilen    = 8,
        .result    = "\x18\xd7\x48\xe5\x63\x62\x05\x72",
        .rlen    = 8,
    }, {
        .key    = "\x03\x52\x02\x07\x67\x20\x82\x17"
              "\x86\x02\x87\x66\x59\x08\x21\x98"
              "\x64\x05\x6a\xbd\xfe\xa9\x34\x57",
        .klen    = 24,
        .input    = "\x73\x71\x75\x69\x67\x67\x6c\x65",
        .ilen    = 8,
        .result    = "\xc0\x7d\x2a\x0f\xa5\x66\xfa\x30",
        .rlen    = 8,
    }, {
        .key    = "\x10\x46\x10\x34\x89\x98\x80\x20"
              "\x91\x07\xd0\x15\x89\x19\x01\x01"
              "\x19\x07\x92\x10\x98\x1a\x01\x01",
        .klen    = 24,
        .input    = "\x00\x00\x00\x00\x00\x00\x00\x00",
        .ilen    = 8,
        .result    = "\xe1\xef\x62\xc3\x32\xfe\x82\x5b",
        .rlen    = 8,
    }, { /* Generated with Crypto++ */
        .key    = "\xF3\x9C\xD6\xF3\x9C\xB9\x5A\x67"
              "\x00\x5A\x67\x00\x2D\xCE\xEB\x2D"
              "\xCE\xEB\xB4\x51\x72\xB4\x51\x72",
        .klen    = 24,
        .input    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .ilen    = 496,
        .result    = "\x4E\x9A\x40\x3D\x61\x7D\x17\xFA"
              "\x16\x86\x88\x0B\xD8\xAE\xF8\xE4"
              "\x81\x01\x04\x00\x76\xFA\xED\xD3"
              "\x44\x7E\x21\x9D\xF0\xFB\x2B\x64"
              "\xCA\x4E\x90\xE0\xC0\x63\x28\x92"
              "\xF3\x1F\xA4\x53\x2C\x77\xCC\x77"
              "\x69\x56\xD0\x19\xAD\x00\x2D\x97"
              "\xBC\xDE\x49\x6A\x82\xBC\x16\xE2"
              "\x2F\x3E\x72\xEE\xD1\xCE\xFC\x1B"
              "\xEA\x32\x56\xE4\x0B\xAF\x27\x36"
              "\xAF\x08\xB9\x61\xB7\x48\x23\x27"
              "\xEE\x4D\xC8\x79\x56\x06\xEB\xC7"
              "\x5B\xCA\x0A\xC6\x5E\x5C\xCB\xB6"
              "\x9D\xDA\x04\x59\xE2\x09\x48\x7E"
              "\x6B\x37\xC6\xFE\x92\xA9\x1E\x6E"
              "\x0D\x19\xFA\x33\x0F\xEE\x36\x68"
              "\x11\xBB\xF9\x5A\x73\xAB\x3A\xEA"
              "\xAC\x28\xD8\xD5\x27\xE8\x6B\x16"
              "\x45\x86\x50\x01\x70\x35\x99\x92"
              "\xDF\x0C\x07\x88\x8B\x7F\x9E\x4B"
              "\xD2\x04\x84\x90\xC4\x27\xDF\x0A"
              "\x49\xA8\xA7\x1A\x6D\x78\x16\xCA"
              "\xB3\x18\x5C\xC3\x93\x63\x5A\x68"
              "\x77\x02\xBA\xED\x62\x71\xB1\xD9"
              "\x5E\xE5\x6F\x1A\xCC\x1D\xBE\x2E"
              "\x11\xF3\xA6\x97\xCA\x8E\xBF\xB4"
              "\x56\xA1\x36\x6B\xB1\x0A\x3E\x70"
              "\xEA\xD7\xCD\x72\x7B\x79\xC8\xAD"
              "\x6B\xFE\xFB\xBA\x64\xAE\x19\xC1"
              "\x82\xCF\x8A\xA1\x50\x17\x7F\xB2"
              "\x6F\x7B\x0F\x52\xC5\x3E\x4A\x52"
              "\x3F\xD9\x3F\x01\xA6\x41\x1A\xB3"
              "\xB3\x7A\x0E\x8E\x75\xB2\xB1\x5F"
              "\xDB\xEA\x84\x13\x26\x6C\x85\x4E"
              "\xAE\x6B\xDC\xE7\xE7\xAD\xB0\x06"
              "\x5C\xBA\x92\xD0\x30\xBB\x8D\xD2"
              "\xAE\x4C\x70\x85\xA0\x07\xE3\x2C"
              "\xD1\x27\x9C\xCF\xDB\x13\xB7\xE5"
              "\xF9\x6A\x02\xD0\x39\x9D\xB6\xE7"
              "\xD1\x17\x25\x08\xF9\xA9\xA6\x67"
              "\x38\x80\xD1\x22\xAB\x1A\xD7\x26"
              "\xAD\xCA\x19\x1B\xFA\x18\xA7\x57"
              "\x31\xEC\xC9\xED\xDB\x79\xC0\x48"
              "\xAC\x31\x9F\x03\x8B\x62\x5B\x7E"
              "\x0E\xA6\xD0\x64\xEE\xEA\x00\xFC"
              "\x58\xC8\xDE\x51\x4E\x17\x15\x11"
              "\x66\x58\xB6\x90\xDC\xDF\xA1\x49"
              "\xCA\x79\xE9\x31\x31\x42\xDC\x56"
              "\x0B\xCD\xB6\x0D\xC7\x64\xF7\x19"
              "\xD9\x42\x05\x7F\xBC\x2F\xFC\x90"
              "\xAE\x29\x86\xAA\x43\x7A\x4F\x6B"
              "\xCE\xEA\xBC\x31\x8D\x65\x9D\x46"
              "\xEA\x77\xB4\xF9\x58\xEA\x5D\x84"
              "\xE4\xDC\x14\xBB\xBD\x15\x0E\xDA"
              "\xD8\xE4\xA4\x5D\x61\xF9\x58\x0F"
              "\xE4\x82\x77\xCE\x87\xC0\x09\xF0"
              "\xD6\x10\x9E\x34\xE1\x0C\x67\x55"
              "\x7B\x6D\xD5\x51\x4B\x00\xEE\xBA"
              "\xF2\x7B\xBE\x75\x07\x42\x9D\x99"
              "\x12\xE1\x71\x4A\xF9\x2A\xF5\xF6"
              "\x93\x03\xD7\x51\x09\xFA\xBE\x68"
              "\xD8\x45\xFF\x33\xBA\xBB\x2B\x63",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec des3_ede_dec_tv_template[] = {
    { /* These are from openssl */
        .key    = "\x01\x23\x45\x67\x89\xab\xcd\xef"
              "\x55\x55\x55\x55\x55\x55\x55\x55"
              "\xfe\xdc\xba\x98\x76\x54\x32\x10",
        .klen    = 24,
        .input    = "\x18\xd7\x48\xe5\x63\x62\x05\x72",
        .ilen    = 8,
        .result    = "\x73\x6f\x6d\x65\x64\x61\x74\x61",
        .rlen    = 8,
    }, {
        .key    = "\x03\x52\x02\x07\x67\x20\x82\x17"
              "\x86\x02\x87\x66\x59\x08\x21\x98"
              "\x64\x05\x6a\xbd\xfe\xa9\x34\x57",
        .klen    = 24,
        .input    = "\xc0\x7d\x2a\x0f\xa5\x66\xfa\x30",
        .ilen    = 8,
        .result    = "\x73\x71\x75\x69\x67\x67\x6c\x65",
        .rlen    = 8,
    }, {
        .key    = "\x10\x46\x10\x34\x89\x98\x80\x20"
              "\x91\x07\xd0\x15\x89\x19\x01\x01"
              "\x19\x07\x92\x10\x98\x1a\x01\x01",
        .klen    = 24,
        .input    = "\xe1\xef\x62\xc3\x32\xfe\x82\x5b",
        .ilen    = 8,
        .result    = "\x00\x00\x00\x00\x00\x00\x00\x00",
        .rlen    = 8,
    }, { /* Generated with Crypto++ */
        .key    = "\xF3\x9C\xD6\xF3\x9C\xB9\x5A\x67"
              "\x00\x5A\x67\x00\x2D\xCE\xEB\x2D"
              "\xCE\xEB\xB4\x51\x72\xB4\x51\x72",
        .klen    = 24,
        .input    = "\x4E\x9A\x40\x3D\x61\x7D\x17\xFA"
              "\x16\x86\x88\x0B\xD8\xAE\xF8\xE4"
              "\x81\x01\x04\x00\x76\xFA\xED\xD3"
              "\x44\x7E\x21\x9D\xF0\xFB\x2B\x64"
              "\xCA\x4E\x90\xE0\xC0\x63\x28\x92"
              "\xF3\x1F\xA4\x53\x2C\x77\xCC\x77"
              "\x69\x56\xD0\x19\xAD\x00\x2D\x97"
              "\xBC\xDE\x49\x6A\x82\xBC\x16\xE2"
              "\x2F\x3E\x72\xEE\xD1\xCE\xFC\x1B"
              "\xEA\x32\x56\xE4\x0B\xAF\x27\x36"
              "\xAF\x08\xB9\x61\xB7\x48\x23\x27"
              "\xEE\x4D\xC8\x79\x56\x06\xEB\xC7"
              "\x5B\xCA\x0A\xC6\x5E\x5C\xCB\xB6"
              "\x9D\xDA\x04\x59\xE2\x09\x48\x7E"
              "\x6B\x37\xC6\xFE\x92\xA9\x1E\x6E"
              "\x0D\x19\xFA\x33\x0F\xEE\x36\x68"
              "\x11\xBB\xF9\x5A\x73\xAB\x3A\xEA"
              "\xAC\x28\xD8\xD5\x27\xE8\x6B\x16"
              "\x45\x86\x50\x01\x70\x35\x99\x92"
              "\xDF\x0C\x07\x88\x8B\x7F\x9E\x4B"
              "\xD2\x04\x84\x90\xC4\x27\xDF\x0A"
              "\x49\xA8\xA7\x1A\x6D\x78\x16\xCA"
              "\xB3\x18\x5C\xC3\x93\x63\x5A\x68"
              "\x77\x02\xBA\xED\x62\x71\xB1\xD9"
              "\x5E\xE5\x6F\x1A\xCC\x1D\xBE\x2E"
              "\x11\xF3\xA6\x97\xCA\x8E\xBF\xB4"
              "\x56\xA1\x36\x6B\xB1\x0A\x3E\x70"
              "\xEA\xD7\xCD\x72\x7B\x79\xC8\xAD"
              "\x6B\xFE\xFB\xBA\x64\xAE\x19\xC1"
              "\x82\xCF\x8A\xA1\x50\x17\x7F\xB2"
              "\x6F\x7B\x0F\x52\xC5\x3E\x4A\x52"
              "\x3F\xD9\x3F\x01\xA6\x41\x1A\xB3"
              "\xB3\x7A\x0E\x8E\x75\xB2\xB1\x5F"
              "\xDB\xEA\x84\x13\x26\x6C\x85\x4E"
              "\xAE\x6B\xDC\xE7\xE7\xAD\xB0\x06"
              "\x5C\xBA\x92\xD0\x30\xBB\x8D\xD2"
              "\xAE\x4C\x70\x85\xA0\x07\xE3\x2C"
              "\xD1\x27\x9C\xCF\xDB\x13\xB7\xE5"
              "\xF9\x6A\x02\xD0\x39\x9D\xB6\xE7"
              "\xD1\x17\x25\x08\xF9\xA9\xA6\x67"
              "\x38\x80\xD1\x22\xAB\x1A\xD7\x26"
              "\xAD\xCA\x19\x1B\xFA\x18\xA7\x57"
              "\x31\xEC\xC9\xED\xDB\x79\xC0\x48"
              "\xAC\x31\x9F\x03\x8B\x62\x5B\x7E"
              "\x0E\xA6\xD0\x64\xEE\xEA\x00\xFC"
              "\x58\xC8\xDE\x51\x4E\x17\x15\x11"
              "\x66\x58\xB6\x90\xDC\xDF\xA1\x49"
              "\xCA\x79\xE9\x31\x31\x42\xDC\x56"
              "\x0B\xCD\xB6\x0D\xC7\x64\xF7\x19"
              "\xD9\x42\x05\x7F\xBC\x2F\xFC\x90"
              "\xAE\x29\x86\xAA\x43\x7A\x4F\x6B"
              "\xCE\xEA\xBC\x31\x8D\x65\x9D\x46"
              "\xEA\x77\xB4\xF9\x58\xEA\x5D\x84"
              "\xE4\xDC\x14\xBB\xBD\x15\x0E\xDA"
              "\xD8\xE4\xA4\x5D\x61\xF9\x58\x0F"
              "\xE4\x82\x77\xCE\x87\xC0\x09\xF0"
              "\xD6\x10\x9E\x34\xE1\x0C\x67\x55"
              "\x7B\x6D\xD5\x51\x4B\x00\xEE\xBA"
              "\xF2\x7B\xBE\x75\x07\x42\x9D\x99"
              "\x12\xE1\x71\x4A\xF9\x2A\xF5\xF6"
              "\x93\x03\xD7\x51\x09\xFA\xBE\x68"
              "\xD8\x45\xFF\x33\xBA\xBB\x2B\x63",
        .ilen    = 496,
        .result    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec des3_ede_cbc_enc_tv_template[] = {
    { /* Generated from openssl */
        .key    = "\xE9\xC0\xFF\x2E\x76\x0B\x64\x24"
              "\x44\x4D\x99\x5A\x12\xD6\x40\xC0"
              "\xEA\xC2\x84\xE8\x14\x95\xDB\xE8",
        .klen    = 24,
        .iv    = "\x7D\x33\x88\x93\x0F\x93\xB2\x42",
        .input    = "\x6f\x54\x20\x6f\x61\x4d\x79\x6e"
              "\x53\x20\x63\x65\x65\x72\x73\x74"
              "\x54\x20\x6f\x6f\x4d\x20\x6e\x61"
              "\x20\x79\x65\x53\x72\x63\x74\x65"
              "\x20\x73\x6f\x54\x20\x6f\x61\x4d"
              "\x79\x6e\x53\x20\x63\x65\x65\x72"
              "\x73\x74\x54\x20\x6f\x6f\x4d\x20"
              "\x6e\x61\x20\x79\x65\x53\x72\x63"
              "\x74\x65\x20\x73\x6f\x54\x20\x6f"
              "\x61\x4d\x79\x6e\x53\x20\x63\x65"
              "\x65\x72\x73\x74\x54\x20\x6f\x6f"
              "\x4d\x20\x6e\x61\x20\x79\x65\x53"
              "\x72\x63\x74\x65\x20\x73\x6f\x54"
              "\x20\x6f\x61\x4d\x79\x6e\x53\x20"
              "\x63\x65\x65\x72\x73\x74\x54\x20"
              "\x6f\x6f\x4d\x20\x6e\x61\x0a\x79",
        .ilen    = 128,
        .result    = "\x0e\x2d\xb6\x97\x3c\x56\x33\xf4"
              "\x67\x17\x21\xc7\x6e\x8a\xd5\x49"
              "\x74\xb3\x49\x05\xc5\x1c\xd0\xed"
              "\x12\x56\x5c\x53\x96\xb6\x00\x7d"
              "\x90\x48\xfc\xf5\x8d\x29\x39\xcc"
              "\x8a\xd5\x35\x18\x36\x23\x4e\xd7"
              "\x76\xd1\xda\x0c\x94\x67\xbb\x04"
              "\x8b\xf2\x03\x6c\xa8\xcf\xb6\xea"
              "\x22\x64\x47\xaa\x8f\x75\x13\xbf"
              "\x9f\xc2\xc3\xf0\xc9\x56\xc5\x7a"
              "\x71\x63\x2e\x89\x7b\x1e\x12\xca"
              "\xe2\x5f\xaf\xd8\xa4\xf8\xc9\x7a"
              "\xd6\xf9\x21\x31\x62\x44\x45\xa6"
              "\xd6\xbc\x5a\xd3\x2d\x54\x43\xcc"
              "\x9d\xde\xa5\x70\xe9\x42\x45\x8a"
              "\x6b\xfa\xb1\x91\x13\xb0\xd9\x19",
        .rlen    = 128,
    }, { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xB2\xD7\x48\xED\x06\x44\xF9\x12"
              "\xB7\x28\x4D\x83\x24\x59\xF2\x17",
        .input    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .ilen    = 496,
        .result    = "\xF8\xF6\xB5\x60\x5C\x5A\x75\x84"
              "\x87\x81\x53\xBA\xC9\x6F\xEC\xD5"
              "\x1E\x68\x8E\x85\x12\x86\x1D\x38"
              "\x1C\x91\x40\xCC\x69\x6A\xD5\x35"
              "\x0D\x7C\xB5\x07\x7C\x7B\x2A\xAF"
              "\x32\xBC\xA1\xB3\x84\x31\x1B\x3C"
              "\x0A\x2B\xFA\xD3\x9F\xB0\x8C\x37"
              "\x8F\x9D\xA7\x6D\x6C\xFA\xD7\x90"
              "\xE3\x69\x54\xED\x3A\xC4\xF1\x6B"
              "\xB1\xCC\xFB\x7D\xD8\x8E\x17\x0B"
              "\x9C\xF6\x4C\xD6\xFF\x03\x4E\xD9"
              "\xE6\xA5\xAD\x25\xE6\x17\x69\x63"
              "\x11\x35\x61\x94\x88\x7B\x1C\x48"
              "\xF1\x24\x20\x29\x6B\x93\x1A\x8E"
              "\x43\x03\x89\xD8\xB1\xDA\x47\x7B"
              "\x79\x3A\x83\x76\xDA\xAE\xC6\xBB"
              "\x22\xF8\xE8\x3D\x9A\x65\x54\xD8"
              "\x4C\xE9\xE7\xE4\x63\x2F\x5C\x73"
              "\x5A\xC3\xAE\x46\xA8\xCD\x57\xE6"
              "\x67\x88\xA5\x20\x6F\x5F\x97\xC7"
              "\xCC\x15\xA2\x0A\x93\xEA\x33\xE7"
              "\x03\x5F\xEC\x64\x30\x6F\xEE\xD7"
              "\x7E\xDF\xD6\xE9\x6F\x3F\xD6\x1E"
              "\xBE\x67\x6C\x5B\x97\xA0\x09\xE6"
              "\xEE\xFE\x55\xA3\x29\x65\xE0\x12"
              "\xA1\x6A\x8A\x6F\xF2\xE6\xF1\x96"
              "\x87\xFB\x9C\x05\xDD\x80\xEC\xFF"
              "\xC5\xED\x50\xFE\xFC\x91\xCD\xCE"
              "\x25\x2C\x5F\xD9\xAD\x95\x7D\x99"
              "\xF0\x05\xC4\x71\x46\x5F\xF9\x0D"
              "\xD2\x63\xDF\x9B\x96\x2E\x2B\xA6"
              "\x2B\x1C\xD5\xFB\x96\x24\x60\x60"
              "\x54\x40\xB8\x62\xA4\xF8\x46\x95"
              "\x73\x28\xA3\xA6\x16\x2B\x17\xE7"
              "\x7A\xF8\x62\x54\x3B\x64\x69\xE1"
              "\x71\x34\x29\x5B\x4E\x05\x9B\xFA"
              "\x5E\xF1\x96\xB7\xCE\x16\x9B\x59"
              "\xF1\x1A\x4C\x51\x26\xFD\x79\xE2"
              "\x3B\x8E\x71\x69\x6A\x91\xB6\x65"
              "\x32\x09\xB8\xE4\x09\x1F\xEA\x39"
              "\xCE\x20\x65\x9F\xD6\xD1\xC7\xF0"
              "\x73\x50\x08\x56\x20\x9B\x94\x23"
              "\x14\x39\xB7\x2B\xB1\x2D\x6D\x6F"
              "\x41\x5B\xCC\xE2\x18\xAE\x62\x89"
              "\x78\x8E\x67\x23\xD0\xFB\x2B\xE5"
              "\x25\xC9\x48\x97\xB5\xD3\x17\xD5"
              "\x6A\x9F\xA7\x48\x0C\x2B\x73\x3B"
              "\x57\x08\xAE\x91\xF2\xB7\x57\x89"
              "\xF4\xD0\xB0\x07\xB0\x42\x6C\xAF"
              "\x98\x1A\xE7\xD1\xAC\x1E\xB5\x02"
              "\xD4\x56\x42\x79\x79\x7F\x2A\x77"
              "\x25\xE9\x7D\xC1\x88\x19\x2B\x49"
              "\x6F\x46\x59\xAB\x56\x1F\x61\xE0"
              "\x0C\x24\x9C\xC9\x5B\x63\xA9\x12"
              "\xCF\x88\x96\xB6\xA8\x24\xC6\xA8"
              "\x21\x85\x1A\x62\x7E\x34\xBB\xEB"
              "\xBD\x02\x2A\xC7\xD8\x89\x80\xC5"
              "\xB1\xBB\x60\xA5\x22\xFC\x6F\x38"
              "\x02\x80\xA3\x28\x22\x75\xE1\xE9"
              "\x90\xE9\xFA\x4B\x00\x10\xAC\x58"
              "\x83\x70\xFF\x86\xE6\xAA\x0F\x1F"
              "\x95\x63\x73\xA2\x44\xAC\xF8\xA5",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec des3_ede_cbc_dec_tv_template[] = {
    { /* Generated from openssl */
        .key    = "\xE9\xC0\xFF\x2E\x76\x0B\x64\x24"
              "\x44\x4D\x99\x5A\x12\xD6\x40\xC0"
              "\xEA\xC2\x84\xE8\x14\x95\xDB\xE8",
        .klen    = 24,
        .iv    = "\x7D\x33\x88\x93\x0F\x93\xB2\x42",
        .input    = "\x0e\x2d\xb6\x97\x3c\x56\x33\xf4"
              "\x67\x17\x21\xc7\x6e\x8a\xd5\x49"
              "\x74\xb3\x49\x05\xc5\x1c\xd0\xed"
              "\x12\x56\x5c\x53\x96\xb6\x00\x7d"
              "\x90\x48\xfc\xf5\x8d\x29\x39\xcc"
              "\x8a\xd5\x35\x18\x36\x23\x4e\xd7"
              "\x76\xd1\xda\x0c\x94\x67\xbb\x04"
              "\x8b\xf2\x03\x6c\xa8\xcf\xb6\xea"
              "\x22\x64\x47\xaa\x8f\x75\x13\xbf"
              "\x9f\xc2\xc3\xf0\xc9\x56\xc5\x7a"
              "\x71\x63\x2e\x89\x7b\x1e\x12\xca"
              "\xe2\x5f\xaf\xd8\xa4\xf8\xc9\x7a"
              "\xd6\xf9\x21\x31\x62\x44\x45\xa6"
              "\xd6\xbc\x5a\xd3\x2d\x54\x43\xcc"
              "\x9d\xde\xa5\x70\xe9\x42\x45\x8a"
              "\x6b\xfa\xb1\x91\x13\xb0\xd9\x19",
        .ilen    = 128,
        .result    = "\x6f\x54\x20\x6f\x61\x4d\x79\x6e"
              "\x53\x20\x63\x65\x65\x72\x73\x74"
              "\x54\x20\x6f\x6f\x4d\x20\x6e\x61"
              "\x20\x79\x65\x53\x72\x63\x74\x65"
              "\x20\x73\x6f\x54\x20\x6f\x61\x4d"
              "\x79\x6e\x53\x20\x63\x65\x65\x72"
              "\x73\x74\x54\x20\x6f\x6f\x4d\x20"
              "\x6e\x61\x20\x79\x65\x53\x72\x63"
              "\x74\x65\x20\x73\x6f\x54\x20\x6f"
              "\x61\x4d\x79\x6e\x53\x20\x63\x65"
              "\x65\x72\x73\x74\x54\x20\x6f\x6f"
              "\x4d\x20\x6e\x61\x20\x79\x65\x53"
              "\x72\x63\x74\x65\x20\x73\x6f\x54"
              "\x20\x6f\x61\x4d\x79\x6e\x53\x20"
              "\x63\x65\x65\x72\x73\x74\x54\x20"
              "\x6f\x6f\x4d\x20\x6e\x61\x0a\x79",
        .rlen    = 128,
    }, { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xB2\xD7\x48\xED\x06\x44\xF9\x12"
              "\xB7\x28\x4D\x83\x24\x59\xF2\x17",
        .input    = "\xF8\xF6\xB5\x60\x5C\x5A\x75\x84"
              "\x87\x81\x53\xBA\xC9\x6F\xEC\xD5"
              "\x1E\x68\x8E\x85\x12\x86\x1D\x38"
              "\x1C\x91\x40\xCC\x69\x6A\xD5\x35"
              "\x0D\x7C\xB5\x07\x7C\x7B\x2A\xAF"
              "\x32\xBC\xA1\xB3\x84\x31\x1B\x3C"
              "\x0A\x2B\xFA\xD3\x9F\xB0\x8C\x37"
              "\x8F\x9D\xA7\x6D\x6C\xFA\xD7\x90"
              "\xE3\x69\x54\xED\x3A\xC4\xF1\x6B"
              "\xB1\xCC\xFB\x7D\xD8\x8E\x17\x0B"
              "\x9C\xF6\x4C\xD6\xFF\x03\x4E\xD9"
              "\xE6\xA5\xAD\x25\xE6\x17\x69\x63"
              "\x11\x35\x61\x94\x88\x7B\x1C\x48"
              "\xF1\x24\x20\x29\x6B\x93\x1A\x8E"
              "\x43\x03\x89\xD8\xB1\xDA\x47\x7B"
              "\x79\x3A\x83\x76\xDA\xAE\xC6\xBB"
              "\x22\xF8\xE8\x3D\x9A\x65\x54\xD8"
              "\x4C\xE9\xE7\xE4\x63\x2F\x5C\x73"
              "\x5A\xC3\xAE\x46\xA8\xCD\x57\xE6"
              "\x67\x88\xA5\x20\x6F\x5F\x97\xC7"
              "\xCC\x15\xA2\x0A\x93\xEA\x33\xE7"
              "\x03\x5F\xEC\x64\x30\x6F\xEE\xD7"
              "\x7E\xDF\xD6\xE9\x6F\x3F\xD6\x1E"
              "\xBE\x67\x6C\x5B\x97\xA0\x09\xE6"
              "\xEE\xFE\x55\xA3\x29\x65\xE0\x12"
              "\xA1\x6A\x8A\x6F\xF2\xE6\xF1\x96"
              "\x87\xFB\x9C\x05\xDD\x80\xEC\xFF"
              "\xC5\xED\x50\xFE\xFC\x91\xCD\xCE"
              "\x25\x2C\x5F\xD9\xAD\x95\x7D\x99"
              "\xF0\x05\xC4\x71\x46\x5F\xF9\x0D"
              "\xD2\x63\xDF\x9B\x96\x2E\x2B\xA6"
              "\x2B\x1C\xD5\xFB\x96\x24\x60\x60"
              "\x54\x40\xB8\x62\xA4\xF8\x46\x95"
              "\x73\x28\xA3\xA6\x16\x2B\x17\xE7"
              "\x7A\xF8\x62\x54\x3B\x64\x69\xE1"
              "\x71\x34\x29\x5B\x4E\x05\x9B\xFA"
              "\x5E\xF1\x96\xB7\xCE\x16\x9B\x59"
              "\xF1\x1A\x4C\x51\x26\xFD\x79\xE2"
              "\x3B\x8E\x71\x69\x6A\x91\xB6\x65"
              "\x32\x09\xB8\xE4\x09\x1F\xEA\x39"
              "\xCE\x20\x65\x9F\xD6\xD1\xC7\xF0"
              "\x73\x50\x08\x56\x20\x9B\x94\x23"
              "\x14\x39\xB7\x2B\xB1\x2D\x6D\x6F"
              "\x41\x5B\xCC\xE2\x18\xAE\x62\x89"
              "\x78\x8E\x67\x23\xD0\xFB\x2B\xE5"
              "\x25\xC9\x48\x97\xB5\xD3\x17\xD5"
              "\x6A\x9F\xA7\x48\x0C\x2B\x73\x3B"
              "\x57\x08\xAE\x91\xF2\xB7\x57\x89"
              "\xF4\xD0\xB0\x07\xB0\x42\x6C\xAF"
              "\x98\x1A\xE7\xD1\xAC\x1E\xB5\x02"
              "\xD4\x56\x42\x79\x79\x7F\x2A\x77"
              "\x25\xE9\x7D\xC1\x88\x19\x2B\x49"
              "\x6F\x46\x59\xAB\x56\x1F\x61\xE0"
              "\x0C\x24\x9C\xC9\x5B\x63\xA9\x12"
              "\xCF\x88\x96\xB6\xA8\x24\xC6\xA8"
              "\x21\x85\x1A\x62\x7E\x34\xBB\xEB"
              "\xBD\x02\x2A\xC7\xD8\x89\x80\xC5"
              "\xB1\xBB\x60\xA5\x22\xFC\x6F\x38"
              "\x02\x80\xA3\x28\x22\x75\xE1\xE9"
              "\x90\xE9\xFA\x4B\x00\x10\xAC\x58"
              "\x83\x70\xFF\x86\xE6\xAA\x0F\x1F"
              "\x95\x63\x73\xA2\x44\xAC\xF8\xA5",
        .ilen    = 496,
        .result    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec des3_ede_ctr_enc_tv_template[] = {
    { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD",
        .input    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .ilen    = 496,
        .result    = "\x07\xC2\x08\x20\x72\x1F\x49\xEF"
              "\x19\xCD\x6F\x32\x53\x05\x22\x15"
              "\xA2\x85\x2B\xDB\x85\xD2\xD8\xB9"
              "\xDD\x0D\x1B\x45\xCB\x69\x11\xD4"
              "\xEA\xBE\xB2\x45\x5D\x0C\xAE\xBE"
              "\xA0\xC1\x27\xAC\x65\x9F\x53\x7E"
              "\xAF\xC2\x1B\xB5\xB8\x6D\x36\x0C"
              "\x25\xC0\xF8\x6D\x0B\x29\x01\xDA"
              "\x13\x78\xDC\x89\x12\x12\x43\xFA"
              "\xF6\x12\xEF\x8D\x87\x62\x78\x83"
              "\xE2\xBE\x41\x20\x4C\x6D\x35\x1B"
              "\xD1\x0C\x30\xCF\xE2\xDE\x2B\x03"
              "\xBF\x45\x73\xD4\xE5\x59\x95\xD1"
              "\xB3\x9B\x27\x62\x97\xBD\xDE\x7F"
              "\xA4\xD2\x39\x80\xAA\x50\x23\xF0"
              "\x74\x88\x3D\xA8\x6A\x18\x79\x3B"
              "\xC4\x96\x6C\x8D\x22\x40\x92\x6E"
              "\xD6\xAD\x2A\x1F\xDE\x63\xC0\xE7"
              "\x07\xF7\x2D\xF7\xB5\xF3\xF0\xCC"
              "\x01\x7C\x2A\x9B\xC2\x10\xCA\xAA"
              "\xFD\x2B\x3F\xC5\xF3\xF6\xFC\x9B"
              "\x45\xDB\x53\xE4\x5B\xF3\xC9\x7B"
              "\x8E\x52\xFF\xC8\x02\xB8\xAC\x9D"
              "\xA1\x00\x39\xDA\x3D\x2D\x0E\x01"
              "\x09\x7D\x8D\x5E\xBE\x53\xB9\xB0"
              "\x8E\xE7\xE2\x96\x6A\xB2\x78\xEA"
              "\xDE\x23\x8B\xA5\xFA\x5C\xE3\xDA"
              "\xBF\x8E\x31\x6A\x55\xD1\x6A\xB2"
              "\xB5\x46\x6F\xA5\xF0\xEE\xBA\x1F"
              "\x9F\x98\xB0\x66\x4F\xD0\x3F\xA9"
              "\xDF\x5F\x58\xC4\xF4\xFF\x75\x5C"
              "\x40\x3A\x09\x7E\x6E\x1C\x97\xD4"
              "\xCC\xE7\xE7\x71\xCF\x0B\x15\x08"
              "\x71\xFA\x07\x97\xCD\xE6\xCA\x1D"
              "\x14\x28\x0C\xCF\x99\x13\x7A\xF1"
              "\xEB\xFA\xFA\x92\x07\xDE\x1D\xA1"
              "\xD3\x36\x69\xFE\x51\x4D\x9F\x2E"
              "\x83\x37\x4F\x1F\x48\x30\xED\x04"
              "\x4D\xA4\xEF\x3A\xCA\x76\xF4\x1C"
              "\x41\x8F\x63\x37\x78\x2F\x86\xA6"
              "\xEF\x41\x7E\xD2\xAF\x88\xAB\x67"
              "\x52\x71\xC3\x8E\xF8\x26\x93\x72"
              "\xAA\xD6\x0E\xE7\x0B\x46\xB1\x3A"
              "\xB4\x08\xA9\xA8\xA0\xCF\x20\x0C"
              "\x52\xBC\x8B\x05\x56\xB2\xBC\x31"
              "\x9B\x74\xB9\x29\x29\x96\x9A\x50"
              "\xDC\x45\xDC\x1A\xEB\x0C\x64\xD4"
              "\xD3\x05\x7E\x59\x55\xC3\xF4\x90"
              "\xC2\xAB\xF8\x9B\x8A\xDA\xCE\xA1"
              "\xC3\xF4\xAD\x77\xDD\x44\xC8\xAC"
              "\xA3\xF1\xC9\xD2\x19\x5C\xB0\xCA"
              "\xA2\x34\xC1\xF7\x6C\xFD\xAC\x65"
              "\x32\xDC\x48\xC4\xF2\x00\x6B\x77"
              "\xF1\x7D\x76\xAC\xC0\x31\x63\x2A"
              "\xA5\x3A\x62\xC8\x91\xB1\x03\x65"
              "\xCB\x43\xD1\x06\xDF\xC3\x67\xBC"
              "\xDC\xE0\xCD\x35\xCE\x49\x65\xA0"
              "\x52\x7B\xA7\x0D\x07\xA9\x1B\xB0"
              "\x40\x77\x72\xC2\xEA\x0E\x3A\x78"
              "\x46\xB9\x91\xB6\xE7\x3D\x51\x42"
              "\xFD\x51\xB0\xC6\x2C\x63\x13\x78"
              "\x5C\xEE\xFC\xCF\xC4\x70\x00\x34",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    }, { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xB2\xD7\x48\xED\x06\x44\xF9\x12"
              "\xB7\x28\x4D\x83\x24\x59\xF2\x17",
        .input    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47"
              "\x2E\xB1\x18",
        .ilen    = 499,
        .result    = "\x23\xFF\x5C\x99\x75\xBB\x1F\xD4"
              "\xBC\x27\x9D\x36\x60\xA9\xC9\xF7"
              "\x94\x9D\x1B\xFF\x8E\x95\x57\x89"
              "\x8C\x2E\x33\x70\x43\x61\xE6\xD2"
              "\x82\x33\x63\xB6\xC4\x34\x5E\xF8"
              "\x96\x07\xA7\xD2\x3B\x8E\xC9\xAA"
              "\x7C\xA0\x55\x89\x2E\xE1\x85\x25"
              "\x14\x04\xDA\x6B\xE0\xEE\x56\xCF"
              "\x08\x2E\x69\xD4\x54\xDE\x22\x84"
              "\x69\xA6\xA7\xD3\x3A\x9A\xE8\x05"
              "\x63\xDB\xBF\x46\x3A\x26\x2E\x0F"
              "\x58\x5C\x46\xEA\x07\x40\xDA\xE1"
              "\x14\x1D\xCD\x4F\x06\xC0\xCA\x54"
              "\x1E\xC9\x45\x85\x67\x7C\xC2\xB5"
              "\x97\x5D\x61\x78\x2E\x46\xEC\x6A"
              "\x53\xF4\xD0\xAE\xFA\xB4\x86\x29"
              "\x9F\x17\x33\x24\xD8\xB9\xB2\x05"
              "\x93\x88\xEA\xF7\xA0\x70\x69\x49"
              "\x88\x6B\x73\x40\x41\x8D\xD9\xD9"
              "\x7E\x78\xE9\xBE\x6C\x14\x22\x7A"
              "\x66\xE1\xDA\xED\x10\xFF\x69\x1D"
              "\xB9\xAA\xF2\x56\x72\x1B\x23\xE2"
              "\x45\x54\x8B\xA3\x70\x23\xB4\x5E"
              "\x8E\x96\xC9\x05\x00\xB3\xB6\xC2"
              "\x2A\x02\x43\x7A\x62\xD5\xC8\xD2"
              "\xC2\xD0\xE4\x78\xA1\x7B\x3E\xE8"
              "\x9F\x7F\x7D\x40\x54\x30\x3B\xC0"
              "\xA5\x54\xFD\xCA\x25\xEC\x44\x3E"
              "\x1A\x54\x7F\x88\xD0\xE1\xFE\x71"
              "\xCE\x05\x49\x89\xBA\xD6\x72\xE7"
              "\xD6\x5D\x3F\xA2\xD9\xAB\xC5\x02"
              "\xD6\x43\x22\xAF\xA2\xE4\x80\x85"
              "\xD7\x87\xB9\xEA\x43\xDB\xC8\xEF"
              "\x5C\x82\x2E\x98\x0D\x30\x41\x6B"
              "\x08\x48\x8D\xF0\xF8\x60\xD7\x9D"
              "\xE9\xDE\x40\xAD\x0D\xAD\x0D\x58"
              "\x2A\x98\x35\xFE\xF7\xDD\x4B\x40"
              "\xDE\xB0\x05\xD9\x7B\x09\x4D\xBC"
              "\x42\xC0\xF1\x15\x0B\xFA\x26\x6B"
              "\xC6\x12\x13\x4F\xCB\x35\xBA\x35"
              "\xDD\x7A\x36\x9C\x12\x57\x55\x83"
              "\x78\x58\x09\xD0\xB0\xCF\x7C\x5C"
              "\x38\xCF\xBD\x79\x5B\x13\x4D\x97"
              "\xC1\x85\x6F\x97\xC9\xE8\xC2\xA4"
              "\x98\xE2\xBD\x77\x6B\x53\x39\x1A"
              "\x28\x10\xE7\xE0\xE7\xDE\x9D\x69"
              "\x78\x6F\x8E\xD2\xD9\x5D\xD2\x15"
              "\x9E\xB5\x4D\x8C\xC0\x78\x22\x2F"
              "\x17\x11\x2E\x99\xD7\xE3\xA4\x4F"
              "\x65\xA5\x6B\x03\x2C\x35\x6F\xDA"
              "\x8A\x19\x08\xE1\x08\x48\x59\x51"
              "\x53\x4B\xD1\xDF\xDA\x14\x50\x5F"
              "\xDF\xB5\x8C\xDF\xC6\xFD\x85\xFA"
              "\xD4\xF9\x64\x45\x65\x0D\x7D\xF4"
              "\xC8\xCD\x3F\x32\xAF\xDD\x30\xED"
              "\x7B\xAA\xAC\xF0\xDA\x7F\xDF\x75"
              "\x1C\xA4\xF1\xCB\x5E\x4F\x0B\xB4"
              "\x97\x73\x28\xDE\xCF\xAF\x82\xBD"
              "\xC4\xBA\xB4\x9C\x0D\x16\x77\x42"
              "\x42\x39\x7C\x53\xA4\xD4\xDD\x40"
              "\x5C\x60\x1F\x6E\xA7\xE2\xDC\xE7"
              "\x32\x0F\x05\x2F\xF2\x4C\x95\x3B"
              "\xF2\x79\xD9",
        .rlen    = 499,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 499 - 16, 16 },
    },
};

static struct cipher_testvec des3_ede_ctr_dec_tv_template[] = {
    { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD",
        .input    = "\x07\xC2\x08\x20\x72\x1F\x49\xEF"
              "\x19\xCD\x6F\x32\x53\x05\x22\x15"
              "\xA2\x85\x2B\xDB\x85\xD2\xD8\xB9"
              "\xDD\x0D\x1B\x45\xCB\x69\x11\xD4"
              "\xEA\xBE\xB2\x45\x5D\x0C\xAE\xBE"
              "\xA0\xC1\x27\xAC\x65\x9F\x53\x7E"
              "\xAF\xC2\x1B\xB5\xB8\x6D\x36\x0C"
              "\x25\xC0\xF8\x6D\x0B\x29\x01\xDA"
              "\x13\x78\xDC\x89\x12\x12\x43\xFA"
              "\xF6\x12\xEF\x8D\x87\x62\x78\x83"
              "\xE2\xBE\x41\x20\x4C\x6D\x35\x1B"
              "\xD1\x0C\x30\xCF\xE2\xDE\x2B\x03"
              "\xBF\x45\x73\xD4\xE5\x59\x95\xD1"
              "\xB3\x9B\x27\x62\x97\xBD\xDE\x7F"
              "\xA4\xD2\x39\x80\xAA\x50\x23\xF0"
              "\x74\x88\x3D\xA8\x6A\x18\x79\x3B"
              "\xC4\x96\x6C\x8D\x22\x40\x92\x6E"
              "\xD6\xAD\x2A\x1F\xDE\x63\xC0\xE7"
              "\x07\xF7\x2D\xF7\xB5\xF3\xF0\xCC"
              "\x01\x7C\x2A\x9B\xC2\x10\xCA\xAA"
              "\xFD\x2B\x3F\xC5\xF3\xF6\xFC\x9B"
              "\x45\xDB\x53\xE4\x5B\xF3\xC9\x7B"
              "\x8E\x52\xFF\xC8\x02\xB8\xAC\x9D"
              "\xA1\x00\x39\xDA\x3D\x2D\x0E\x01"
              "\x09\x7D\x8D\x5E\xBE\x53\xB9\xB0"
              "\x8E\xE7\xE2\x96\x6A\xB2\x78\xEA"
              "\xDE\x23\x8B\xA5\xFA\x5C\xE3\xDA"
              "\xBF\x8E\x31\x6A\x55\xD1\x6A\xB2"
              "\xB5\x46\x6F\xA5\xF0\xEE\xBA\x1F"
              "\x9F\x98\xB0\x66\x4F\xD0\x3F\xA9"
              "\xDF\x5F\x58\xC4\xF4\xFF\x75\x5C"
              "\x40\x3A\x09\x7E\x6E\x1C\x97\xD4"
              "\xCC\xE7\xE7\x71\xCF\x0B\x15\x08"
              "\x71\xFA\x07\x97\xCD\xE6\xCA\x1D"
              "\x14\x28\x0C\xCF\x99\x13\x7A\xF1"
              "\xEB\xFA\xFA\x92\x07\xDE\x1D\xA1"
              "\xD3\x36\x69\xFE\x51\x4D\x9F\x2E"
              "\x83\x37\x4F\x1F\x48\x30\xED\x04"
              "\x4D\xA4\xEF\x3A\xCA\x76\xF4\x1C"
              "\x41\x8F\x63\x37\x78\x2F\x86\xA6"
              "\xEF\x41\x7E\xD2\xAF\x88\xAB\x67"
              "\x52\x71\xC3\x8E\xF8\x26\x93\x72"
              "\xAA\xD6\x0E\xE7\x0B\x46\xB1\x3A"
              "\xB4\x08\xA9\xA8\xA0\xCF\x20\x0C"
              "\x52\xBC\x8B\x05\x56\xB2\xBC\x31"
              "\x9B\x74\xB9\x29\x29\x96\x9A\x50"
              "\xDC\x45\xDC\x1A\xEB\x0C\x64\xD4"
              "\xD3\x05\x7E\x59\x55\xC3\xF4\x90"
              "\xC2\xAB\xF8\x9B\x8A\xDA\xCE\xA1"
              "\xC3\xF4\xAD\x77\xDD\x44\xC8\xAC"
              "\xA3\xF1\xC9\xD2\x19\x5C\xB0\xCA"
              "\xA2\x34\xC1\xF7\x6C\xFD\xAC\x65"
              "\x32\xDC\x48\xC4\xF2\x00\x6B\x77"
              "\xF1\x7D\x76\xAC\xC0\x31\x63\x2A"
              "\xA5\x3A\x62\xC8\x91\xB1\x03\x65"
              "\xCB\x43\xD1\x06\xDF\xC3\x67\xBC"
              "\xDC\xE0\xCD\x35\xCE\x49\x65\xA0"
              "\x52\x7B\xA7\x0D\x07\xA9\x1B\xB0"
              "\x40\x77\x72\xC2\xEA\x0E\x3A\x78"
              "\x46\xB9\x91\xB6\xE7\x3D\x51\x42"
              "\xFD\x51\xB0\xC6\x2C\x63\x13\x78"
              "\x5C\xEE\xFC\xCF\xC4\x70\x00\x34",
        .ilen    = 496,
        .result    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    }, { /* Generated with Crypto++ */
        .key    = "\x9C\xD6\xF3\x9C\xB9\x5A\x67\x00"
              "\x5A\x67\x00\x2D\xCE\xEB\x2D\xCE"
              "\xEB\xB4\x51\x72\xB4\x51\x72\x1F",
        .klen    = 24,
        .iv    = "\xB2\xD7\x48\xED\x06\x44\xF9\x12"
              "\xB7\x28\x4D\x83\x24\x59\xF2\x17",
        .input    = "\x23\xFF\x5C\x99\x75\xBB\x1F\xD4"
              "\xBC\x27\x9D\x36\x60\xA9\xC9\xF7"
              "\x94\x9D\x1B\xFF\x8E\x95\x57\x89"
              "\x8C\x2E\x33\x70\x43\x61\xE6\xD2"
              "\x82\x33\x63\xB6\xC4\x34\x5E\xF8"
              "\x96\x07\xA7\xD2\x3B\x8E\xC9\xAA"
              "\x7C\xA0\x55\x89\x2E\xE1\x85\x25"
              "\x14\x04\xDA\x6B\xE0\xEE\x56\xCF"
              "\x08\x2E\x69\xD4\x54\xDE\x22\x84"
              "\x69\xA6\xA7\xD3\x3A\x9A\xE8\x05"
              "\x63\xDB\xBF\x46\x3A\x26\x2E\x0F"
              "\x58\x5C\x46\xEA\x07\x40\xDA\xE1"
              "\x14\x1D\xCD\x4F\x06\xC0\xCA\x54"
              "\x1E\xC9\x45\x85\x67\x7C\xC2\xB5"
              "\x97\x5D\x61\x78\x2E\x46\xEC\x6A"
              "\x53\xF4\xD0\xAE\xFA\xB4\x86\x29"
              "\x9F\x17\x33\x24\xD8\xB9\xB2\x05"
              "\x93\x88\xEA\xF7\xA0\x70\x69\x49"
              "\x88\x6B\x73\x40\x41\x8D\xD9\xD9"
              "\x7E\x78\xE9\xBE\x6C\x14\x22\x7A"
              "\x66\xE1\xDA\xED\x10\xFF\x69\x1D"
              "\xB9\xAA\xF2\x56\x72\x1B\x23\xE2"
              "\x45\x54\x8B\xA3\x70\x23\xB4\x5E"
              "\x8E\x96\xC9\x05\x00\xB3\xB6\xC2"
              "\x2A\x02\x43\x7A\x62\xD5\xC8\xD2"
              "\xC2\xD0\xE4\x78\xA1\x7B\x3E\xE8"
              "\x9F\x7F\x7D\x40\x54\x30\x3B\xC0"
              "\xA5\x54\xFD\xCA\x25\xEC\x44\x3E"
              "\x1A\x54\x7F\x88\xD0\xE1\xFE\x71"
              "\xCE\x05\x49\x89\xBA\xD6\x72\xE7"
              "\xD6\x5D\x3F\xA2\xD9\xAB\xC5\x02"
              "\xD6\x43\x22\xAF\xA2\xE4\x80\x85"
              "\xD7\x87\xB9\xEA\x43\xDB\xC8\xEF"
              "\x5C\x82\x2E\x98\x0D\x30\x41\x6B"
              "\x08\x48\x8D\xF0\xF8\x60\xD7\x9D"
              "\xE9\xDE\x40\xAD\x0D\xAD\x0D\x58"
              "\x2A\x98\x35\xFE\xF7\xDD\x4B\x40"
              "\xDE\xB0\x05\xD9\x7B\x09\x4D\xBC"
              "\x42\xC0\xF1\x15\x0B\xFA\x26\x6B"
              "\xC6\x12\x13\x4F\xCB\x35\xBA\x35"
              "\xDD\x7A\x36\x9C\x12\x57\x55\x83"
              "\x78\x58\x09\xD0\xB0\xCF\x7C\x5C"
              "\x38\xCF\xBD\x79\x5B\x13\x4D\x97"
              "\xC1\x85\x6F\x97\xC9\xE8\xC2\xA4"
              "\x98\xE2\xBD\x77\x6B\x53\x39\x1A"
              "\x28\x10\xE7\xE0\xE7\xDE\x9D\x69"
              "\x78\x6F\x8E\xD2\xD9\x5D\xD2\x15"
              "\x9E\xB5\x4D\x8C\xC0\x78\x22\x2F"
              "\x17\x11\x2E\x99\xD7\xE3\xA4\x4F"
              "\x65\xA5\x6B\x03\x2C\x35\x6F\xDA"
              "\x8A\x19\x08\xE1\x08\x48\x59\x51"
              "\x53\x4B\xD1\xDF\xDA\x14\x50\x5F"
              "\xDF\xB5\x8C\xDF\xC6\xFD\x85\xFA"
              "\xD4\xF9\x64\x45\x65\x0D\x7D\xF4"
              "\xC8\xCD\x3F\x32\xAF\xDD\x30\xED"
              "\x7B\xAA\xAC\xF0\xDA\x7F\xDF\x75"
              "\x1C\xA4\xF1\xCB\x5E\x4F\x0B\xB4"
              "\x97\x73\x28\xDE\xCF\xAF\x82\xBD"
              "\xC4\xBA\xB4\x9C\x0D\x16\x77\x42"
              "\x42\x39\x7C\x53\xA4\xD4\xDD\x40"
              "\x5C\x60\x1F\x6E\xA7\xE2\xDC\xE7"
              "\x32\x0F\x05\x2F\xF2\x4C\x95\x3B"
              "\xF2\x79\xD9",
        .ilen    = 499,
        .result    = "\x05\xEC\x77\xFB\x42\xD5\x59\x20"
              "\x8B\x12\x86\x69\xF0\x5B\xCF\x56"
              "\x39\xAD\x34\x9F\x66\xEA\x7D\xC4"
              "\x48\xD3\xBA\x0D\xB1\x18\xE3\x4A"
              "\xFE\x41\x28\x5C\x27\x8E\x11\x85"
              "\x6C\xF7\x5E\xC2\x55\x3C\xA0\x0B"
              "\x92\x65\xE9\x70\xDB\x4F\xD6\xB9"
              "\x00\xB4\x1F\xE6\x49\xFD\x44\x2F"
              "\x53\x3A\x8D\x14\x98\x63\xCA\x5D"
              "\xC1\xA8\x33\xA7\x0E\x91\x78\xEC"
              "\x77\xDE\x42\xD5\xBC\x07\x8B\x12"
              "\xE5\x4C\xF0\x5B\x22\x56\x39\x80"
              "\x6B\x9F\x66\xC9\x50\xC4\xAF\x36"
              "\xBA\x0D\x94\x7F\xE3\x4A\xDD\x41"
              "\x28\xB3\x1A\x8E\x11\xF8\x43\xF7"
              "\x5E\x21\x55\x3C\x87\x6E\x92\x65"
              "\xCC\x57\xDB\xA2\x35\xB9\x00\xEB"
              "\x72\xE6\x49\xD0\x44\x2F\xB6\x19"
              "\x8D\x14\xFF\x46\xCA\x5D\x24\xA8"
              "\x33\x9A\x6D\x91\x78\xC3\x77\xDE"
              "\xA1\x08\xBC\x07\xEE\x71\xE5\x4C"
              "\xD7\x5B\x22\xB5\x1C\x80\x6B\xF2"
              "\x45\xC9\x50\x3B\xAF\x36\x99\x60"
              "\x94\x7F\xC6\x4A\xDD\xA4\x0F\xB3"
              "\x1A\xED\x74\xF8\x43\x2A\x5E\x21"
              "\x88\x13\x87\x6E\xF1\x58\xCC\x57"
              "\x3E\xA2\x35\x9C\x67\xEB\x72\xC5"
              "\x49\xD0\xBB\x02\xB6\x19\xE0\x4B"
              "\xFF\x46\x29\x5D\x24\x8F\x16\x9A"
              "\x6D\xF4\x5F\xC3\xAA\x3D\xA1\x08"
              "\x93\x7A\xEE\x71\xD8\x4C\xD7\xBE"
              "\x01\xB5\x1C\xE7\x4E\xF2\x45\x2C"
              "\x50\x3B\x82\x15\x99\x60\xCB\x52"
              "\xC6\xA9\x30\xA4\x0F\x96\x79\xED"
              "\x74\xDF\x43\x2A\xBD\x04\x88\x13"
              "\xFA\x4D\xF1\x58\x23\x57\x3E\x81"
              "\x68\x9C\x67\xCE\x51\xC5\xAC\x37"
              "\xBB\x02\x95\x7C\xE0\x4B\xD2\x46"
              "\x29\xB0\x1B\x8F\x16\xF9\x40\xF4"
              "\x5F\x26\xAA\x3D\x84\x6F\x93\x7A"
              "\xCD\x54\xD8\xA3\x0A\xBE\x01\xE8"
              "\x73\xE7\x4E\xD1\x45\x2C\xB7\x1E"
              "\x82\x15\xFC\x47\xCB\x52\x25\xA9"
              "\x30\x9B\x62\x96\x79\xC0\x74\xDF"
              "\xA6\x09\xBD\x04\xEF\x76\xFA\x4D"
              "\xD4\x58\x23\x8A\x1D\x81\x68\xF3"
              "\x5A\xCE\x51\x38\xAC\x37\x9E\x61"
              "\x95\x7C\xC7\x4B\xD2\xA5\x0C\xB0"
              "\x1B\xE2\x75\xF9\x40\x2B\x5F\x26"
              "\x89\x10\x84\x6F\xF6\x59\xCD\x54"
              "\x3F\xA3\x0A\x9D\x64\xE8\x73\xDA"
              "\x4E\xD1\xB8\x03\xB7\x1E\xE1\x48"
              "\xFC\x47\x2E\x52\x25\x8C\x17\x9B"
              "\x62\xF5\x5C\xC0\xAB\x32\xA6\x09"
              "\x90\x7B\xEF\x76\xD9\x4D\xD4\xBF"
              "\x06\x8A\x1D\xE4\x4F\xF3\x5A\x2D"
              "\x51\x38\x83\x6A\x9E\x61\xC8\x53"
              "\xC7\xAE\x31\xA5\x0C\x97\x7E\xE2"
              "\x75\xDC\x40\x2B\xB2\x05\x89\x10"
              "\xFB\x42\xF6\x59\x20\x54\x3F\x86"
              "\x69\x9D\x64\xCF\x56\xDA\xAD\x34"
              "\xB8\x03\xEA\x7D\xE1\x48\xD3\x47"
              "\x2E\xB1\x18",
        .rlen    = 499,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 499 - 16, 16 },
    },
};

/*
 * AES test vectors.
 */
#define AES_ENC_TEST_VECTORS 4
#define AES_DEC_TEST_VECTORS 4
#define AES_CBC_ENC_TEST_VECTORS 5
#define AES_CBC_DEC_TEST_VECTORS 5
#define HMAC_SHA1_AES_CBC_ENC_TEST_VECTORS 7
#define HMAC_SHA256_AES_CBC_ENC_TEST_VECTORS 7
#define HMAC_SHA512_AES_CBC_ENC_TEST_VECTORS 7
#define AES_XTS_ENC_TEST_VECTORS 5
#define AES_XTS_DEC_TEST_VECTORS 5
#define AES_CTR_ENC_TEST_VECTORS 5
#define AES_CTR_DEC_TEST_VECTORS 5

static struct cipher_testvec aes_enc_tv_template[] = {
    { /* From FIPS-197 */
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
#if FIPS_FUNC_TEST == 1
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x01",
#else
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
#endif
        .klen    = 16,
        .input    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .ilen    = 16,
        .result    = "\x69\xc4\xe0\xd8\x6a\x7b\x04\x30"
              "\xd8\xcd\xb7\x80\x70\xb4\xc5\x5a",
        .rlen    = 16,
    }, {
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17",
        .klen    = 24,
        .input    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .ilen    = 16,
        .result    = "\xdd\xa9\x7c\xa4\x86\x4c\xdf\xe0"
              "\x6e\xaf\x70\xa0\xec\x0d\x71\x91",
        .rlen    = 16,
    }, {
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
        .klen    = 32,
        .input    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .ilen    = 16,
        .result    = "\x8e\xa2\xb7\xca\x51\x67\x45\xbf"
              "\xea\xfc\x49\x90\x4b\x49\x60\x89",
        .rlen    = 16,
    }, { /* Generated with Crypto++ */
        .key    = "\xA6\xC9\x83\xA6\xC9\xEC\x0F\x32"
              "\x55\x0F\x32\x55\x78\x9B\xBE\x78"
              "\x9B\xBE\xE1\x04\x27\xE1\x04\x27"
              "\x4A\x6D\x90\x4A\x6D\x90\xB3\xD6",
        .klen    = 32,
        .input    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .ilen    = 496,
        .result    = "\x71\x73\xF7\xDB\x24\x93\x21\x6D"
              "\x61\x1E\xBB\x63\x42\x79\xDB\x64"
              "\x6F\x82\xC0\xCA\xA3\x9B\xFA\x0B"
              "\xD9\x08\xC7\x4A\x90\xAE\x8F\x5F"
              "\x5E\x06\xF0\x5F\x31\x51\x18\x37"
              "\x45\xD7\xCA\x3A\xFD\x6C\x3F\xE1"
              "\xDD\x8D\x22\x65\x2B\x00\x50\xCE"
              "\xBA\x28\x67\xD7\xCE\x0E\x0D\xEA"
              "\x78\x69\x7F\xAE\x8F\x8B\x69\x37"
              "\x75\xE0\xDC\x96\xE0\xB7\xF4\x09"
              "\xCB\x6D\xA2\xFB\xDA\xAF\x09\xF8"
              "\x81\x82\x27\xFA\x45\x9C\x29\xA4"
              "\x22\x8B\x78\x69\x5B\x46\xF9\x39"
              "\x1B\xCC\xF9\x1D\x09\xEB\xBC\x5C"
              "\x41\x72\x51\x97\x1D\x07\x49\xA0"
              "\x1B\x8E\x65\x4B\xB2\x6A\x12\x03"
              "\x6A\x60\x95\xAC\xBD\xAC\x1A\x64"
              "\xDE\x5A\xA5\xF0\x83\x2F\xCB\xCA"
              "\x22\x74\xA6\x6C\x9B\x73\xCE\x3F"
              "\xE1\x8B\x22\x17\x59\x0C\x47\x89"
              "\x33\xA1\xD6\x47\x03\x19\x4F\xA8"
              "\x67\x69\xF0\x5B\xF0\x20\xAD\x06"
              "\x27\x81\x92\xD8\xC5\xBA\x98\x12"
              "\xBE\x24\xB5\x2F\x75\x02\xC2\xAD"
              "\x12\x2F\x07\x32\xEE\x39\xAF\x64"
              "\x05\x8F\xB3\xD4\xEB\x1B\x46\x6E"
              "\xD9\x21\xF9\xC4\xB7\xC9\x45\x68"
              "\xB4\xA1\x74\x9F\x82\x47\xEB\xCC"
              "\xBD\x0A\x14\x95\x0F\x8B\xA8\x2F"
              "\x4B\x1B\xA7\xBF\x82\xA6\x43\x0C"
              "\xB9\x39\x4A\xA8\x10\x6F\x50\x7B"
              "\x25\xFB\x26\x81\xE0\x2F\xF0\x96"
              "\x8D\x8B\xAC\x92\x0F\xF6\xED\x64"
              "\x63\x29\x4C\x8E\x18\x13\xC5\xBF"
              "\xFC\xA0\xD9\xBF\x7C\x3A\x0E\x29"
              "\x6F\xD1\x6C\x6F\xA5\xDA\xBF\xB1"
              "\x30\xEA\x44\x2D\xC3\x8F\x16\xE1"
              "\x66\xFA\xA3\x21\x3E\xFC\x13\xCA"
              "\xF0\xF6\xF0\x59\xBD\x8F\x38\x50"
              "\x31\xCB\x69\x3F\x96\x15\xD6\xF5"
              "\xAE\xFF\xF6\xAA\x41\x85\x4C\x10"
              "\x58\xE3\xF9\x44\xE6\x28\xDA\x9A"
              "\xDC\x6A\x80\x34\x73\x97\x1B\xC5"
              "\xCA\x26\x16\x77\x0E\x60\xAB\x89"
              "\x0F\x04\x27\xBD\xCE\x3E\x71\xB4"
              "\xA0\xD7\x22\x7E\xDB\xEB\x24\x70"
              "\x42\x71\x51\x78\x70\xB3\xE0\x3D"
              "\x84\x8E\x8D\x7B\xD0\x6D\xEA\x92"
              "\x11\x08\x42\x4F\xE5\xAD\x26\x92"
              "\xD2\x00\xAE\xA8\xE3\x4B\x37\x47"
              "\x22\xC1\x95\xC1\x63\x7F\xCB\x03"
              "\xF3\xE3\xD7\x9D\x60\xC7\xBC\xEA"
              "\x35\xA2\xFD\x45\x52\x39\x13\x6F"
              "\xC1\x53\xF3\x53\xDF\x33\x84\xD7"
              "\xD2\xC8\x37\xB0\x75\xE3\x41\x46"
              "\xB3\xC7\x83\x2E\x8A\xBB\xA4\xE5"
              "\x7F\x3C\xFD\x8B\xEB\xEA\x63\xBD"
              "\xB7\x46\xE7\xBF\x09\x9C\x0D\x0F"
              "\x40\x86\x7F\x51\xE1\x11\x9C\xCB"
              "\x88\xE6\x68\x47\xE3\x2B\xC5\xFF"
              "\x09\x79\xA0\x43\x5C\x0D\x08\x58"
              "\x17\xBB\xC0\x6B\x62\x3F\x56\xE9",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec aes_dec_tv_template[] = {
    { /* From FIPS-197 */
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
        .klen    = 16,
        .input    = "\x69\xc4\xe0\xd8\x6a\x7b\x04\x30"
              "\xd8\xcd\xb7\x80\x70\xb4\xc5\x5a",
        .ilen    = 16,
        .result    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .rlen    = 16,
    }, {
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17",
        .klen    = 24,
        .input    = "\xdd\xa9\x7c\xa4\x86\x4c\xdf\xe0"
              "\x6e\xaf\x70\xa0\xec\x0d\x71\x91",
        .ilen    = 16,
        .result    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .rlen    = 16,
    }, {
        .key    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
        .klen    = 32,
        .input    = "\x8e\xa2\xb7\xca\x51\x67\x45\xbf"
              "\xea\xfc\x49\x90\x4b\x49\x60\x89",
        .ilen    = 16,
        .result    = "\x00\x11\x22\x33\x44\x55\x66\x77"
              "\x88\x99\xaa\xbb\xcc\xdd\xee\xff",
        .rlen    = 16,
    }, { /* Generated with Crypto++ */
        .key    = "\xA6\xC9\x83\xA6\xC9\xEC\x0F\x32"
              "\x55\x0F\x32\x55\x78\x9B\xBE\x78"
              "\x9B\xBE\xE1\x04\x27\xE1\x04\x27"
              "\x4A\x6D\x90\x4A\x6D\x90\xB3\xD6",
        .klen    = 32,
        .input    = "\x71\x73\xF7\xDB\x24\x93\x21\x6D"
              "\x61\x1E\xBB\x63\x42\x79\xDB\x64"
              "\x6F\x82\xC0\xCA\xA3\x9B\xFA\x0B"
              "\xD9\x08\xC7\x4A\x90\xAE\x8F\x5F"
              "\x5E\x06\xF0\x5F\x31\x51\x18\x37"
              "\x45\xD7\xCA\x3A\xFD\x6C\x3F\xE1"
              "\xDD\x8D\x22\x65\x2B\x00\x50\xCE"
              "\xBA\x28\x67\xD7\xCE\x0E\x0D\xEA"
              "\x78\x69\x7F\xAE\x8F\x8B\x69\x37"
              "\x75\xE0\xDC\x96\xE0\xB7\xF4\x09"
              "\xCB\x6D\xA2\xFB\xDA\xAF\x09\xF8"
              "\x81\x82\x27\xFA\x45\x9C\x29\xA4"
              "\x22\x8B\x78\x69\x5B\x46\xF9\x39"
              "\x1B\xCC\xF9\x1D\x09\xEB\xBC\x5C"
              "\x41\x72\x51\x97\x1D\x07\x49\xA0"
              "\x1B\x8E\x65\x4B\xB2\x6A\x12\x03"
              "\x6A\x60\x95\xAC\xBD\xAC\x1A\x64"
              "\xDE\x5A\xA5\xF0\x83\x2F\xCB\xCA"
              "\x22\x74\xA6\x6C\x9B\x73\xCE\x3F"
              "\xE1\x8B\x22\x17\x59\x0C\x47\x89"
              "\x33\xA1\xD6\x47\x03\x19\x4F\xA8"
              "\x67\x69\xF0\x5B\xF0\x20\xAD\x06"
              "\x27\x81\x92\xD8\xC5\xBA\x98\x12"
              "\xBE\x24\xB5\x2F\x75\x02\xC2\xAD"
              "\x12\x2F\x07\x32\xEE\x39\xAF\x64"
              "\x05\x8F\xB3\xD4\xEB\x1B\x46\x6E"
              "\xD9\x21\xF9\xC4\xB7\xC9\x45\x68"
              "\xB4\xA1\x74\x9F\x82\x47\xEB\xCC"
              "\xBD\x0A\x14\x95\x0F\x8B\xA8\x2F"
              "\x4B\x1B\xA7\xBF\x82\xA6\x43\x0C"
              "\xB9\x39\x4A\xA8\x10\x6F\x50\x7B"
              "\x25\xFB\x26\x81\xE0\x2F\xF0\x96"
              "\x8D\x8B\xAC\x92\x0F\xF6\xED\x64"
              "\x63\x29\x4C\x8E\x18\x13\xC5\xBF"
              "\xFC\xA0\xD9\xBF\x7C\x3A\x0E\x29"
              "\x6F\xD1\x6C\x6F\xA5\xDA\xBF\xB1"
              "\x30\xEA\x44\x2D\xC3\x8F\x16\xE1"
              "\x66\xFA\xA3\x21\x3E\xFC\x13\xCA"
              "\xF0\xF6\xF0\x59\xBD\x8F\x38\x50"
              "\x31\xCB\x69\x3F\x96\x15\xD6\xF5"
              "\xAE\xFF\xF6\xAA\x41\x85\x4C\x10"
              "\x58\xE3\xF9\x44\xE6\x28\xDA\x9A"
              "\xDC\x6A\x80\x34\x73\x97\x1B\xC5"
              "\xCA\x26\x16\x77\x0E\x60\xAB\x89"
              "\x0F\x04\x27\xBD\xCE\x3E\x71\xB4"
              "\xA0\xD7\x22\x7E\xDB\xEB\x24\x70"
              "\x42\x71\x51\x78\x70\xB3\xE0\x3D"
              "\x84\x8E\x8D\x7B\xD0\x6D\xEA\x92"
              "\x11\x08\x42\x4F\xE5\xAD\x26\x92"
              "\xD2\x00\xAE\xA8\xE3\x4B\x37\x47"
              "\x22\xC1\x95\xC1\x63\x7F\xCB\x03"
              "\xF3\xE3\xD7\x9D\x60\xC7\xBC\xEA"
              "\x35\xA2\xFD\x45\x52\x39\x13\x6F"
              "\xC1\x53\xF3\x53\xDF\x33\x84\xD7"
              "\xD2\xC8\x37\xB0\x75\xE3\x41\x46"
              "\xB3\xC7\x83\x2E\x8A\xBB\xA4\xE5"
              "\x7F\x3C\xFD\x8B\xEB\xEA\x63\xBD"
              "\xB7\x46\xE7\xBF\x09\x9C\x0D\x0F"
              "\x40\x86\x7F\x51\xE1\x11\x9C\xCB"
              "\x88\xE6\x68\x47\xE3\x2B\xC5\xFF"
              "\x09\x79\xA0\x43\x5C\x0D\x08\x58"
              "\x17\xBB\xC0\x6B\x62\x3F\x56\xE9",
        .ilen    = 496,
        .result    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec aes_cbc_enc_tv_template[] = {
    { /* From RFC 3602 */
        .key    = "\x06\xa9\x21\x40\x36\xb8\xa1\x5b"
              "\x51\x2e\x03\xd5\x34\x12\x00\x06",
        .klen   = 16,
        .iv    = "\x3d\xaf\xba\x42\x9d\x9e\xb4\x30"
              "\xb4\x22\xda\x80\x2c\x9f\xac\x41",
        .input    = "Single block msg",
        .ilen   = 16,
        .result = "\xe3\x53\x77\x9c\x10\x79\xae\xb8"
              "\x27\x08\x94\x2d\xbe\x77\x18\x1a",
        .rlen   = 16,
    }, {
        .key    = "\xc2\x86\x69\x6d\x88\x7c\x9a\xa0"
              "\x61\x1b\xbb\x3e\x20\x25\xa4\x5a",
        .klen   = 16,
        .iv     = "\x56\x2e\x17\x99\x6d\x09\x3d\x28"
              "\xdd\xb3\xba\x69\x5a\x2e\x6f\x58",
        .input  = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
        .ilen   = 32,
        .result = "\xd2\x96\xcd\x94\xc2\xcc\xcf\x8a"
              "\x3a\x86\x30\x28\xb5\xe1\xdc\x0a"
              "\x75\x86\x60\x2d\x25\x3c\xff\xf9"
              "\x1b\x82\x66\xbe\xa6\xd6\x1a\xb1",
        .rlen   = 32,
    }, { /* From NIST SP800-38A */
        .key    = "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
              "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
              "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
        .klen    = 24,
        .iv    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
        .input    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .ilen    = 64,
        .result    = "\x4f\x02\x1d\xb2\x43\xbc\x63\x3d"
              "\x71\x78\x18\x3a\x9f\xa0\x71\xe8"
              "\xb4\xd9\xad\xa9\xad\x7d\xed\xf4"
              "\xe5\xe7\x38\x76\x3f\x69\x14\x5a"
              "\x57\x1b\x24\x20\x12\xfb\x7a\xe0"
              "\x7f\xa9\xba\xac\x3d\xf1\x02\xe0"
              "\x08\xb0\xe2\x79\x88\x59\x88\x81"
              "\xd9\x20\xa9\xe6\x4f\x56\x15\xcd",
        .rlen    = 64,
    }, {
        .key    = "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
              "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
              "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
              "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
        .klen    = 32,
        .iv    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
        .input    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .ilen    = 64,
        .result    = "\xf5\x8c\x4c\x04\xd6\xe5\xf1\xba"
              "\x77\x9e\xab\xfb\x5f\x7b\xfb\xd6"
              "\x9c\xfc\x4e\x96\x7e\xdb\x80\x8d"
              "\x67\x9f\x77\x7b\xc6\x70\x2c\x7d"
              "\x39\xf2\x33\x69\xa9\xd9\xba\xcf"
              "\xa5\x30\xe2\x63\x04\x23\x14\x61"
              "\xb2\xeb\x05\xe2\xc3\x9b\xe9\xfc"
              "\xda\x6c\x19\x07\x8c\x6a\x9d\x1b",
        .rlen    = 64,
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xE7\x82\x1D\xB8\x53\x11\xAC\x47"
              "\xE2\x7D\x18\xD6\x71\x0C\xA7\x42",
        .input    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .ilen    = 496,
        .result    = "\xEA\x65\x8A\x19\xB0\x66\xC1\x3F"
              "\xCE\xF1\x97\x75\xC1\xFD\xB5\xAF"
              "\x52\x65\xF7\xFF\xBC\xD8\x2D\x9F"
              "\x2F\xB9\x26\x9B\x6F\x10\xB7\xB8"
              "\x26\xA1\x02\x46\xA2\xAD\xC6\xC0"
              "\x11\x15\xFF\x6D\x1E\x82\x04\xA6"
              "\xB1\x74\xD1\x08\x13\xFD\x90\x7C"
              "\xF5\xED\xD3\xDB\x5A\x0A\x0C\x2F"
              "\x0A\x70\xF1\x88\x07\xCF\x21\x26"
              "\x40\x40\x8A\xF5\x53\xF7\x24\x4F"
              "\x83\x38\x43\x5F\x08\x99\xEB\xE3"
              "\xDC\x02\x64\x67\x50\x6E\x15\xC3"
              "\x01\x1A\xA0\x81\x13\x65\xA6\x73"
              "\x71\xA6\x3B\x91\x83\x77\xBE\xFA"
              "\xDB\x71\x73\xA6\xC1\xAE\x43\xC3"
              "\x36\xCE\xD6\xEB\xF9\x30\x1C\x4F"
              "\x80\x38\x5E\x9C\x6E\xAB\x98\x2F"
              "\x53\xAF\xCF\xC8\x9A\xB8\x86\x43"
              "\x3E\x86\xE7\xA1\xF4\x2F\x30\x40"
              "\x03\xA8\x6C\x50\x42\x9F\x77\x59"
              "\x89\xA0\xC5\xEC\x9A\xB8\xDD\x99"
              "\x16\x24\x02\x07\x48\xAE\xF2\x31"
              "\x34\x0E\xC3\x85\xFE\x1C\x95\x99"
              "\x87\x58\x98\x8B\xE7\xC6\xC5\x70"
              "\x73\x81\x07\x7C\x56\x2F\xD8\x1B"
              "\xB7\xB9\x2B\xAB\xE3\x01\x87\x0F"
              "\xD8\xBB\xC0\x0D\xAC\x2C\x2F\x98"
              "\x3C\x0B\xA2\x99\x4A\x8C\xF7\x04"
              "\xE0\xE0\xCF\xD1\x81\x5B\xFE\xF5"
              "\x24\x04\xFD\xB8\xDF\x13\xD8\xCD"
              "\xF1\xE3\x3D\x98\x50\x02\x77\x9E"
              "\xBC\x22\xAB\xFA\xC2\x43\x1F\x66"
              "\x20\x02\x23\xDA\xDF\xA0\x89\xF6"
              "\xD8\xF3\x45\x24\x53\x6F\x16\x77"
              "\x02\x3E\x7B\x36\x5F\xA0\x3B\x78"
              "\x63\xA2\xBD\xB5\xA4\xCA\x1E\xD3"
              "\x57\xBC\x0B\x9F\x43\x51\x28\x4F"
              "\x07\x50\x6C\x68\x12\x07\xCF\xFA"
              "\x6B\x72\x0B\xEB\xF8\x88\x90\x2C"
              "\x7E\xF5\x91\xD1\x03\xD8\xD5\xBD"
              "\x22\x39\x7B\x16\x03\x01\x69\xAF"
              "\x3D\x38\x66\x28\x0C\xBE\x5B\xC5"
              "\x03\xB4\x2F\x51\x8A\x56\x17\x2B"
              "\x88\x42\x6D\x40\x68\x8F\xD0\x11"
              "\x19\xF9\x1F\x43\x79\x95\x31\xFA"
              "\x28\x7A\x3D\xF7\x66\xEB\xEF\xAC"
              "\x06\xB2\x01\xAD\xDB\x68\xDB\xEC"
              "\x8D\x53\x6E\x72\x68\xA3\xC7\x63"
              "\x43\x2B\x78\xE0\x04\x29\x8F\x72"
              "\xB2\x2C\xE6\x84\x03\x30\x6D\xCD"
              "\x26\x92\x37\xE1\x2F\xBB\x8B\x9D"
              "\xE4\x4C\xF6\x93\xBC\xD9\xAD\x44"
              "\x52\x65\xC7\xB0\x0E\x3F\x0E\x61"
              "\x56\x5D\x1C\x6D\xA7\x05\x2E\xBC"
              "\x58\x08\x15\xAB\x12\xAB\x17\x4A"
              "\x5E\x1C\xF2\xCD\xB8\xA2\xAE\xFB"
              "\x9B\x2E\x0E\x85\x34\x80\x0E\x3F"
              "\x4C\xB8\xDB\xCE\x1C\x90\xA1\x61"
              "\x6C\x69\x09\x35\x9E\xD4\xF4\xAD"
              "\xBC\x06\x41\xE3\x01\xB4\x4E\x0A"
              "\xE0\x1F\x91\xF8\x82\x96\x2D\x65"
              "\xA3\xAA\x13\xCC\x50\xFF\x7B\x02",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec aes_cbc_dec_tv_template[] = {
    { /* From RFC 3602 */
        .key    = "\x06\xa9\x21\x40\x36\xb8\xa1\x5b"
              "\x51\x2e\x03\xd5\x34\x12\x00\x06",
        .klen   = 16,
        .iv     = "\x3d\xaf\xba\x42\x9d\x9e\xb4\x30"
              "\xb4\x22\xda\x80\x2c\x9f\xac\x41",
        .input  = "\xe3\x53\x77\x9c\x10\x79\xae\xb8"
              "\x27\x08\x94\x2d\xbe\x77\x18\x1a",
        .ilen   = 16,
        .result = "Single block msg",
        .rlen   = 16,
    }, {
        .key    = "\xc2\x86\x69\x6d\x88\x7c\x9a\xa0"
              "\x61\x1b\xbb\x3e\x20\x25\xa4\x5a",
        .klen   = 16,
        .iv     = "\x56\x2e\x17\x99\x6d\x09\x3d\x28"
              "\xdd\xb3\xba\x69\x5a\x2e\x6f\x58",
        .input  = "\xd2\x96\xcd\x94\xc2\xcc\xcf\x8a"
              "\x3a\x86\x30\x28\xb5\xe1\xdc\x0a"
              "\x75\x86\x60\x2d\x25\x3c\xff\xf9"
              "\x1b\x82\x66\xbe\xa6\xd6\x1a\xb1",
        .ilen   = 32,
        .result = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f",
        .rlen   = 32,
    }, { /* From NIST SP800-38A */
        .key    = "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
              "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
              "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
        .klen    = 24,
        .iv    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
        .input    = "\x4f\x02\x1d\xb2\x43\xbc\x63\x3d"
              "\x71\x78\x18\x3a\x9f\xa0\x71\xe8"
              "\xb4\xd9\xad\xa9\xad\x7d\xed\xf4"
              "\xe5\xe7\x38\x76\x3f\x69\x14\x5a"
              "\x57\x1b\x24\x20\x12\xfb\x7a\xe0"
              "\x7f\xa9\xba\xac\x3d\xf1\x02\xe0"
              "\x08\xb0\xe2\x79\x88\x59\x88\x81"
              "\xd9\x20\xa9\xe6\x4f\x56\x15\xcd",
        .ilen    = 64,
        .result    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .rlen    = 64,
    }, {
        .key    = "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
              "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
              "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
              "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
        .klen    = 32,
        .iv    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
        .input    = "\xf5\x8c\x4c\x04\xd6\xe5\xf1\xba"
              "\x77\x9e\xab\xfb\x5f\x7b\xfb\xd6"
              "\x9c\xfc\x4e\x96\x7e\xdb\x80\x8d"
              "\x67\x9f\x77\x7b\xc6\x70\x2c\x7d"
              "\x39\xf2\x33\x69\xa9\xd9\xba\xcf"
              "\xa5\x30\xe2\x63\x04\x23\x14\x61"
              "\xb2\xeb\x05\xe2\xc3\x9b\xe9\xfc"
              "\xda\x6c\x19\x07\x8c\x6a\x9d\x1b",
        .ilen    = 64,
        .result    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .rlen    = 64,
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xE7\x82\x1D\xB8\x53\x11\xAC\x47"
              "\xE2\x7D\x18\xD6\x71\x0C\xA7\x42",
        .input    = "\xEA\x65\x8A\x19\xB0\x66\xC1\x3F"
              "\xCE\xF1\x97\x75\xC1\xFD\xB5\xAF"
              "\x52\x65\xF7\xFF\xBC\xD8\x2D\x9F"
              "\x2F\xB9\x26\x9B\x6F\x10\xB7\xB8"
              "\x26\xA1\x02\x46\xA2\xAD\xC6\xC0"
              "\x11\x15\xFF\x6D\x1E\x82\x04\xA6"
              "\xB1\x74\xD1\x08\x13\xFD\x90\x7C"
              "\xF5\xED\xD3\xDB\x5A\x0A\x0C\x2F"
              "\x0A\x70\xF1\x88\x07\xCF\x21\x26"
              "\x40\x40\x8A\xF5\x53\xF7\x24\x4F"
              "\x83\x38\x43\x5F\x08\x99\xEB\xE3"
              "\xDC\x02\x64\x67\x50\x6E\x15\xC3"
              "\x01\x1A\xA0\x81\x13\x65\xA6\x73"
              "\x71\xA6\x3B\x91\x83\x77\xBE\xFA"
              "\xDB\x71\x73\xA6\xC1\xAE\x43\xC3"
              "\x36\xCE\xD6\xEB\xF9\x30\x1C\x4F"
              "\x80\x38\x5E\x9C\x6E\xAB\x98\x2F"
              "\x53\xAF\xCF\xC8\x9A\xB8\x86\x43"
              "\x3E\x86\xE7\xA1\xF4\x2F\x30\x40"
              "\x03\xA8\x6C\x50\x42\x9F\x77\x59"
              "\x89\xA0\xC5\xEC\x9A\xB8\xDD\x99"
              "\x16\x24\x02\x07\x48\xAE\xF2\x31"
              "\x34\x0E\xC3\x85\xFE\x1C\x95\x99"
              "\x87\x58\x98\x8B\xE7\xC6\xC5\x70"
              "\x73\x81\x07\x7C\x56\x2F\xD8\x1B"
              "\xB7\xB9\x2B\xAB\xE3\x01\x87\x0F"
              "\xD8\xBB\xC0\x0D\xAC\x2C\x2F\x98"
              "\x3C\x0B\xA2\x99\x4A\x8C\xF7\x04"
              "\xE0\xE0\xCF\xD1\x81\x5B\xFE\xF5"
              "\x24\x04\xFD\xB8\xDF\x13\xD8\xCD"
              "\xF1\xE3\x3D\x98\x50\x02\x77\x9E"
              "\xBC\x22\xAB\xFA\xC2\x43\x1F\x66"
              "\x20\x02\x23\xDA\xDF\xA0\x89\xF6"
              "\xD8\xF3\x45\x24\x53\x6F\x16\x77"
              "\x02\x3E\x7B\x36\x5F\xA0\x3B\x78"
              "\x63\xA2\xBD\xB5\xA4\xCA\x1E\xD3"
              "\x57\xBC\x0B\x9F\x43\x51\x28\x4F"
              "\x07\x50\x6C\x68\x12\x07\xCF\xFA"
              "\x6B\x72\x0B\xEB\xF8\x88\x90\x2C"
              "\x7E\xF5\x91\xD1\x03\xD8\xD5\xBD"
              "\x22\x39\x7B\x16\x03\x01\x69\xAF"
              "\x3D\x38\x66\x28\x0C\xBE\x5B\xC5"
              "\x03\xB4\x2F\x51\x8A\x56\x17\x2B"
              "\x88\x42\x6D\x40\x68\x8F\xD0\x11"
              "\x19\xF9\x1F\x43\x79\x95\x31\xFA"
              "\x28\x7A\x3D\xF7\x66\xEB\xEF\xAC"
              "\x06\xB2\x01\xAD\xDB\x68\xDB\xEC"
              "\x8D\x53\x6E\x72\x68\xA3\xC7\x63"
              "\x43\x2B\x78\xE0\x04\x29\x8F\x72"
              "\xB2\x2C\xE6\x84\x03\x30\x6D\xCD"
              "\x26\x92\x37\xE1\x2F\xBB\x8B\x9D"
              "\xE4\x4C\xF6\x93\xBC\xD9\xAD\x44"
              "\x52\x65\xC7\xB0\x0E\x3F\x0E\x61"
              "\x56\x5D\x1C\x6D\xA7\x05\x2E\xBC"
              "\x58\x08\x15\xAB\x12\xAB\x17\x4A"
              "\x5E\x1C\xF2\xCD\xB8\xA2\xAE\xFB"
              "\x9B\x2E\x0E\x85\x34\x80\x0E\x3F"
              "\x4C\xB8\xDB\xCE\x1C\x90\xA1\x61"
              "\x6C\x69\x09\x35\x9E\xD4\xF4\xAD"
              "\xBC\x06\x41\xE3\x01\xB4\x4E\x0A"
              "\xE0\x1F\x91\xF8\x82\x96\x2D\x65"
              "\xA3\xAA\x13\xCC\x50\xFF\x7B\x02",
        .ilen    = 496,
        .result    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    },
};

static struct cipher_testvec aes_xts_enc_tv_template[] = {
    /* http://grouper.ieee.org/groups/1619/email/pdf00086.pdf */
    { /* XTS-AES 1 */
        .key    = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .klen   = 32,
        .iv     = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .ilen   = 32,
        .result = "\x91\x7c\xf6\x9e\xbd\x68\xb2\xec"
              "\x9b\x9f\xe9\xa3\xea\xdd\xa6\x92"
              "\xcd\x43\xd2\xf5\x95\x98\xed\x85"
              "\x8c\x02\xc2\x65\x2f\xbf\x92\x2e",
        .rlen   = 32,
    }, { /* XTS-AES 2 */
        .key    = "\x11\x11\x11\x11\x11\x11\x11\x11"
              "\x11\x11\x11\x11\x11\x11\x11\x11"
              "\x22\x22\x22\x22\x22\x22\x22\x22"
              "\x22\x22\x22\x22\x22\x22\x22\x22",
        .klen   = 32,
        .iv     = "\x33\x33\x33\x33\x33\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44",
        .ilen   = 32,
        .result = "\xc4\x54\x18\x5e\x6a\x16\x93\x6e"
              "\x39\x33\x40\x38\xac\xef\x83\x8b"
              "\xfb\x18\x6f\xff\x74\x80\xad\xc4"
              "\x28\x93\x82\xec\xd6\xd3\x94\xf0",
        .rlen   = 32,
    }, { /* XTS-AES 3 */
        .key    = "\xff\xfe\xfd\xfc\xfb\xfa\xf9\xf8"
              "\xf7\xf6\xf5\xf4\xf3\xf2\xf1\xf0"
              "\x22\x22\x22\x22\x22\x22\x22\x22"
              "\x22\x22\x22\x22\x22\x22\x22\x22",
        .klen   = 32,
        .iv     = "\x33\x33\x33\x33\x33\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44",
        .ilen   = 32,
        .result = "\xaf\x85\x33\x6b\x59\x7a\xfc\x1a"
              "\x90\x0b\x2e\xb2\x1e\xc9\x49\xd2"
              "\x92\xdf\x4c\x04\x7e\x0b\x21\x53"
              "\x21\x86\xa5\x97\x1a\x22\x7a\x89",
        .rlen   = 32,
    }, { /* XTS-AES 4 */
        .key    = "\x27\x18\x28\x18\x28\x45\x90\x45"
              "\x23\x53\x60\x28\x74\x71\x35\x26"
              "\x31\x41\x59\x26\x53\x58\x97\x93"
              "\x23\x84\x62\x64\x33\x83\x27\x95",
        .klen   = 32,
        .iv     = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
              "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .ilen   = 512,
        .result = "\x27\xa7\x47\x9b\xef\xa1\xd4\x76"
              "\x48\x9f\x30\x8c\xd4\xcf\xa6\xe2"
              "\xa9\x6e\x4b\xbe\x32\x08\xff\x25"
              "\x28\x7d\xd3\x81\x96\x16\xe8\x9c"
              "\xc7\x8c\xf7\xf5\xe5\x43\x44\x5f"
              "\x83\x33\xd8\xfa\x7f\x56\x00\x00"
              "\x05\x27\x9f\xa5\xd8\xb5\xe4\xad"
              "\x40\xe7\x36\xdd\xb4\xd3\x54\x12"
              "\x32\x80\x63\xfd\x2a\xab\x53\xe5"
              "\xea\x1e\x0a\x9f\x33\x25\x00\xa5"
              "\xdf\x94\x87\xd0\x7a\x5c\x92\xcc"
              "\x51\x2c\x88\x66\xc7\xe8\x60\xce"
              "\x93\xfd\xf1\x66\xa2\x49\x12\xb4"
              "\x22\x97\x61\x46\xae\x20\xce\x84"
              "\x6b\xb7\xdc\x9b\xa9\x4a\x76\x7a"
              "\xae\xf2\x0c\x0d\x61\xad\x02\x65"
              "\x5e\xa9\x2d\xc4\xc4\xe4\x1a\x89"
              "\x52\xc6\x51\xd3\x31\x74\xbe\x51"
              "\xa1\x0c\x42\x11\x10\xe6\xd8\x15"
              "\x88\xed\xe8\x21\x03\xa2\x52\xd8"
              "\xa7\x50\xe8\x76\x8d\xef\xff\xed"
              "\x91\x22\x81\x0a\xae\xb9\x9f\x91"
              "\x72\xaf\x82\xb6\x04\xdc\x4b\x8e"
              "\x51\xbc\xb0\x82\x35\xa6\xf4\x34"
              "\x13\x32\xe4\xca\x60\x48\x2a\x4b"
              "\xa1\xa0\x3b\x3e\x65\x00\x8f\xc5"
              "\xda\x76\xb7\x0b\xf1\x69\x0d\xb4"
              "\xea\xe2\x9c\x5f\x1b\xad\xd0\x3c"
              "\x5c\xcf\x2a\x55\xd7\x05\xdd\xcd"
              "\x86\xd4\x49\x51\x1c\xeb\x7e\xc3"
              "\x0b\xf1\x2b\x1f\xa3\x5b\x91\x3f"
              "\x9f\x74\x7a\x8a\xfd\x1b\x13\x0e"
              "\x94\xbf\xf9\x4e\xff\xd0\x1a\x91"
              "\x73\x5c\xa1\x72\x6a\xcd\x0b\x19"
              "\x7c\x4e\x5b\x03\x39\x36\x97\xe1"
              "\x26\x82\x6f\xb6\xbb\xde\x8e\xcc"
              "\x1e\x08\x29\x85\x16\xe2\xc9\xed"
              "\x03\xff\x3c\x1b\x78\x60\xf6\xde"
              "\x76\xd4\xce\xcd\x94\xc8\x11\x98"
              "\x55\xef\x52\x97\xca\x67\xe9\xf3"
              "\xe7\xff\x72\xb1\xe9\x97\x85\xca"
              "\x0a\x7e\x77\x20\xc5\xb3\x6d\xc6"
              "\xd7\x2c\xac\x95\x74\xc8\xcb\xbc"
              "\x2f\x80\x1e\x23\xe5\x6f\xd3\x44"
              "\xb0\x7f\x22\x15\x4b\xeb\xa0\xf0"
              "\x8c\xe8\x89\x1e\x64\x3e\xd9\x95"
              "\xc9\x4d\x9a\x69\xc9\xf1\xb5\xf4"
              "\x99\x02\x7a\x78\x57\x2a\xee\xbd"
              "\x74\xd2\x0c\xc3\x98\x81\xc2\x13"
              "\xee\x77\x0b\x10\x10\xe4\xbe\xa7"
              "\x18\x84\x69\x77\xae\x11\x9f\x7a"
              "\x02\x3a\xb5\x8c\xca\x0a\xd7\x52"
              "\xaf\xe6\x56\xbb\x3c\x17\x25\x6a"
              "\x9f\x6e\x9b\xf1\x9f\xdd\x5a\x38"
              "\xfc\x82\xbb\xe8\x72\xc5\x53\x9e"
              "\xdb\x60\x9e\xf4\xf7\x9c\x20\x3e"
              "\xbb\x14\x0f\x2e\x58\x3c\xb2\xad"
              "\x15\xb4\xaa\x5b\x65\x50\x16\xa8"
              "\x44\x92\x77\xdb\xd4\x77\xef\x2c"
              "\x8d\x6c\x01\x7d\xb7\x38\xb1\x8d"
              "\xeb\x4a\x42\x7d\x19\x23\xce\x3f"
              "\xf2\x62\x73\x57\x79\xa4\x18\xf2"
              "\x0a\x28\x2d\xf9\x20\x14\x7b\xea"
              "\xbe\x42\x1e\xe5\x31\x9d\x05\x68",
        .rlen   = 512,
    }, { /* XTS-AES 10, XTS-AES-256, data unit 512 bytes */
        .key    = "\x27\x18\x28\x18\x28\x45\x90\x45"
              "\x23\x53\x60\x28\x74\x71\x35\x26"
              "\x62\x49\x77\x57\x24\x70\x93\x69"
              "\x99\x59\x57\x49\x66\x96\x76\x27"
              "\x31\x41\x59\x26\x53\x58\x97\x93"
              "\x23\x84\x62\x64\x33\x83\x27\x95"
              "\x02\x88\x41\x97\x16\x93\x99\x37"
              "\x51\x05\x82\x09\x74\x94\x45\x92",
        .klen    = 64,
        .iv    = "\xff\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
              "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .ilen    = 512,
        .result    = "\x1c\x3b\x3a\x10\x2f\x77\x03\x86"
              "\xe4\x83\x6c\x99\xe3\x70\xcf\x9b"
              "\xea\x00\x80\x3f\x5e\x48\x23\x57"
              "\xa4\xae\x12\xd4\x14\xa3\xe6\x3b"
              "\x5d\x31\xe2\x76\xf8\xfe\x4a\x8d"
              "\x66\xb3\x17\xf9\xac\x68\x3f\x44"
              "\x68\x0a\x86\xac\x35\xad\xfc\x33"
              "\x45\xbe\xfe\xcb\x4b\xb1\x88\xfd"
              "\x57\x76\x92\x6c\x49\xa3\x09\x5e"
              "\xb1\x08\xfd\x10\x98\xba\xec\x70"
              "\xaa\xa6\x69\x99\xa7\x2a\x82\xf2"
              "\x7d\x84\x8b\x21\xd4\xa7\x41\xb0"
              "\xc5\xcd\x4d\x5f\xff\x9d\xac\x89"
              "\xae\xba\x12\x29\x61\xd0\x3a\x75"
              "\x71\x23\xe9\x87\x0f\x8a\xcf\x10"
              "\x00\x02\x08\x87\x89\x14\x29\xca"
              "\x2a\x3e\x7a\x7d\x7d\xf7\xb1\x03"
              "\x55\x16\x5c\x8b\x9a\x6d\x0a\x7d"
              "\xe8\xb0\x62\xc4\x50\x0d\xc4\xcd"
              "\x12\x0c\x0f\x74\x18\xda\xe3\xd0"
              "\xb5\x78\x1c\x34\x80\x3f\xa7\x54"
              "\x21\xc7\x90\xdf\xe1\xde\x18\x34"
              "\xf2\x80\xd7\x66\x7b\x32\x7f\x6c"
              "\x8c\xd7\x55\x7e\x12\xac\x3a\x0f"
              "\x93\xec\x05\xc5\x2e\x04\x93\xef"
              "\x31\xa1\x2d\x3d\x92\x60\xf7\x9a"
              "\x28\x9d\x6a\x37\x9b\xc7\x0c\x50"
              "\x84\x14\x73\xd1\xa8\xcc\x81\xec"
              "\x58\x3e\x96\x45\xe0\x7b\x8d\x96"
              "\x70\x65\x5b\xa5\xbb\xcf\xec\xc6"
              "\xdc\x39\x66\x38\x0a\xd8\xfe\xcb"
              "\x17\xb6\xba\x02\x46\x9a\x02\x0a"
              "\x84\xe1\x8e\x8f\x84\x25\x20\x70"
              "\xc1\x3e\x9f\x1f\x28\x9b\xe5\x4f"
              "\xbc\x48\x14\x57\x77\x8f\x61\x60"
              "\x15\xe1\x32\x7a\x02\xb1\x40\xf1"
              "\x50\x5e\xb3\x09\x32\x6d\x68\x37"
              "\x8f\x83\x74\x59\x5c\x84\x9d\x84"
              "\xf4\xc3\x33\xec\x44\x23\x88\x51"
              "\x43\xcb\x47\xbd\x71\xc5\xed\xae"
              "\x9b\xe6\x9a\x2f\xfe\xce\xb1\xbe"
              "\xc9\xde\x24\x4f\xbe\x15\x99\x2b"
              "\x11\xb7\x7c\x04\x0f\x12\xbd\x8f"
              "\x6a\x97\x5a\x44\xa0\xf9\x0c\x29"
              "\xa9\xab\xc3\xd4\xd8\x93\x92\x72"
              "\x84\xc5\x87\x54\xcc\xe2\x94\x52"
              "\x9f\x86\x14\xdc\xd2\xab\xa9\x91"
              "\x92\x5f\xed\xc4\xae\x74\xff\xac"
              "\x6e\x33\x3b\x93\xeb\x4a\xff\x04"
              "\x79\xda\x9a\x41\x0e\x44\x50\xe0"
              "\xdd\x7a\xe4\xc6\xe2\x91\x09\x00"
              "\x57\x5d\xa4\x01\xfc\x07\x05\x9f"
              "\x64\x5e\x8b\x7e\x9b\xfd\xef\x33"
              "\x94\x30\x54\xff\x84\x01\x14\x93"
              "\xc2\x7b\x34\x29\xea\xed\xb4\xed"
              "\x53\x76\x44\x1a\x77\xed\x43\x85"
              "\x1a\xd7\x7f\x16\xf5\x41\xdf\xd2"
              "\x69\xd5\x0d\x6a\x5f\x14\xfb\x0a"
              "\xab\x1c\xbb\x4c\x15\x50\xbe\x97"
              "\xf7\xab\x40\x66\x19\x3c\x4c\xaa"
              "\x77\x3d\xad\x38\x01\x4b\xd2\x09"
              "\x2f\xa7\x55\xc8\x24\xbb\x5e\x54"
              "\xc4\xf3\x6f\xfd\xa9\xfc\xea\x70"
              "\xb9\xc6\xe6\x93\xe1\x48\xc1\x51",
        .rlen    = 512,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 512 - 16, 16 },
    }
};

static struct cipher_testvec aes_xts_dec_tv_template[] = {
    /* http://grouper.ieee.org/groups/1619/email/pdf00086.pdf */
    { /* XTS-AES 1 */
        .key    = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .klen   = 32,
        .iv     = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input = "\x91\x7c\xf6\x9e\xbd\x68\xb2\xec"
             "\x9b\x9f\xe9\xa3\xea\xdd\xa6\x92"
             "\xcd\x43\xd2\xf5\x95\x98\xed\x85"
             "\x8c\x02\xc2\x65\x2f\xbf\x92\x2e",
        .ilen   = 32,
        .result  = "\x00\x00\x00\x00\x00\x00\x00\x00"
               "\x00\x00\x00\x00\x00\x00\x00\x00"
               "\x00\x00\x00\x00\x00\x00\x00\x00"
               "\x00\x00\x00\x00\x00\x00\x00\x00",
        .rlen   = 32,
    }, { /* XTS-AES 2 */
        .key    = "\x11\x11\x11\x11\x11\x11\x11\x11"
              "\x11\x11\x11\x11\x11\x11\x11\x11"
              "\x22\x22\x22\x22\x22\x22\x22\x22"
              "\x22\x22\x22\x22\x22\x22\x22\x22",
        .klen   = 32,
        .iv     = "\x33\x33\x33\x33\x33\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\xc4\x54\x18\x5e\x6a\x16\x93\x6e"
              "\x39\x33\x40\x38\xac\xef\x83\x8b"
              "\xfb\x18\x6f\xff\x74\x80\xad\xc4"
              "\x28\x93\x82\xec\xd6\xd3\x94\xf0",
        .ilen   = 32,
        .result = "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44",
        .rlen   = 32,
    }, { /* XTS-AES 3 */
        .key    = "\xff\xfe\xfd\xfc\xfb\xfa\xf9\xf8"
              "\xf7\xf6\xf5\xf4\xf3\xf2\xf1\xf0"
              "\x22\x22\x22\x22\x22\x22\x22\x22"
              "\x22\x22\x22\x22\x22\x22\x22\x22",
        .klen   = 32,
        .iv     = "\x33\x33\x33\x33\x33\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input = "\xaf\x85\x33\x6b\x59\x7a\xfc\x1a"
              "\x90\x0b\x2e\xb2\x1e\xc9\x49\xd2"
              "\x92\xdf\x4c\x04\x7e\x0b\x21\x53"
              "\x21\x86\xa5\x97\x1a\x22\x7a\x89",
        .ilen   = 32,
        .result  = "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44"
              "\x44\x44\x44\x44\x44\x44\x44\x44",
        .rlen   = 32,
    }, { /* XTS-AES 4 */
        .key    = "\x27\x18\x28\x18\x28\x45\x90\x45"
              "\x23\x53\x60\x28\x74\x71\x35\x26"
              "\x31\x41\x59\x26\x53\x58\x97\x93"
              "\x23\x84\x62\x64\x33\x83\x27\x95",
        .klen   = 32,
        .iv     = "\x00\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input  = "\x27\xa7\x47\x9b\xef\xa1\xd4\x76"
              "\x48\x9f\x30\x8c\xd4\xcf\xa6\xe2"
              "\xa9\x6e\x4b\xbe\x32\x08\xff\x25"
              "\x28\x7d\xd3\x81\x96\x16\xe8\x9c"
              "\xc7\x8c\xf7\xf5\xe5\x43\x44\x5f"
              "\x83\x33\xd8\xfa\x7f\x56\x00\x00"
              "\x05\x27\x9f\xa5\xd8\xb5\xe4\xad"
              "\x40\xe7\x36\xdd\xb4\xd3\x54\x12"
              "\x32\x80\x63\xfd\x2a\xab\x53\xe5"
              "\xea\x1e\x0a\x9f\x33\x25\x00\xa5"
              "\xdf\x94\x87\xd0\x7a\x5c\x92\xcc"
              "\x51\x2c\x88\x66\xc7\xe8\x60\xce"
              "\x93\xfd\xf1\x66\xa2\x49\x12\xb4"
              "\x22\x97\x61\x46\xae\x20\xce\x84"
              "\x6b\xb7\xdc\x9b\xa9\x4a\x76\x7a"
              "\xae\xf2\x0c\x0d\x61\xad\x02\x65"
              "\x5e\xa9\x2d\xc4\xc4\xe4\x1a\x89"
              "\x52\xc6\x51\xd3\x31\x74\xbe\x51"
              "\xa1\x0c\x42\x11\x10\xe6\xd8\x15"
              "\x88\xed\xe8\x21\x03\xa2\x52\xd8"
              "\xa7\x50\xe8\x76\x8d\xef\xff\xed"
              "\x91\x22\x81\x0a\xae\xb9\x9f\x91"
              "\x72\xaf\x82\xb6\x04\xdc\x4b\x8e"
              "\x51\xbc\xb0\x82\x35\xa6\xf4\x34"
              "\x13\x32\xe4\xca\x60\x48\x2a\x4b"
              "\xa1\xa0\x3b\x3e\x65\x00\x8f\xc5"
              "\xda\x76\xb7\x0b\xf1\x69\x0d\xb4"
              "\xea\xe2\x9c\x5f\x1b\xad\xd0\x3c"
              "\x5c\xcf\x2a\x55\xd7\x05\xdd\xcd"
              "\x86\xd4\x49\x51\x1c\xeb\x7e\xc3"
              "\x0b\xf1\x2b\x1f\xa3\x5b\x91\x3f"
              "\x9f\x74\x7a\x8a\xfd\x1b\x13\x0e"
              "\x94\xbf\xf9\x4e\xff\xd0\x1a\x91"
              "\x73\x5c\xa1\x72\x6a\xcd\x0b\x19"
              "\x7c\x4e\x5b\x03\x39\x36\x97\xe1"
              "\x26\x82\x6f\xb6\xbb\xde\x8e\xcc"
              "\x1e\x08\x29\x85\x16\xe2\xc9\xed"
              "\x03\xff\x3c\x1b\x78\x60\xf6\xde"
              "\x76\xd4\xce\xcd\x94\xc8\x11\x98"
              "\x55\xef\x52\x97\xca\x67\xe9\xf3"
              "\xe7\xff\x72\xb1\xe9\x97\x85\xca"
              "\x0a\x7e\x77\x20\xc5\xb3\x6d\xc6"
              "\xd7\x2c\xac\x95\x74\xc8\xcb\xbc"
              "\x2f\x80\x1e\x23\xe5\x6f\xd3\x44"
              "\xb0\x7f\x22\x15\x4b\xeb\xa0\xf0"
              "\x8c\xe8\x89\x1e\x64\x3e\xd9\x95"
              "\xc9\x4d\x9a\x69\xc9\xf1\xb5\xf4"
              "\x99\x02\x7a\x78\x57\x2a\xee\xbd"
              "\x74\xd2\x0c\xc3\x98\x81\xc2\x13"
              "\xee\x77\x0b\x10\x10\xe4\xbe\xa7"
              "\x18\x84\x69\x77\xae\x11\x9f\x7a"
              "\x02\x3a\xb5\x8c\xca\x0a\xd7\x52"
              "\xaf\xe6\x56\xbb\x3c\x17\x25\x6a"
              "\x9f\x6e\x9b\xf1\x9f\xdd\x5a\x38"
              "\xfc\x82\xbb\xe8\x72\xc5\x53\x9e"
              "\xdb\x60\x9e\xf4\xf7\x9c\x20\x3e"
              "\xbb\x14\x0f\x2e\x58\x3c\xb2\xad"
              "\x15\xb4\xaa\x5b\x65\x50\x16\xa8"
              "\x44\x92\x77\xdb\xd4\x77\xef\x2c"
              "\x8d\x6c\x01\x7d\xb7\x38\xb1\x8d"
              "\xeb\x4a\x42\x7d\x19\x23\xce\x3f"
              "\xf2\x62\x73\x57\x79\xa4\x18\xf2"
              "\x0a\x28\x2d\xf9\x20\x14\x7b\xea"
              "\xbe\x42\x1e\xe5\x31\x9d\x05\x68",
        .ilen   = 512,
        .result = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
              "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .rlen   = 512,
    }, { /* XTS-AES 10, XTS-AES-256, data unit 512 bytes */
        .key    = "\x27\x18\x28\x18\x28\x45\x90\x45"
              "\x23\x53\x60\x28\x74\x71\x35\x26"
              "\x62\x49\x77\x57\x24\x70\x93\x69"
              "\x99\x59\x57\x49\x66\x96\x76\x27"
              "\x31\x41\x59\x26\x53\x58\x97\x93"
              "\x23\x84\x62\x64\x33\x83\x27\x95"
              "\x02\x88\x41\x97\x16\x93\x99\x37"
              "\x51\x05\x82\x09\x74\x94\x45\x92",
        .klen    = 64,
        .iv    = "\xff\x00\x00\x00\x00\x00\x00\x00"
              "\x00\x00\x00\x00\x00\x00\x00\x00",
        .input    = "\x1c\x3b\x3a\x10\x2f\x77\x03\x86"
              "\xe4\x83\x6c\x99\xe3\x70\xcf\x9b"
              "\xea\x00\x80\x3f\x5e\x48\x23\x57"
              "\xa4\xae\x12\xd4\x14\xa3\xe6\x3b"
              "\x5d\x31\xe2\x76\xf8\xfe\x4a\x8d"
              "\x66\xb3\x17\xf9\xac\x68\x3f\x44"
              "\x68\x0a\x86\xac\x35\xad\xfc\x33"
              "\x45\xbe\xfe\xcb\x4b\xb1\x88\xfd"
              "\x57\x76\x92\x6c\x49\xa3\x09\x5e"
              "\xb1\x08\xfd\x10\x98\xba\xec\x70"
              "\xaa\xa6\x69\x99\xa7\x2a\x82\xf2"
              "\x7d\x84\x8b\x21\xd4\xa7\x41\xb0"
              "\xc5\xcd\x4d\x5f\xff\x9d\xac\x89"
              "\xae\xba\x12\x29\x61\xd0\x3a\x75"
              "\x71\x23\xe9\x87\x0f\x8a\xcf\x10"
              "\x00\x02\x08\x87\x89\x14\x29\xca"
              "\x2a\x3e\x7a\x7d\x7d\xf7\xb1\x03"
              "\x55\x16\x5c\x8b\x9a\x6d\x0a\x7d"
              "\xe8\xb0\x62\xc4\x50\x0d\xc4\xcd"
              "\x12\x0c\x0f\x74\x18\xda\xe3\xd0"
              "\xb5\x78\x1c\x34\x80\x3f\xa7\x54"
              "\x21\xc7\x90\xdf\xe1\xde\x18\x34"
              "\xf2\x80\xd7\x66\x7b\x32\x7f\x6c"
              "\x8c\xd7\x55\x7e\x12\xac\x3a\x0f"
              "\x93\xec\x05\xc5\x2e\x04\x93\xef"
              "\x31\xa1\x2d\x3d\x92\x60\xf7\x9a"
              "\x28\x9d\x6a\x37\x9b\xc7\x0c\x50"
              "\x84\x14\x73\xd1\xa8\xcc\x81\xec"
              "\x58\x3e\x96\x45\xe0\x7b\x8d\x96"
              "\x70\x65\x5b\xa5\xbb\xcf\xec\xc6"
              "\xdc\x39\x66\x38\x0a\xd8\xfe\xcb"
              "\x17\xb6\xba\x02\x46\x9a\x02\x0a"
              "\x84\xe1\x8e\x8f\x84\x25\x20\x70"
              "\xc1\x3e\x9f\x1f\x28\x9b\xe5\x4f"
              "\xbc\x48\x14\x57\x77\x8f\x61\x60"
              "\x15\xe1\x32\x7a\x02\xb1\x40\xf1"
              "\x50\x5e\xb3\x09\x32\x6d\x68\x37"
              "\x8f\x83\x74\x59\x5c\x84\x9d\x84"
              "\xf4\xc3\x33\xec\x44\x23\x88\x51"
              "\x43\xcb\x47\xbd\x71\xc5\xed\xae"
              "\x9b\xe6\x9a\x2f\xfe\xce\xb1\xbe"
              "\xc9\xde\x24\x4f\xbe\x15\x99\x2b"
              "\x11\xb7\x7c\x04\x0f\x12\xbd\x8f"
              "\x6a\x97\x5a\x44\xa0\xf9\x0c\x29"
              "\xa9\xab\xc3\xd4\xd8\x93\x92\x72"
              "\x84\xc5\x87\x54\xcc\xe2\x94\x52"
              "\x9f\x86\x14\xdc\xd2\xab\xa9\x91"
              "\x92\x5f\xed\xc4\xae\x74\xff\xac"
              "\x6e\x33\x3b\x93\xeb\x4a\xff\x04"
              "\x79\xda\x9a\x41\x0e\x44\x50\xe0"
              "\xdd\x7a\xe4\xc6\xe2\x91\x09\x00"
              "\x57\x5d\xa4\x01\xfc\x07\x05\x9f"
              "\x64\x5e\x8b\x7e\x9b\xfd\xef\x33"
              "\x94\x30\x54\xff\x84\x01\x14\x93"
              "\xc2\x7b\x34\x29\xea\xed\xb4\xed"
              "\x53\x76\x44\x1a\x77\xed\x43\x85"
              "\x1a\xd7\x7f\x16\xf5\x41\xdf\xd2"
              "\x69\xd5\x0d\x6a\x5f\x14\xfb\x0a"
              "\xab\x1c\xbb\x4c\x15\x50\xbe\x97"
              "\xf7\xab\x40\x66\x19\x3c\x4c\xaa"
              "\x77\x3d\xad\x38\x01\x4b\xd2\x09"
              "\x2f\xa7\x55\xc8\x24\xbb\x5e\x54"
              "\xc4\xf3\x6f\xfd\xa9\xfc\xea\x70"
              "\xb9\xc6\xe6\x93\xe1\x48\xc1\x51",
        .ilen    = 512,
        .result    = "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
              "\x00\x01\x02\x03\x04\x05\x06\x07"
              "\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f"
              "\x10\x11\x12\x13\x14\x15\x16\x17"
              "\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
              "\x20\x21\x22\x23\x24\x25\x26\x27"
              "\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f"
              "\x30\x31\x32\x33\x34\x35\x36\x37"
              "\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
              "\x40\x41\x42\x43\x44\x45\x46\x47"
              "\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f"
              "\x50\x51\x52\x53\x54\x55\x56\x57"
              "\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
              "\x60\x61\x62\x63\x64\x65\x66\x67"
              "\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f"
              "\x70\x71\x72\x73\x74\x75\x76\x77"
              "\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
              "\x80\x81\x82\x83\x84\x85\x86\x87"
              "\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f"
              "\x90\x91\x92\x93\x94\x95\x96\x97"
              "\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
              "\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7"
              "\xa8\xa9\xaa\xab\xac\xad\xae\xaf"
              "\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7"
              "\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
              "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7"
              "\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf"
              "\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7"
              "\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
              "\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7"
              "\xe8\xe9\xea\xeb\xec\xed\xee\xef"
              "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .rlen    = 512,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 512 - 16, 16 },
    }
};


static struct cipher_testvec aes_ctr_enc_tv_template[] = {
    { /* From NIST Special Publication 800-38A, Appendix F.5 */
        .key    = "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
              "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
        .klen    = 16,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .ilen    = 64,
        .result    = "\x87\x4d\x61\x91\xb6\x20\xe3\x26"
              "\x1b\xef\x68\x64\x99\x0d\xb6\xce"
              "\x98\x06\xf6\x6b\x79\x70\xfd\xff"
              "\x86\x17\x18\x7b\xb9\xff\xfd\xff"
              "\x5a\xe4\xdf\x3e\xdb\xd5\xd3\x5e"
              "\x5b\x4f\x09\x02\x0d\xb0\x3e\xab"
              "\x1e\x03\x1d\xda\x2f\xbe\x03\xd1"
              "\x79\x21\x70\xa0\xf3\x00\x9c\xee",
        .rlen    = 64,
    }, {
        .key    = "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
              "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
              "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
        .klen    = 24,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .ilen    = 64,
        .result    = "\x1a\xbc\x93\x24\x17\x52\x1c\xa2"
              "\x4f\x2b\x04\x59\xfe\x7e\x6e\x0b"
              "\x09\x03\x39\xec\x0a\xa6\xfa\xef"
              "\xd5\xcc\xc2\xc6\xf4\xce\x8e\x94"
              "\x1e\x36\xb2\x6b\xd1\xeb\xc6\x70"
              "\xd1\xbd\x1d\x66\x56\x20\xab\xf7"
              "\x4f\x78\xa7\xf6\xd2\x98\x09\x58"
              "\x5a\x97\xda\xec\x58\xc6\xb0\x50",
        .rlen    = 64,
    }, {
        .key    = "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
              "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
              "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
              "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
        .klen    = 32,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .ilen    = 64,
        .result    = "\x60\x1e\xc3\x13\x77\x57\x89\xa5"
              "\xb7\xa7\xf5\x04\xbb\xf3\xd2\x28"
              "\xf4\x43\xe3\xca\x4d\x62\xb5\x9a"
              "\xca\x84\xe9\x90\xca\xca\xf5\xc5"
              "\x2b\x09\x30\xda\xa2\x3d\xe9\x4c"
              "\xe8\x70\x17\xba\x2d\x84\x98\x8d"
              "\xdf\xc9\xc5\x8d\xb6\x7a\xad\xa6"
              "\x13\xc2\xdd\x08\x45\x79\x41\xa6",
        .rlen    = 64,
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD",
        .input    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .ilen    = 496,
        .result    = "\x04\xF3\xD3\x88\x17\xEF\xDC\xEF"
              "\x8B\x04\xF8\x3A\x66\x8D\x1A\x53"
              "\x57\x1F\x4B\x23\xE4\xA0\xAF\xF9"
              "\x69\x95\x35\x98\x8D\x4D\x8C\xC1"
              "\xF0\xB2\x7F\x80\xBB\x54\x28\xA2"
              "\x7A\x1B\x9F\x77\xEC\x0E\x6E\xDE"
              "\xF0\xEC\xB8\xE4\x20\x62\xEE\xDB"
              "\x5D\xF5\xDD\xE3\x54\xFC\xDD\xEB"
              "\x6A\xEE\x65\xA1\x21\xD6\xD7\x81"
              "\x47\x61\x12\x4D\xC2\x8C\xFA\x78"
              "\x1F\x28\x02\x01\xC3\xFC\x1F\xEC"
              "\x0F\x10\x4F\xB3\x12\x45\xC6\x3B"
              "\x7E\x08\xF9\x5A\xD0\x5D\x73\x2D"
              "\x58\xA4\xE5\xCB\x1C\xB4\xCE\x74"
              "\x32\x41\x1F\x31\x9C\x08\xA2\x5D"
              "\x67\xEB\x72\x1D\xF8\xE7\x70\x54"
              "\x34\x4B\x31\x69\x84\x66\x96\x44"
              "\x56\xCC\x1E\xD9\xE6\x13\x6A\xB9"
              "\x2D\x0A\x05\x45\x2D\x90\xCC\xDF"
              "\x16\x5C\x5F\x79\x34\x52\x54\xFE"
              "\xFE\xCD\xAD\x04\x2E\xAD\x86\x06"
              "\x1F\x37\xE8\x28\xBC\xD3\x8F\x5B"
              "\x92\x66\x87\x3B\x8A\x0A\x1A\xCC"
              "\x6E\xAB\x9F\x0B\xFA\x5C\xE6\xFD"
              "\x3C\x98\x08\x12\xEC\xAA\x9E\x11"
              "\xCA\xB2\x1F\xCE\x5E\x5B\xB2\x72"
              "\x9C\xCC\x5D\xC5\xE0\x32\xC0\x56"
              "\xD5\x45\x16\xD2\xAF\x13\x66\xF7"
              "\x8C\x67\xAC\x79\xB2\xAF\x56\x27"
              "\x3F\xCC\xFE\xCB\x1E\xC0\x75\xF1"
              "\xA7\xC9\xC3\x1D\x8E\xDD\xF9\xD4"
              "\x42\xC8\x21\x08\x16\xF7\x01\xD7"
              "\xAC\x8E\x3F\x1D\x56\xC1\x06\xE4"
              "\x9C\x62\xD6\xA5\x6A\x50\x44\xB3"
              "\x35\x1C\x82\xB9\x10\xF9\x42\xA1"
              "\xFC\x74\x9B\x44\x4F\x25\x02\xE3"
              "\x08\xF5\xD4\x32\x39\x08\x11\xE8"
              "\xD2\x6B\x50\x53\xD4\x08\xD1\x6B"
              "\x3A\x4A\x68\x7B\x7C\xCD\x46\x5E"
              "\x0D\x07\x19\xDB\x67\xD7\x98\x91"
              "\xD7\x17\x10\x9B\x7B\x8A\x9B\x33"
              "\xAE\xF3\x00\xA6\xD4\x15\xD9\xEA"
              "\x85\x99\x22\xE8\x91\x38\x70\x83"
              "\x93\x01\x24\x6C\xFA\x9A\xB9\x07"
              "\xEA\x8D\x3B\xD9\x2A\x43\x59\x16"
              "\x2F\x69\xEE\x84\x36\x44\x76\x98"
              "\xF3\x04\x2A\x7C\x74\x3D\x29\x2B"
              "\x0D\xAD\x8F\x44\x82\x9E\x57\x8D"
              "\xAC\xED\x18\x1F\x50\xA4\xF5\x98"
              "\x1F\xBD\x92\x91\x1B\x2D\xA6\xD6"
              "\xD2\xE3\x02\xAA\x92\x3B\xC6\xB3"
              "\x1B\x39\x72\xD5\x26\xCA\x04\xE0"
              "\xFC\x58\x78\xBB\xB1\x3F\xA1\x9C"
              "\x42\x24\x3E\x2E\x22\xBB\x4B\xBA"
              "\xF4\x52\x0A\xE6\xAE\x47\xB4\x7D"
              "\x1D\xA8\xBE\x81\x1A\x75\xDA\xAC"
              "\xA6\x25\x1E\xEF\x3A\xC0\x6C\x63"
              "\xEF\xDC\xC9\x79\x10\x26\xE8\x61"
              "\x29\xFC\xA4\x05\xDF\x7D\x5C\x63"
              "\x10\x09\x9B\x46\x9B\xF2\x2C\x2B"
              "\xFA\x3A\x05\x4C\xFA\xD1\xFF\xFE"
              "\xF1\x4C\xE5\xB2\x91\x64\x0C\x51",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xE7\x82\x1D\xB8\x53\x11\xAC\x47"
              "\xE2\x7D\x18\xD6\x71\x0C\xA7\x42",
        .input    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12"
              "\x7B\xE4\x4D",
        .ilen    = 499,
        .result    = "\xDA\x4E\x3F\xBC\xE8\xB6\x3A\xA2"
              "\xD5\x4D\x84\x4A\xA9\x0C\xE1\xA5"
              "\xB8\x73\xBC\xF9\xBB\x59\x2F\x44"
              "\x8B\xAB\x82\x6C\xB4\x32\x9A\xDE"
              "\x5A\x0B\xDB\x7A\x6B\xF2\x38\x9F"
              "\x06\xF7\xF7\xFF\xFF\xC0\x8A\x2E"
              "\x76\xEA\x06\x32\x23\xF3\x59\x2E"
              "\x75\xDE\x71\x86\x3C\x98\x23\x44"
              "\x5B\xF2\xFA\x6A\x00\xBB\xC1\xAD"
              "\x58\xBD\x3E\x6F\x2E\xB4\x19\x04"
              "\x70\x8B\x92\x55\x23\xE9\x6A\x3A"
              "\x78\x7A\x1B\x10\x85\x52\x9C\x12"
              "\xE4\x55\x81\x21\xCE\x53\xD0\x3B"
              "\x63\x77\x2C\x74\xD1\xF5\x60\xF3"
              "\xA1\xDE\x44\x3C\x8F\x4D\x2F\xDD"
              "\x8A\xFE\x3C\x42\x8E\xD3\xF2\x8E"
              "\xA8\x28\x69\x65\x31\xE1\x45\x83"
              "\xE4\x49\xC4\x9C\xA7\x28\xAA\x21"
              "\xCD\x5D\x0F\x15\xB7\x93\x07\x26"
              "\xB0\x65\x6D\x91\x90\x23\x7A\xC6"
              "\xDB\x68\xB0\xA1\x8E\xA4\x76\x4E"
              "\xC6\x91\x83\x20\x92\x4D\x63\x7A"
              "\x45\x18\x18\x74\x19\xAD\x71\x01"
              "\x6B\x23\xAD\x9D\x4E\xE4\x6E\x46"
              "\xC9\x73\x7A\xF9\x02\x95\xF4\x07"
              "\x0E\x7A\xA6\xC5\xAE\xFA\x15\x2C"
              "\x51\x71\xF1\xDC\x22\xB6\xAC\xD8"
              "\x19\x24\x44\xBC\x0C\xFB\x3C\x2D"
              "\xB1\x50\x47\x15\x0E\xDB\xB6\xD7"
              "\xE8\x61\xE5\x95\x52\x1E\x3E\x49"
              "\x70\xE9\x66\x04\x4C\xE1\xAF\xBD"
              "\xDD\x15\x3B\x20\x59\x24\xFF\xB0"
              "\x39\xAA\xE7\xBF\x23\xA3\x6E\xD5"
              "\x15\xF0\x61\x4F\xAE\x89\x10\x58"
              "\x5A\x33\x95\x52\x2A\xB5\x77\x9C"
              "\xA5\x43\x80\x40\x27\x2D\xAE\xD9"
              "\x3F\xE0\x80\x94\x78\x79\xCB\x7E"
              "\xAD\x12\x44\x4C\xEC\x27\xB0\xEE"
              "\x0B\x05\x2A\x82\x99\x58\xBB\x7A"
              "\x8D\x6D\x9D\x8E\xE2\x8E\xE7\x93"
              "\x2F\xB3\x09\x8D\x06\xD5\xEE\x70"
              "\x16\xAE\x35\xC5\x52\x0F\x46\x1F"
              "\x71\xF9\x5E\xF2\x67\xDC\x98\x2F"
              "\xA3\x23\xAA\xD5\xD0\x49\xF4\xA6"
              "\xF6\xB8\x32\xCD\xD6\x85\x73\x60"
              "\x59\x20\xE7\x55\x0E\x91\xE2\x0C"
              "\x3F\x1C\xEB\x3D\xDF\x52\x64\xF2"
              "\x7D\x8B\x5D\x63\x16\xB9\xB2\x5D"
              "\x5E\xAB\xB2\x97\xAB\x78\x44\xE7"
              "\xC6\x72\x20\xC5\x90\x9B\xDC\x5D"
              "\xB0\xEF\x44\xEF\x87\x31\x8D\xF4"
              "\xFB\x81\x5D\xF7\x96\x96\xD4\x50"
              "\x89\xA7\xF6\xB9\x67\x76\x40\x9E"
              "\x9D\x40\xD5\x2C\x30\xB8\x01\x8F"
              "\xE4\x7B\x71\x48\xA9\xA0\xA0\x1D"
              "\x87\x52\xA4\x91\xA9\xD7\xA9\x51"
              "\xD9\x59\xF7\xCC\x63\x22\xC1\x8D"
              "\x84\x7B\xD8\x22\x32\x5C\x6F\x1D"
              "\x6E\x9F\xFA\xDD\x49\x40\xDC\x37"
              "\x14\x8C\xE1\x80\x1B\xDD\x36\x2A"
              "\xD0\xE9\x54\x99\x5D\xBA\x3B\x11"
              "\xD8\xFE\xC9\x5B\x5C\x25\xE5\x76"
              "\xFB\xF2\x3F",
        .rlen    = 499,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 499 - 16, 16 },
    },
};

static struct cipher_testvec aes_ctr_dec_tv_template[] = {
    { /* From NIST Special Publication 800-38A, Appendix F.5 */
        .key    = "\x2b\x7e\x15\x16\x28\xae\xd2\xa6"
              "\xab\xf7\x15\x88\x09\xcf\x4f\x3c",
        .klen    = 16,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x87\x4d\x61\x91\xb6\x20\xe3\x26"
              "\x1b\xef\x68\x64\x99\x0d\xb6\xce"
              "\x98\x06\xf6\x6b\x79\x70\xfd\xff"
              "\x86\x17\x18\x7b\xb9\xff\xfd\xff"
              "\x5a\xe4\xdf\x3e\xdb\xd5\xd3\x5e"
              "\x5b\x4f\x09\x02\x0d\xb0\x3e\xab"
              "\x1e\x03\x1d\xda\x2f\xbe\x03\xd1"
              "\x79\x21\x70\xa0\xf3\x00\x9c\xee",
        .ilen    = 64,
        .result    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .rlen    = 64,
    }, {
        .key    = "\x8e\x73\xb0\xf7\xda\x0e\x64\x52"
              "\xc8\x10\xf3\x2b\x80\x90\x79\xe5"
              "\x62\xf8\xea\xd2\x52\x2c\x6b\x7b",
        .klen    = 24,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x1a\xbc\x93\x24\x17\x52\x1c\xa2"
              "\x4f\x2b\x04\x59\xfe\x7e\x6e\x0b"
              "\x09\x03\x39\xec\x0a\xa6\xfa\xef"
              "\xd5\xcc\xc2\xc6\xf4\xce\x8e\x94"
              "\x1e\x36\xb2\x6b\xd1\xeb\xc6\x70"
              "\xd1\xbd\x1d\x66\x56\x20\xab\xf7"
              "\x4f\x78\xa7\xf6\xd2\x98\x09\x58"
              "\x5a\x97\xda\xec\x58\xc6\xb0\x50",
        .ilen    = 64,
        .result    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .rlen    = 64,
    }, {
        .key    = "\x60\x3d\xeb\x10\x15\xca\x71\xbe"
              "\x2b\x73\xae\xf0\x85\x7d\x77\x81"
              "\x1f\x35\x2c\x07\x3b\x61\x08\xd7"
              "\x2d\x98\x10\xa3\x09\x14\xdf\xf4",
        .klen    = 32,
        .iv    = "\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7"
              "\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",
        .input    = "\x60\x1e\xc3\x13\x77\x57\x89\xa5"
              "\xb7\xa7\xf5\x04\xbb\xf3\xd2\x28"
              "\xf4\x43\xe3\xca\x4d\x62\xb5\x9a"
              "\xca\x84\xe9\x90\xca\xca\xf5\xc5"
              "\x2b\x09\x30\xda\xa2\x3d\xe9\x4c"
              "\xe8\x70\x17\xba\x2d\x84\x98\x8d"
              "\xdf\xc9\xc5\x8d\xb6\x7a\xad\xa6"
              "\x13\xc2\xdd\x08\x45\x79\x41\xa6",
        .ilen    = 64,
        .result    = "\x6b\xc1\xbe\xe2\x2e\x40\x9f\x96"
              "\xe9\x3d\x7e\x11\x73\x93\x17\x2a"
              "\xae\x2d\x8a\x57\x1e\x03\xac\x9c"
              "\x9e\xb7\x6f\xac\x45\xaf\x8e\x51"
              "\x30\xc8\x1c\x46\xa3\x5c\xe4\x11"
              "\xe5\xfb\xc1\x19\x1a\x0a\x52\xef"
              "\xf6\x9f\x24\x45\xdf\x4f\x9b\x17"
              "\xad\x2b\x41\x7b\xe6\x6c\x37\x10",
        .rlen    = 64,
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
              "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD",
        .input    = "\x04\xF3\xD3\x88\x17\xEF\xDC\xEF"
              "\x8B\x04\xF8\x3A\x66\x8D\x1A\x53"
              "\x57\x1F\x4B\x23\xE4\xA0\xAF\xF9"
              "\x69\x95\x35\x98\x8D\x4D\x8C\xC1"
              "\xF0\xB2\x7F\x80\xBB\x54\x28\xA2"
              "\x7A\x1B\x9F\x77\xEC\x0E\x6E\xDE"
              "\xF0\xEC\xB8\xE4\x20\x62\xEE\xDB"
              "\x5D\xF5\xDD\xE3\x54\xFC\xDD\xEB"
              "\x6A\xEE\x65\xA1\x21\xD6\xD7\x81"
              "\x47\x61\x12\x4D\xC2\x8C\xFA\x78"
              "\x1F\x28\x02\x01\xC3\xFC\x1F\xEC"
              "\x0F\x10\x4F\xB3\x12\x45\xC6\x3B"
              "\x7E\x08\xF9\x5A\xD0\x5D\x73\x2D"
              "\x58\xA4\xE5\xCB\x1C\xB4\xCE\x74"
              "\x32\x41\x1F\x31\x9C\x08\xA2\x5D"
              "\x67\xEB\x72\x1D\xF8\xE7\x70\x54"
              "\x34\x4B\x31\x69\x84\x66\x96\x44"
              "\x56\xCC\x1E\xD9\xE6\x13\x6A\xB9"
              "\x2D\x0A\x05\x45\x2D\x90\xCC\xDF"
              "\x16\x5C\x5F\x79\x34\x52\x54\xFE"
              "\xFE\xCD\xAD\x04\x2E\xAD\x86\x06"
              "\x1F\x37\xE8\x28\xBC\xD3\x8F\x5B"
              "\x92\x66\x87\x3B\x8A\x0A\x1A\xCC"
              "\x6E\xAB\x9F\x0B\xFA\x5C\xE6\xFD"
              "\x3C\x98\x08\x12\xEC\xAA\x9E\x11"
              "\xCA\xB2\x1F\xCE\x5E\x5B\xB2\x72"
              "\x9C\xCC\x5D\xC5\xE0\x32\xC0\x56"
              "\xD5\x45\x16\xD2\xAF\x13\x66\xF7"
              "\x8C\x67\xAC\x79\xB2\xAF\x56\x27"
              "\x3F\xCC\xFE\xCB\x1E\xC0\x75\xF1"
              "\xA7\xC9\xC3\x1D\x8E\xDD\xF9\xD4"
              "\x42\xC8\x21\x08\x16\xF7\x01\xD7"
              "\xAC\x8E\x3F\x1D\x56\xC1\x06\xE4"
              "\x9C\x62\xD6\xA5\x6A\x50\x44\xB3"
              "\x35\x1C\x82\xB9\x10\xF9\x42\xA1"
              "\xFC\x74\x9B\x44\x4F\x25\x02\xE3"
              "\x08\xF5\xD4\x32\x39\x08\x11\xE8"
              "\xD2\x6B\x50\x53\xD4\x08\xD1\x6B"
              "\x3A\x4A\x68\x7B\x7C\xCD\x46\x5E"
              "\x0D\x07\x19\xDB\x67\xD7\x98\x91"
              "\xD7\x17\x10\x9B\x7B\x8A\x9B\x33"
              "\xAE\xF3\x00\xA6\xD4\x15\xD9\xEA"
              "\x85\x99\x22\xE8\x91\x38\x70\x83"
              "\x93\x01\x24\x6C\xFA\x9A\xB9\x07"
              "\xEA\x8D\x3B\xD9\x2A\x43\x59\x16"
              "\x2F\x69\xEE\x84\x36\x44\x76\x98"
              "\xF3\x04\x2A\x7C\x74\x3D\x29\x2B"
              "\x0D\xAD\x8F\x44\x82\x9E\x57\x8D"
              "\xAC\xED\x18\x1F\x50\xA4\xF5\x98"
              "\x1F\xBD\x92\x91\x1B\x2D\xA6\xD6"
              "\xD2\xE3\x02\xAA\x92\x3B\xC6\xB3"
              "\x1B\x39\x72\xD5\x26\xCA\x04\xE0"
              "\xFC\x58\x78\xBB\xB1\x3F\xA1\x9C"
              "\x42\x24\x3E\x2E\x22\xBB\x4B\xBA"
              "\xF4\x52\x0A\xE6\xAE\x47\xB4\x7D"
              "\x1D\xA8\xBE\x81\x1A\x75\xDA\xAC"
              "\xA6\x25\x1E\xEF\x3A\xC0\x6C\x63"
              "\xEF\xDC\xC9\x79\x10\x26\xE8\x61"
              "\x29\xFC\xA4\x05\xDF\x7D\x5C\x63"
              "\x10\x09\x9B\x46\x9B\xF2\x2C\x2B"
              "\xFA\x3A\x05\x4C\xFA\xD1\xFF\xFE"
              "\xF1\x4C\xE5\xB2\x91\x64\x0C\x51",
        .ilen    = 496,
        .result    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12",
        .rlen    = 496,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 496 - 16, 16 },
    }, { /* Generated with Crypto++ */
        .key    = "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
              "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
              "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
              "\x6D\x90\x4A\x6D\x90\xB3\xD6\xF9",
        .klen    = 32,
        .iv    = "\xE7\x82\x1D\xB8\x53\x11\xAC\x47"
              "\xE2\x7D\x18\xD6\x71\x0C\xA7\x42",
        .input    = "\xDA\x4E\x3F\xBC\xE8\xB6\x3A\xA2"
              "\xD5\x4D\x84\x4A\xA9\x0C\xE1\xA5"
              "\xB8\x73\xBC\xF9\xBB\x59\x2F\x44"
              "\x8B\xAB\x82\x6C\xB4\x32\x9A\xDE"
              "\x5A\x0B\xDB\x7A\x6B\xF2\x38\x9F"
              "\x06\xF7\xF7\xFF\xFF\xC0\x8A\x2E"
              "\x76\xEA\x06\x32\x23\xF3\x59\x2E"
              "\x75\xDE\x71\x86\x3C\x98\x23\x44"
              "\x5B\xF2\xFA\x6A\x00\xBB\xC1\xAD"
              "\x58\xBD\x3E\x6F\x2E\xB4\x19\x04"
              "\x70\x8B\x92\x55\x23\xE9\x6A\x3A"
              "\x78\x7A\x1B\x10\x85\x52\x9C\x12"
              "\xE4\x55\x81\x21\xCE\x53\xD0\x3B"
              "\x63\x77\x2C\x74\xD1\xF5\x60\xF3"
              "\xA1\xDE\x44\x3C\x8F\x4D\x2F\xDD"
              "\x8A\xFE\x3C\x42\x8E\xD3\xF2\x8E"
              "\xA8\x28\x69\x65\x31\xE1\x45\x83"
              "\xE4\x49\xC4\x9C\xA7\x28\xAA\x21"
              "\xCD\x5D\x0F\x15\xB7\x93\x07\x26"
              "\xB0\x65\x6D\x91\x90\x23\x7A\xC6"
              "\xDB\x68\xB0\xA1\x8E\xA4\x76\x4E"
              "\xC6\x91\x83\x20\x92\x4D\x63\x7A"
              "\x45\x18\x18\x74\x19\xAD\x71\x01"
              "\x6B\x23\xAD\x9D\x4E\xE4\x6E\x46"
              "\xC9\x73\x7A\xF9\x02\x95\xF4\x07"
              "\x0E\x7A\xA6\xC5\xAE\xFA\x15\x2C"
              "\x51\x71\xF1\xDC\x22\xB6\xAC\xD8"
              "\x19\x24\x44\xBC\x0C\xFB\x3C\x2D"
              "\xB1\x50\x47\x15\x0E\xDB\xB6\xD7"
              "\xE8\x61\xE5\x95\x52\x1E\x3E\x49"
              "\x70\xE9\x66\x04\x4C\xE1\xAF\xBD"
              "\xDD\x15\x3B\x20\x59\x24\xFF\xB0"
              "\x39\xAA\xE7\xBF\x23\xA3\x6E\xD5"
              "\x15\xF0\x61\x4F\xAE\x89\x10\x58"
              "\x5A\x33\x95\x52\x2A\xB5\x77\x9C"
              "\xA5\x43\x80\x40\x27\x2D\xAE\xD9"
              "\x3F\xE0\x80\x94\x78\x79\xCB\x7E"
              "\xAD\x12\x44\x4C\xEC\x27\xB0\xEE"
              "\x0B\x05\x2A\x82\x99\x58\xBB\x7A"
              "\x8D\x6D\x9D\x8E\xE2\x8E\xE7\x93"
              "\x2F\xB3\x09\x8D\x06\xD5\xEE\x70"
              "\x16\xAE\x35\xC5\x52\x0F\x46\x1F"
              "\x71\xF9\x5E\xF2\x67\xDC\x98\x2F"
              "\xA3\x23\xAA\xD5\xD0\x49\xF4\xA6"
              "\xF6\xB8\x32\xCD\xD6\x85\x73\x60"
              "\x59\x20\xE7\x55\x0E\x91\xE2\x0C"
              "\x3F\x1C\xEB\x3D\xDF\x52\x64\xF2"
              "\x7D\x8B\x5D\x63\x16\xB9\xB2\x5D"
              "\x5E\xAB\xB2\x97\xAB\x78\x44\xE7"
              "\xC6\x72\x20\xC5\x90\x9B\xDC\x5D"
              "\xB0\xEF\x44\xEF\x87\x31\x8D\xF4"
              "\xFB\x81\x5D\xF7\x96\x96\xD4\x50"
              "\x89\xA7\xF6\xB9\x67\x76\x40\x9E"
              "\x9D\x40\xD5\x2C\x30\xB8\x01\x8F"
              "\xE4\x7B\x71\x48\xA9\xA0\xA0\x1D"
              "\x87\x52\xA4\x91\xA9\xD7\xA9\x51"
              "\xD9\x59\xF7\xCC\x63\x22\xC1\x8D"
              "\x84\x7B\xD8\x22\x32\x5C\x6F\x1D"
              "\x6E\x9F\xFA\xDD\x49\x40\xDC\x37"
              "\x14\x8C\xE1\x80\x1B\xDD\x36\x2A"
              "\xD0\xE9\x54\x99\x5D\xBA\x3B\x11"
              "\xD8\xFE\xC9\x5B\x5C\x25\xE5\x76"
              "\xFB\xF2\x3F",
        .ilen    = 499,
        .result    = "\x50\xB9\x22\xAE\x17\x80\x0C\x75"
              "\xDE\x47\xD3\x3C\xA5\x0E\x9A\x03"
              "\x6C\xF8\x61\xCA\x33\xBF\x28\x91"
              "\x1D\x86\xEF\x58\xE4\x4D\xB6\x1F"
              "\xAB\x14\x7D\x09\x72\xDB\x44\xD0"
              "\x39\xA2\x0B\x97\x00\x69\xF5\x5E"
              "\xC7\x30\xBC\x25\x8E\x1A\x83\xEC"
              "\x55\xE1\x4A\xB3\x1C\xA8\x11\x7A"
              "\x06\x6F\xD8\x41\xCD\x36\x9F\x08"
              "\x94\xFD\x66\xF2\x5B\xC4\x2D\xB9"
              "\x22\x8B\x17\x80\xE9\x52\xDE\x47"
              "\xB0\x19\xA5\x0E\x77\x03\x6C\xD5"
              "\x3E\xCA\x33\x9C\x05\x91\xFA\x63"
              "\xEF\x58\xC1\x2A\xB6\x1F\x88\x14"
              "\x7D\xE6\x4F\xDB\x44\xAD\x16\xA2"
              "\x0B\x74\x00\x69\xD2\x3B\xC7\x30"
              "\x99\x02\x8E\xF7\x60\xEC\x55\xBE"
              "\x27\xB3\x1C\x85\x11\x7A\xE3\x4C"
              "\xD8\x41\xAA\x13\x9F\x08\x71\xFD"
              "\x66\xCF\x38\xC4\x2D\x96\x22\x8B"
              "\xF4\x5D\xE9\x52\xBB\x24\xB0\x19"
              "\x82\x0E\x77\xE0\x49\xD5\x3E\xA7"
              "\x10\x9C\x05\x6E\xFA\x63\xCC\x35"
              "\xC1\x2A\x93\x1F\x88\xF1\x5A\xE6"
              "\x4F\xB8\x21\xAD\x16\x7F\x0B\x74"
              "\xDD\x46\xD2\x3B\xA4\x0D\x99\x02"
              "\x6B\xF7\x60\xC9\x32\xBE\x27\x90"
              "\x1C\x85\xEE\x57\xE3\x4C\xB5\x1E"
              "\xAA\x13\x7C\x08\x71\xDA\x43\xCF"
              "\x38\xA1\x0A\x96\xFF\x68\xF4\x5D"
              "\xC6\x2F\xBB\x24\x8D\x19\x82\xEB"
              "\x54\xE0\x49\xB2\x1B\xA7\x10\x79"
              "\x05\x6E\xD7\x40\xCC\x35\x9E\x07"
              "\x93\xFC\x65\xF1\x5A\xC3\x2C\xB8"
              "\x21\x8A\x16\x7F\xE8\x51\xDD\x46"
              "\xAF\x18\xA4\x0D\x76\x02\x6B\xD4"
              "\x3D\xC9\x32\x9B\x04\x90\xF9\x62"
              "\xEE\x57\xC0\x29\xB5\x1E\x87\x13"
              "\x7C\xE5\x4E\xDA\x43\xAC\x15\xA1"
              "\x0A\x73\xFF\x68\xD1\x3A\xC6\x2F"
              "\x98\x01\x8D\xF6\x5F\xEB\x54\xBD"
              "\x26\xB2\x1B\x84\x10\x79\xE2\x4B"
              "\xD7\x40\xA9\x12\x9E\x07\x70\xFC"
              "\x65\xCE\x37\xC3\x2C\x95\x21\x8A"
              "\xF3\x5C\xE8\x51\xBA\x23\xAF\x18"
              "\x81\x0D\x76\xDF\x48\xD4\x3D\xA6"
              "\x0F\x9B\x04\x6D\xF9\x62\xCB\x34"
              "\xC0\x29\x92\x1E\x87\xF0\x59\xE5"
              "\x4E\xB7\x20\xAC\x15\x7E\x0A\x73"
              "\xDC\x45\xD1\x3A\xA3\x0C\x98\x01"
              "\x6A\xF6\x5F\xC8\x31\xBD\x26\x8F"
              "\x1B\x84\xED\x56\xE2\x4B\xB4\x1D"
              "\xA9\x12\x7B\x07\x70\xD9\x42\xCE"
              "\x37\xA0\x09\x95\xFE\x67\xF3\x5C"
              "\xC5\x2E\xBA\x23\x8C\x18\x81\xEA"
              "\x53\xDF\x48\xB1\x1A\xA6\x0F\x78"
              "\x04\x6D\xD6\x3F\xCB\x34\x9D\x06"
              "\x92\xFB\x64\xF0\x59\xC2\x2B\xB7"
              "\x20\x89\x15\x7E\xE7\x50\xDC\x45"
              "\xAE\x17\xA3\x0C\x75\x01\x6A\xD3"
              "\x3C\xC8\x31\x9A\x03\x8F\xF8\x61"
              "\xED\x56\xBF\x28\xB4\x1D\x86\x12"
              "\x7B\xE4\x4D",
        .rlen    = 499,
        .also_non_np = 1,
        .np    = 2,
        .tap    = { 499 - 16, 16 },
    },
};

/*
 * SP800-90A DRBG Test vectors from
 * http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip
 *
 * Test vectors for DRBG with prediction resistance. All types of DRBGs
 * (Hash, HMAC, CTR) are tested with all permutations of use cases (w/ and
 * w/o personalization string, w/ and w/o additional input string).
 */
static struct drbg_testvec drbg_pr_sha256_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\x72\x88\x4c\xcd\x6c\x85\x57\x70\xf7\x0b\x8b\x86"
            "\xc1\xeb\xd2\x4e\x36\x14\xab\x18\xc4\x9c\xc9\xcf"
            "\x1a\xe8\xf7\x7b\x02\x49\x73\xd7\xf1\x42\x7d\xc6"
            "\x3f\x29\x2d\xec\xd3\x66\x51\x3f\x1d\x8d\x5b\x4e",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\x38\x9c\x91\xfa\xc2\xa3\x46\x89\x56\x08\x3f\x62"
            "\x73\xd5\x22\xa9\x29\x63\x3a\x1d\xe5\x5d\x5e\x4f"
            "\x67\xb0\x67\x7a\x5e\x9e\x0c\x62",
        .entprb = (unsigned char *)
            "\xb2\x8f\x36\xb2\xf6\x8d\x39\x13\xfa\x6c\x66\xcf"
            "\x62\x8a\x7e\x8c\x12\x33\x71\x9c\x69\xe4\xa5\xf0"
            "\x8c\xee\xeb\x9c\xf5\x31\x98\x31",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x52\x7b\xa3\xad\x71\x77\xa4\x49\x42\x04\x61\xc7"
            "\xf0\xaf\xa5\xfd\xd3\xb3\x0d\x6a\x61\xba\x35\x49"
            "\xbb\xaa\xaf\xe4\x25\x7d\xb5\x48\xaf\x5c\x18\x3d"
            "\x33\x8d\x9d\x45\xdf\x98\xd5\x94\xa8\xda\x92\xfe"
            "\xc4\x3c\x94\x2a\xcf\x7f\x7b\xf2\xeb\x28\xa9\xf1"
            "\xe0\x86\x30\xa8\xfe\xf2\x48\x90\x91\x0c\x75\xb5"
            "\x3c\x00\xf0\x4d\x09\x4f\x40\xa7\xa2\x8c\x52\xdf"
            "\x52\xef\x17\xbf\x3d\xd1\xa2\x31\xb4\xb8\xdc\xe6"
            "\x5b\x0d\x1f\x78\x36\xb4\xe6\x4b\xa7\x11\x25\xd5"
            "\x94\xc6\x97\x36\xab\xf0\xe5\x31\x28\x6a\xbb\xce"
            "\x30\x81\xa6\x8f\x27\x14\xf8\x1c",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x5d\xf2\x14\xbc\xf6\xb5\x4e\x0b\xf0\x0d\x6f\x2d"
            "\xe2\x01\x66\x7b\xd0\xa4\x73\xa4\x21\xdd\xb0\xc0"
            "\x51\x79\x09\xf4\xea\xa9\x08\xfa\xa6\x67\xe0\xe1"
            "\xd1\x88\xa8\xad\xee\x69\x74\xb3\x55\x06\x9b\xf6",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xef\x48\x06\xa2\xc2\x45\xf1\x44\xfa\x34\x2c\xeb"
            "\x8d\x78\x3c\x09\x8f\x34\x72\x20\xf2\xe7\xfd\x13"
            "\x76\x0a\xf6\xdc\x3c\xf5\xc0\x15",
        .entprb = (unsigned char *)
            "\x4b\xbe\xe5\x24\xed\x6a\x2d\x0c\xdb\x73\x5e\x09"
            "\xf9\xad\x67\x7c\x51\x47\x8b\x6b\x30\x2a\xc6\xde"
            "\x76\xaa\x55\x04\x8b\x0a\x72\x95",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x3b\x14\x71\x99\xa1\xda\xa0\x42\xe6\xc8\x85\x32"
            "\x70\x20\x32\x53\x9a\xbe\xd1\x1e\x15\xef\xfb\x4c"
            "\x25\x6e\x19\x3a\xf0\xb9\xcb\xde\xf0\x3b\xc6\x18"
            "\x4d\x85\x5a\x9b\xf1\xe3\xc2\x23\x03\x93\x08\xdb"
            "\xa7\x07\x4b\x33\x78\x40\x4d\xeb\x24\xf5\x6e\x81"
            "\x4a\x1b\x6e\xa3\x94\x52\x43\xb0\xaf\x2e\x21\xf4"
            "\x42\x46\x8e\x90\xed\x34\x21\x75\xea\xda\x67\xb6"
            "\xe4\xf6\xff\xc6\x31\x6c\x9a\x5a\xdb\xb3\x97\x13"
            "\x09\xd3\x20\x98\x33\x2d\x6d\xd7\xb5\x6a\xa8\xa9"
            "\x9a\x5b\xd6\x87\x52\xa1\x89\x2b\x4b\x9c\x64\x60"
            "\x50\x47\xa3\x63\x81\x16\xaf\x19",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\xbe\x13\xdb\x2a\xe9\xa8\xfe\x09\x97\xe1\xce\x5d"
            "\xe8\xbb\xc0\x7c\x4f\xcb\x62\x19\x3f\x0f\xd2\xad"
            "\xa9\xd0\x1d\x59\x02\xc4\xff\x70",
        .addtlb = (unsigned char *)
            "\x6f\x96\x13\xe2\xa7\xf5\x6c\xfe\xdf\x66\xe3\x31"
            "\x63\x76\xbf\x20\x27\x06\x49\xf1\xf3\x01\x77\x41"
            "\x9f\xeb\xe4\x38\xfe\x67\x00\xcd",
        .addtllen = 32,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\xc6\x1c\xaf\x83\xa2\x56\x38\xf9\xb0\xbc\xd9\x85"
            "\xf5\x2e\xc4\x46\x9c\xe1\xb9\x40\x98\x70\x10\x72"
            "\xd7\x7d\x15\x85\xa1\x83\x5a\x97\xdf\xc8\xa8\xe8"
            "\x03\x4c\xcb\x70\x35\x8b\x90\x94\x46\x8a\x6e\xa1",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xc9\x05\xa4\xcf\x28\x80\x4b\x93\x0f\x8b\xc6\xf9"
            "\x09\x41\x58\x74\xe9\xec\x28\xc7\x53\x0a\x73\x60"
            "\xba\x0a\xde\x57\x5b\x4b\x9f\x29",
        .entprb = (unsigned char *)
            "\x4f\x31\xd2\xeb\xac\xfa\xa8\xe2\x01\x7d\xf3\xbd"
            "\x42\xbd\x20\xa0\x30\x65\x74\xd5\x5d\xd2\xad\xa4"
            "\xa9\xeb\x1f\x4d\xf6\xfd\xb8\x26",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\xf6\x13\x05\xcb\x83\x60\x16\x42\x49\x1d\xc6\x25"
            "\x3b\x8c\x31\xa3\xbe\x8b\xbd\x1c\xe2\xec\x1d\xde"
            "\xbb\xbf\xa1\xac\xa8\x9f\x50\xce\x69\xce\xef\xd5"
            "\xd6\xf2\xef\x6a\xf7\x81\x38\xdf\xbc\xa7\x5a\xb9"
            "\xb2\x42\x65\xab\xe4\x86\x8d\x2d\x9d\x59\x99\x2c"
            "\x5a\x0d\x71\x55\x98\xa4\x45\xc2\x8d\xdb\x05\x5e"
            "\x50\x21\xf7\xcd\xe8\x98\x43\xce\x57\x74\x63\x4c"
            "\xf3\xb1\xa5\x14\x1e\x9e\x01\xeb\x54\xd9\x56\xae"
            "\xbd\xb6\x6f\x1a\x47\x6b\x3b\x44\xe4\xa2\xe9\x3c"
            "\x6c\x83\x12\x30\xb8\x78\x7f\x8e\x54\x82\xd4\xfe"
            "\x90\x35\x0d\x4c\x4d\x85\xe7\x13",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\xa5\xbf\xac\x4f\x71\xa1\xbb\x67\x94\xc6\x50\xc7"
            "\x2a\x45\x9e\x10\xa8\xed\xf7\x52\x4f\xfe\x21\x90"
            "\xa4\x1b\xe1\xe2\x53\xcc\x61\x47",
        .perslen = 32,
    }, {
        .entropy = (unsigned char *)
            "\xb6\xc1\x8d\xdf\x99\x54\xbe\x95\x10\x48\xd9\xf6"
            "\xd7\x48\xa8\x73\x2d\x74\xde\x1e\xde\x57\x7e\xf4"
            "\x7b\x7b\x64\xef\x88\x7a\xa8\x10\x4b\xe1\xc1\x87"
            "\xbb\x0b\xe1\x39\x39\x50\xaf\x68\x9c\xa2\xbf\x5e",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xdc\x81\x0a\x01\x58\xa7\x2e\xce\xee\x48\x8c\x7c"
            "\x77\x9e\x3c\xf1\x17\x24\x7a\xbb\xab\x9f\xca\x12"
            "\x19\xaf\x97\x2d\x5f\xf9\xff\xfc",
        .entprb = (unsigned char *)
            "\xaf\xfc\x4f\x98\x8b\x93\x95\xc1\xb5\x8b\x7f\x73"
            "\x6d\xa6\xbe\x6d\x33\xeb\x2c\x82\xb1\xaf\xc1\xb6"
            "\xb6\x05\xe2\x44\xaa\xfd\xe7\xdb",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x51\x79\xde\x1c\x0f\x58\xf3\xf4\xc9\x57\x2e\x31"
            "\xa7\x09\xa1\x53\x64\x63\xa2\xc5\x1d\x84\x88\x65"
            "\x01\x1b\xc6\x16\x3c\x49\x5b\x42\x8e\x53\xf5\x18"
            "\xad\x94\x12\x0d\x4f\x55\xcc\x45\x5c\x98\x0f\x42"
            "\x28\x2f\x47\x11\xf9\xc4\x01\x97\x6b\xa0\x94\x50"
            "\xa9\xd1\x5e\x06\x54\x3f\xdf\xbb\xc4\x98\xee\x8b"
            "\xba\xa9\xfa\x49\xee\x1d\xdc\xfb\x50\xf6\x51\x9f"
            "\x6c\x4a\x9a\x6f\x63\xa2\x7d\xad\xaf\x3a\x24\xa0"
            "\xd9\x9f\x07\xeb\x15\xee\x26\xe0\xd5\x63\x39\xda"
            "\x3c\x59\xd6\x33\x6c\x02\xe8\x05\x71\x46\x68\x44"
            "\x63\x4a\x68\x72\xe9\xf5\x55\xfe",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x15\x20\x2f\xf6\x98\x28\x63\xa2\xc4\x4e\xbb\x6c"
            "\xb2\x25\x92\x61\x79\xc9\x22\xc4\x61\x54\x96\xff"
            "\x4a\x85\xca\x80\xfe\x0d\x1c\xd0",
        .addtlb = (unsigned char *)
            "\xde\x29\x8e\x03\x42\x61\xa3\x28\x5e\xc8\x80\xc2"
            "\x6d\xbf\xad\x13\xe1\x8d\x2a\xc7\xe8\xc7\x18\x89"
            "\x42\x58\x9e\xd6\xcc\xad\x7b\x1e",
        .addtllen = 32,
        .pers = (unsigned char *)
            "\x84\xc3\x73\x9e\xce\xb3\xbc\x89\xf7\x62\xb3\xe1"
            "\xd7\x48\x45\x8a\xa9\xcc\xe9\xed\xd5\x81\x84\x52"
            "\x82\x4c\xdc\x19\xb8\xf8\x92\x5c",
        .perslen = 32,
    },
};

static struct drbg_testvec drbg_pr_hmac_sha256_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\x99\x69\xe5\x4b\x47\x03\xff\x31\x78\x5b\x87\x9a"
            "\x7e\x5c\x0e\xae\x0d\x3e\x30\x95\x59\xe9\xfe\x96"
            "\xb0\x67\x6d\x49\xd5\x91\xea\x4d\x07\xd2\x0d\x46"
            "\xd0\x64\x75\x7d\x30\x23\xca\xc2\x37\x61\x27\xab",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xc6\x0f\x29\x99\x10\x0f\x73\x8c\x10\xf7\x47\x92"
            "\x67\x6a\x3f\xc4\xa2\x62\xd1\x37\x21\x79\x80\x46"
            "\xe2\x9a\x29\x51\x81\x56\x9f\x54",
        .entprb = (unsigned char *)
            "\xc1\x1d\x45\x24\xc9\x07\x1b\xd3\x09\x60\x15\xfc"
            "\xf7\xbc\x24\xa6\x07\xf2\x2f\xa0\x65\xc9\x37\x65"
            "\x8a\x2a\x77\xa8\x69\x90\x89\xf4",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\xab\xc0\x15\x85\x60\x94\x80\x3a\x93\x8d\xff\xd2"
            "\x0d\xa9\x48\x43\x87\x0e\xf9\x35\xb8\x2c\xfe\xc1"
            "\x77\x06\xb8\xf5\x51\xb8\x38\x50\x44\x23\x5d\xd4"
            "\x4b\x59\x9f\x94\xb3\x9b\xe7\x8d\xd4\x76\xe0\xcf"
            "\x11\x30\x9c\x99\x5a\x73\x34\xe0\xa7\x8b\x37\xbc"
            "\x95\x86\x23\x50\x86\xfa\x3b\x63\x7b\xa9\x1c\xf8"
            "\xfb\x65\xef\xa2\x2a\x58\x9c\x13\x75\x31\xaa\x7b"
            "\x2d\x4e\x26\x07\xaa\xc2\x72\x92\xb0\x1c\x69\x8e"
            "\x6e\x01\xae\x67\x9e\xb8\x7c\x01\xa8\x9c\x74\x22"
            "\xd4\x37\x2d\x6d\x75\x4a\xba\xbb\x4b\xf8\x96\xfc"
            "\xb1\xcd\x09\xd6\x92\xd0\x28\x3f",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\xb9\x1f\xe9\xef\xdd\x9b\x7d\x20\xb6\xec\xe0\x2f"
            "\xdb\x76\x24\xce\x41\xc8\x3a\x4a\x12\x7f\x3e\x2f"
            "\xae\x05\x99\xea\xb5\x06\x71\x0d\x0c\x4c\xb4\x05"
            "\x26\xc6\xbd\xf5\x7f\x2a\x3d\xf2\xb5\x49\x7b\xda",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xef\x67\x50\x9c\xa7\x7d\xdf\xb7\x2d\x81\x01\xa4"
            "\x62\x81\x6a\x69\x5b\xb3\x37\x45\xa7\x34\x8e\x26"
            "\x46\xd9\x26\xa2\x19\xd4\x94\x43",
        .entprb = (unsigned char *)
            "\x97\x75\x53\x53\xba\xb4\xa6\xb2\x91\x60\x71\x79"
            "\xd1\x6b\x4a\x24\x9a\x34\x66\xcc\x33\xab\x07\x98"
            "\x51\x78\x72\xb2\x79\xfd\x2c\xff",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x9c\xdc\x63\x8a\x19\x23\x22\x66\x0c\xc5\xb9\xd7"
            "\xfb\x2a\xb0\x31\xe3\x8a\x36\xa8\x5a\xa8\x14\xda"
            "\x1e\xa9\xcc\xfe\xb8\x26\x44\x83\x9f\xf6\xff\xaa"
            "\xc8\x98\xb8\x30\x35\x3b\x3d\x36\xd2\x49\xd4\x40"
            "\x62\x0a\x65\x10\x76\x55\xef\xc0\x95\x9c\xa7\xda"
            "\x3f\xcf\xb7\x7b\xc6\xe1\x28\x52\xfc\x0c\xe2\x37"
            "\x0d\x83\xa7\x51\x4b\x31\x47\x3c\xe1\x3c\xae\x70"
            "\x01\xc8\xa3\xd3\xc2\xac\x77\x9c\xd1\x68\x77\x9b"
            "\x58\x27\x3b\xa5\x0f\xc2\x7a\x8b\x04\x65\x62\xd5"
            "\xe8\xd6\xfe\x2a\xaf\xd3\xd3\xfe\xbd\x18\xfb\xcd"
            "\xcd\x66\xb5\x01\x69\x66\xa0\x3c",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x17\xc1\x56\xcb\xcc\x50\xd6\x03\x7d\x45\x76\xa3"
            "\x75\x76\xc1\x4a\x66\x1b\x2e\xdf\xb0\x2e\x7d\x56"
            "\x6d\x99\x3b\xc6\x58\xda\x03\xf6",
        .addtlb = (unsigned char *)
            "\x7c\x7b\x4a\x4b\x32\x5e\x6f\x67\x34\xf5\x21\x4c"
            "\xf9\x96\xf9\xbf\x1c\x8c\x81\xd3\x9b\x60\x6a\x44"
            "\xc6\x03\xa2\xfb\x13\x20\x19\xb7",
        .addtllen = 32,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x13\x54\x96\xfc\x1b\x7d\x28\xf3\x18\xc9\xa7\x89"
            "\xb6\xb3\xc8\x72\xac\x00\xd4\x59\x36\x25\x05\xaf"
            "\xa5\xdb\x96\xcb\x3c\x58\x46\x87\xa5\xaa\xbf\x20"
            "\x3b\xfe\x23\x0e\xd1\xc7\x41\x0f\x3f\xc9\xb3\x67",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\xe2\xbd\xb7\x48\x08\x06\xf3\xe1\x93\x3c\xac\x79"
            "\xa7\x2b\x11\xda\xe3\x2e\xe1\x91\xa5\x02\x19\x57"
            "\x20\x28\xad\xf2\x60\xd7\xcd\x45",
        .entprb = (unsigned char *)
            "\x8b\xd4\x69\xfc\xff\x59\x95\x95\xc6\x51\xde\x71"
            "\x68\x5f\xfc\xf9\x4a\xab\xec\x5a\xcb\xbe\xd3\x66"
            "\x1f\xfa\x74\xd3\xac\xa6\x74\x60",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x1f\x9e\xaf\xe4\xd2\x46\xb7\x47\x41\x4c\x65\x99"
            "\x01\xe9\x3b\xbb\x83\x0c\x0a\xb0\xc1\x3a\xe2\xb3"
            "\x31\x4e\xeb\x93\x73\xee\x0b\x26\xc2\x63\xa5\x75"
            "\x45\x99\xd4\x5c\x9f\xa1\xd4\x45\x87\x6b\x20\x61"
            "\x40\xea\x78\xa5\x32\xdf\x9e\x66\x17\xaf\xb1\x88"
            "\x9e\x2e\x23\xdd\xc1\xda\x13\x97\x88\xa5\xb6\x5e"
            "\x90\x14\x4e\xef\x13\xab\x5c\xd9\x2c\x97\x9e\x7c"
            "\xd7\xf8\xce\xea\x81\xf5\xcd\x71\x15\x49\x44\xce"
            "\x83\xb6\x05\xfb\x7d\x30\xb5\x57\x2c\x31\x4f\xfc"
            "\xfe\x80\xb6\xc0\x13\x0c\x5b\x9b\x2e\x8f\x3d\xfc"
            "\xc2\xa3\x0c\x11\x1b\x80\x5f\xf3",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\x64\xb6\xfc\x60\xbc\x61\x76\x23\x6d\x3f\x4a\x0f"
            "\xe1\xb4\xd5\x20\x9e\x70\xdd\x03\x53\x6d\xbf\xce"
            "\xcd\x56\x80\xbc\xb8\x15\xc8\xaa",
        .perslen = 32,
    }, {
        .entropy = (unsigned char *)
            "\xc7\xcc\xbc\x67\x7e\x21\x66\x1e\x27\x2b\x63\xdd"
            "\x3a\x78\xdc\xdf\x66\x6d\x3f\x24\xae\xcf\x37\x01"
            "\xa9\x0d\x89\x8a\xa7\xdc\x81\x58\xae\xb2\x10\x15"
            "\x7e\x18\x44\x6d\x13\xea\xdf\x37\x85\xfe\x81\xfb",
        .entropylen = 48,
        .entpra = (unsigned char *)
            "\x7b\xa1\x91\x5b\x3c\x04\xc4\x1b\x1d\x19\x2f\x1a"
            "\x18\x81\x60\x3c\x6c\x62\x91\xb7\xe9\xf5\xcb\x96"
            "\xbb\x81\x6a\xcc\xb5\xae\x55\xb6",
        .entprb = (unsigned char *)
            "\x99\x2c\xc7\x78\x7e\x3b\x88\x12\xef\xbe\xd3\xd2"
            "\x7d\x2a\xa5\x86\xda\x8d\x58\x73\x4a\x0a\xb2\x2e"
            "\xbb\x4c\x7e\xe3\x9a\xb6\x81\xc1",
        .entprlen = 32,
        .expected = (unsigned char *)
            "\x95\x6f\x95\xfc\x3b\xb7\xfe\x3e\xd0\x4e\x1a\x14"
            "\x6c\x34\x7f\x7b\x1d\x0d\x63\x5e\x48\x9c\x69\xe6"
            "\x46\x07\xd2\x87\xf3\x86\x52\x3d\x98\x27\x5e\xd7"
            "\x54\xe7\x75\x50\x4f\xfb\x4d\xfd\xac\x2f\x4b\x77"
            "\xcf\x9e\x8e\xcc\x16\xa2\x24\xcd\x53\xde\x3e\xc5"
            "\x55\x5d\xd5\x26\x3f\x89\xdf\xca\x8b\x4e\x1e\xb6"
            "\x88\x78\x63\x5c\xa2\x63\x98\x4e\x6f\x25\x59\xb1"
            "\x5f\x2b\x23\xb0\x4b\xa5\x18\x5d\xc2\x15\x74\x40"
            "\x59\x4c\xb4\x1e\xcf\x9a\x36\xfd\x43\xe2\x03\xb8"
            "\x59\x91\x30\x89\x2a\xc8\x5a\x43\x23\x7c\x73\x72"
            "\xda\x3f\xad\x2b\xba\x00\x6b\xd1",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x18\xe8\x17\xff\xef\x39\xc7\x41\x5c\x73\x03\x03"
            "\xf6\x3d\xe8\x5f\xc8\xab\xe4\xab\x0f\xad\xe8\xd6"
            "\x86\x88\x55\x28\xc1\x69\xdd\x76",
        .addtlb = (unsigned char *)
            "\xac\x07\xfc\xbe\x87\x0e\xd3\xea\x1f\x7e\xb8\xe7"
            "\x9d\xec\xe8\xe7\xbc\xf3\x18\x25\x77\x35\x4a\xaa"
            "\x00\x99\x2a\xdd\x0a\x00\x50\x82",
        .addtllen = 32,
        .pers = (unsigned char *)
            "\xbc\x55\xab\x3c\xf6\x52\xb0\x11\x3d\x7b\x90\xb8"
            "\x24\xc9\x26\x4e\x5a\x1e\x77\x0d\x3d\x58\x4a\xda"
            "\xd1\x81\xe9\xf8\xeb\x30\x8f\x6f",
        .perslen = 32,
    },
};

static struct drbg_testvec drbg_pr_ctr_aes128_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\xd1\x44\xc6\x61\x81\x6d\xca\x9d\x15\x28\x8a\x42"
            "\x94\xd7\x28\x9c\x43\x77\x19\x29\x1a\x6d\xc3\xa2",
        .entropylen = 24,
        .entpra = (unsigned char *)
            "\x96\xd8\x9e\x45\x32\xc9\xd2\x08\x7a\x6d\x97\x15"
            "\xb4\xec\x80\xb1",
        .entprb = (unsigned char *)
            "\x8b\xb6\x72\xb5\x24\x0b\x98\x65\x95\x95\xe9\xc9"
            "\x28\x07\xeb\xc2",
        .entprlen = 16,
        .expected = (unsigned char *)
            "\x70\x19\xd0\x4c\x45\x78\xd6\x68\xa9\x9a\xaa\xfe"
            "\xc1\xdf\x27\x9a\x1c\x0d\x0d\xf7\x24\x75\x46\xcc"
            "\x77\x6b\xdf\x89\xc6\x94\xdc\x74\x50\x10\x70\x18"
            "\x9b\xdc\x96\xb4\x89\x23\x40\x1a\xce\x09\x87\xce"
            "\xd2\xf3\xd5\xe4\x51\x67\x74\x11\x5a\xcc\x8b\x3b"
            "\x8a\xf1\x23\xa8",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x8e\x83\xe0\xeb\x37\xea\x3e\x53\x5e\x17\x6e\x77"
            "\xbd\xb1\x53\x90\xfc\xdc\xc1\x3c\x9a\x88\x22\x94",
        .entropylen = 24,
        .entpra = (unsigned char *)
            "\x6a\x85\xe7\x37\xc8\xf1\x04\x31\x98\x4f\xc8\x73"
            "\x67\xd1\x08\xf8",
        .entprb = (unsigned char *)
            "\xd7\xa4\x68\xe2\x12\x74\xc3\xd9\xf1\xb7\x05\xbc"
            "\xd4\xba\x04\x58",
        .entprlen = 16,
        .expected = (unsigned char *)
            "\x78\xd6\xa6\x70\xff\xd1\x82\xf5\xa2\x88\x7f\x6d"
            "\x3d\x8c\x39\xb1\xa8\xcb\x2c\x91\xab\x14\x7e\xbc"
            "\x95\x45\x9f\x24\xb8\x20\xac\x21\x23\xdb\x72\xd7"
            "\x12\x8d\x48\x95\xf3\x19\x0c\x43\xc6\x19\x45\xfc"
            "\x8b\xac\x40\x29\x73\x00\x03\x45\x5e\x12\xff\x0c"
            "\xc1\x02\x41\x82",
        .expectedlen = 64,
        .addtla = (unsigned char *)
            "\xa2\xd9\x38\xcf\x8b\x29\x67\x5b\x65\x62\x6f\xe8"
            "\xeb\xb3\x01\x76",
        .addtlb = (unsigned char *)
            "\x59\x63\x1e\x81\x8a\x14\xa8\xbb\xa1\xb8\x41\x25"
            "\xd0\x7f\xcc\x43",
        .addtllen = 16,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x04\xd9\x49\xa6\xdc\xe8\x6e\xbb\xf1\x08\x77\x2b"
            "\x9e\x08\xca\x92\x65\x16\xda\x99\xa2\x59\xf3\xe8",
        .entropylen = 24,
        .entpra = (unsigned char *)
            "\x38\x7e\x3f\x6b\x51\x70\x7b\x20\xec\x53\xd0\x66"
            "\xc3\x0f\xe3\xb0",
        .entprb = (unsigned char *)
            "\xe0\x86\xa6\xaa\x5f\x72\x2f\xad\xf7\xef\x06\xb8"
            "\xd6\x9c\x9d\xe8",
        .entprlen = 16,
        .expected = (unsigned char *)
            "\xc9\x0a\xaf\x85\x89\x71\x44\x66\x4f\x25\x0b\x2b"
            "\xde\xd8\xfa\xff\x52\x5a\x1b\x32\x5e\x41\x7a\x10"
            "\x1f\xef\x1e\x62\x23\xe9\x20\x30\xc9\x0d\xad\x69"
            "\xb4\x9c\x5b\xf4\x87\x42\xd5\xae\x5e\x5e\x43\xcc"
            "\xd9\xfd\x0b\x93\x4a\xe3\xd4\x06\x37\x36\x0f\x3f"
            "\x72\x82\x0c\xcf",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\xbf\xa4\x9a\x8f\x7b\xd8\xb1\x7a\x9d\xfa\x45\xed"
            "\x21\x52\xb3\xad",
        .perslen = 16,
    }, {
        .entropy = (unsigned char *)
            "\x92\x89\x8f\x31\xfa\x1c\xff\x6d\x18\x2f\x26\x06"
            "\x43\xdf\xf8\x18\xc2\xa4\xd9\x72\xc3\xb9\xb6\x97",
        .entropylen = 24,
        .entpra = (unsigned char *)
            "\x20\x72\x8a\x06\xf8\x6f\x8d\xd4\x41\xe2\x72\xb7"
            "\xc4\x2c\xe8\x10",
        .entprb = (unsigned char *)
            "\x3d\xb0\xf0\x94\xf3\x05\x50\x33\x17\x86\x3e\x22"
            "\x08\xf7\xa5\x01",
        .entprlen = 16,
        .expected = (unsigned char *)
            "\x5a\x35\x39\x87\x0f\x4d\x22\xa4\x09\x24\xee\x71"
            "\xc9\x6f\xac\x72\x0a\xd6\xf0\x88\x82\xd0\x83\x28"
            "\x73\xec\x3f\x93\xd8\xab\x45\x23\xf0\x7e\xac\x45"
            "\x14\x5e\x93\x9f\xb1\xd6\x76\x43\x3d\xb6\xe8\x08"
            "\x88\xf6\xda\x89\x08\x77\x42\xfe\x1a\xf4\x3f\xc4"
            "\x23\xc5\x1f\x68",
        .expectedlen = 64,
        .addtla = (unsigned char *)
            "\x1a\x40\xfa\xe3\xcc\x6c\x7c\xa0\xf8\xda\xba\x59"
            "\x23\x6d\xad\x1d",
        .addtlb = (unsigned char *)
            "\x9f\x72\x76\x6c\xc7\x46\xe5\xed\x2e\x53\x20\x12"
            "\xbc\x59\x31\x8c",
        .addtllen = 16,
        .pers = (unsigned char *)
            "\xea\x65\xee\x60\x26\x4e\x7e\xb6\x0e\x82\x68\xc4"
            "\x37\x3c\x5c\x0b",
        .perslen = 16,
    },
};

/*
 * SP800-90A DRBG Test vectors from
 * http://csrc.nist.gov/groups/STM/cavp/documents/drbg/drbgtestvectors.zip
 *
 * Test vectors for DRBG without prediction resistance. All types of DRBGs
 * (Hash, HMAC, CTR) are tested with all permutations of use cases (w/ and
 * w/o personalization string, w/ and w/o additional input string).
 */
static struct drbg_testvec drbg_nopr_sha256_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\xa6\x5a\xd0\xf3\x45\xdb\x4e\x0e\xff\xe8\x75\xc3"
            "\xa2\xe7\x1f\x42\xc7\x12\x9d\x62\x0f\xf5\xc1\x19"
            "\xa9\xef\x55\xf0\x51\x85\xe0\xfb\x85\x81\xf9\x31"
            "\x75\x17\x27\x6e\x06\xe9\x60\x7d\xdb\xcb\xcc\x2e",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xd3\xe1\x60\xc3\x5b\x99\xf3\x40\xb2\x62\x82\x64"
            "\xd1\x75\x10\x60\xe0\x04\x5d\xa3\x83\xff\x57\xa5"
            "\x7d\x73\xa6\x73\xd2\xb8\xd8\x0d\xaa\xf6\xa6\xc3"
            "\x5a\x91\xbb\x45\x79\xd7\x3f\xd0\xc8\xfe\xd1\x11"
            "\xb0\x39\x13\x06\x82\x8a\xdf\xed\x52\x8f\x01\x81"
            "\x21\xb3\xfe\xbd\xc3\x43\xe7\x97\xb8\x7d\xbb\x63"
            "\xdb\x13\x33\xde\xd9\xd1\xec\xe1\x77\xcf\xa6\xb7"
            "\x1f\xe8\xab\x1d\xa4\x66\x24\xed\x64\x15\xe5\x1c"
            "\xcd\xe2\xc7\xca\x86\xe2\x83\x99\x0e\xea\xeb\x91"
            "\x12\x04\x15\x52\x8b\x22\x95\x91\x02\x81\xb0\x2d"
            "\xd4\x31\xf4\xc9\xf7\x04\x27\xdf",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x73\xd3\xfb\xa3\x94\x5f\x2b\x5f\xb9\x8f\xf6\x9c"
            "\x8a\x93\x17\xae\x19\xc3\x4c\xc3\xd6\xca\xa3\x2d"
            "\x16\xfc\x42\xd2\x2d\xd5\x6f\x56\xcc\x1d\x30\xff"
            "\x9e\x06\x3e\x09\xce\x58\xe6\x9a\x35\xb3\xa6\x56",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\x71\x7b\x93\x46\x1a\x40\xaa\x35\xa4\xaa\xc5\xe7"
            "\x6d\x5b\x5b\x8a\xa0\xdf\x39\x7d\xae\x71\x58\x5b"
            "\x3c\x7c\xb4\xf0\x89\xfa\x4a\x8c\xa9\x5c\x54\xc0"
            "\x40\xdf\xbc\xce\x26\x81\x34\xf8\xba\x7d\x1c\xe8"
            "\xad\x21\xe0\x74\xcf\x48\x84\x30\x1f\xa1\xd5\x4f"
            "\x81\x42\x2f\xf4\xdb\x0b\x23\xf8\x73\x27\xb8\x1d"
            "\x42\xf8\x44\x58\xd8\x5b\x29\x27\x0a\xf8\x69\x59"
            "\xb5\x78\x44\xeb\x9e\xe0\x68\x6f\x42\x9a\xb0\x5b"
            "\xe0\x4e\xcb\x6a\xaa\xe2\xd2\xd5\x33\x25\x3e\xe0"
            "\x6c\xc7\x6a\x07\xa5\x03\x83\x9f\xe2\x8b\xd1\x1c"
            "\x70\xa8\x07\x59\x97\xeb\xf6\xbe",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\xf4\xd5\x98\x3d\xa8\xfc\xfa\x37\xb7\x54\x67\x73"
            "\xc7\xc3\xdd\x47\x34\x71\x02\x5d\xc1\xa0\xd3\x10"
            "\xc1\x8b\xbd\xf5\x66\x34\x6f\xdd",
        .addtlb = (unsigned char *)
            "\xf7\x9e\x6a\x56\x0e\x73\xe9\xd9\x7a\xd1\x69\xe0"
            "\x6f\x8c\x55\x1c\x44\xd1\xce\x6f\x28\xcc\xa4\x4d"
            "\xa8\xc0\x85\xd1\x5a\x0c\x59\x40",
        .addtllen = 32,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x2a\x85\xa9\x8b\xd0\xda\x83\xd6\xad\xab\x9f\xbb"
            "\x54\x31\x15\x95\x1c\x4d\x49\x9f\x6a\x15\xf6\xe4"
            "\x15\x50\x88\x06\x29\x0d\xed\x8d\xb9\x6f\x96\xe1"
            "\x83\x9f\xf7\x88\xda\x84\xbf\x44\x28\xd9\x1d\xaa",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\x2d\x55\xde\xc9\xed\x05\x47\x07\x3d\x04\xfc\x28"
            "\x0f\x92\xf0\x4d\xd8\x00\x32\x47\x0a\x1b\x1c\x4b"
            "\xef\xd9\x97\xa1\x17\x67\xda\x26\x6c\xfe\x76\x46"
            "\x6f\xbc\x6d\x82\x4e\x83\x8a\x98\x66\x6c\x01\xb6"
            "\xe6\x64\xe0\x08\x10\x6f\xd3\x5d\x90\xe7\x0d\x72"
            "\xa6\xa7\xe3\xbb\x98\x11\x12\x56\x23\xc2\x6d\xd1"
            "\xc8\xa8\x7a\x39\xf3\x34\xe3\xb8\xf8\x66\x00\x77"
            "\x7d\xcf\x3c\x3e\xfa\xc9\x0f\xaf\xe0\x24\xfa\xe9"
            "\x84\xf9\x6a\x01\xf6\x35\xdb\x5c\xab\x2a\xef\x4e"
            "\xac\xab\x55\xb8\x9b\xef\x98\x68\xaf\x51\xd8\x16"
            "\xa5\x5e\xae\xf9\x1e\xd2\xdb\xe6",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\xa8\x80\xec\x98\x30\x98\x15\xd2\xc6\xc4\x68\xf1"
            "\x3a\x1c\xbf\xce\x6a\x40\x14\xeb\x36\x99\x53\xda"
            "\x57\x6b\xce\xa4\x1c\x66\x3d\xbc",
        .perslen = 32,
    }, {
        .entropy = (unsigned char *)
            "\x69\xed\x82\xa9\xc5\x7b\xbf\xe5\x1d\x2f\xcb\x7a"
            "\xd3\x50\x7d\x96\xb4\xb9\x2b\x50\x77\x51\x27\x74"
            "\x33\x74\xba\xf1\x30\xdf\x8e\xdf\x87\x1d\x87\xbc"
            "\x96\xb2\xc3\xa7\xed\x60\x5e\x61\x4e\x51\x29\x1a",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xa5\x71\x24\x31\x11\xfe\x13\xe1\xa8\x24\x12\xfb"
            "\x37\xa1\x27\xa5\xab\x77\xa1\x9f\xae\x8f\xaf\x13"
            "\x93\xf7\x53\x85\x91\xb6\x1b\xab\xd4\x6b\xea\xb6"
            "\xef\xda\x4c\x90\x6e\xef\x5f\xde\xe1\xc7\x10\x36"
            "\xd5\x67\xbd\x14\xb6\x89\x21\x0c\xc9\x92\x65\x64"
            "\xd0\xf3\x23\xe0\x7f\xd1\xe8\x75\xc2\x85\x06\xea"
            "\xca\xc0\xcb\x79\x2d\x29\x82\xfc\xaa\x9a\xc6\x95"
            "\x7e\xdc\x88\x65\xba\xec\x0e\x16\x87\xec\xa3\x9e"
            "\xd8\x8c\x80\xab\x3a\x64\xe0\xcb\x0e\x45\x98\xdd"
            "\x7c\x6c\x6c\x26\x11\x13\xc8\xce\xa9\x47\xa6\x06"
            "\x57\xa2\x66\xbb\x2d\x7f\xf3\xc1",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x74\xd3\x6d\xda\xe8\xd6\x86\x5f\x63\x01\xfd\xf2"
            "\x7d\x06\x29\x6d\x94\xd1\x66\xf0\xd2\x72\x67\x4e"
            "\x77\xc5\x3d\x9e\x03\xe3\xa5\x78",
        .addtlb = (unsigned char *)
            "\xf6\xb6\x3d\xf0\x7c\x26\x04\xc5\x8b\xcd\x3e\x6a"
            "\x9f\x9c\x3a\x2e\xdb\x47\x87\xe5\x8e\x00\x5e\x2b"
            "\x74\x7f\xa6\xf6\x80\xcd\x9b\x21",
        .addtllen = 32,
        .pers = (unsigned char *)
            "\x74\xa6\xe0\x08\xf9\x27\xee\x1d\x6e\x3c\x28\x20"
            "\x87\xdd\xd7\x54\x31\x47\x78\x4b\xe5\x6d\xa3\x73"
            "\xa9\x65\xb1\x10\xc1\xdc\x77\x7c",
        .perslen = 32,
    },
};

static struct drbg_testvec drbg_nopr_hmac_sha256_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\xca\x85\x19\x11\x34\x93\x84\xbf\xfe\x89\xde\x1c"
            "\xbd\xc4\x6e\x68\x31\xe4\x4d\x34\xa4\xfb\x93\x5e"
            "\xe2\x85\xdd\x14\xb7\x1a\x74\x88\x65\x9b\xa9\x6c"
            "\x60\x1d\xc6\x9f\xc9\x02\x94\x08\x05\xec\x0c\xa8",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xe5\x28\xe9\xab\xf2\xde\xce\x54\xd4\x7c\x7e\x75"
            "\xe5\xfe\x30\x21\x49\xf8\x17\xea\x9f\xb4\xbe\xe6"
            "\xf4\x19\x96\x97\xd0\x4d\x5b\x89\xd5\x4f\xbb\x97"
            "\x8a\x15\xb5\xc4\x43\xc9\xec\x21\x03\x6d\x24\x60"
            "\xb6\xf7\x3e\xba\xd0\xdc\x2a\xba\x6e\x62\x4a\xbf"
            "\x07\x74\x5b\xc1\x07\x69\x4b\xb7\x54\x7b\xb0\x99"
            "\x5f\x70\xde\x25\xd6\xb2\x9e\x2d\x30\x11\xbb\x19"
            "\xd2\x76\x76\xc0\x71\x62\xc8\xb5\xcc\xde\x06\x68"
            "\x96\x1d\xf8\x68\x03\x48\x2c\xb3\x7e\xd6\xd5\xc0"
            "\xbb\x8d\x50\xcf\x1f\x50\xd4\x76\xaa\x04\x58\xbd"
            "\xab\xa8\x06\xf4\x8b\xe9\xdc\xb8",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\xf9\x7a\x3c\xfd\x91\xfa\xa0\x46\xb9\xe6\x1b\x94"
            "\x93\xd4\x36\xc4\x93\x1f\x60\x4b\x22\xf1\x08\x15"
            "\x21\xb3\x41\x91\x51\xe8\xff\x06\x11\xf3\xa7\xd4"
            "\x35\x95\x35\x7d\x58\x12\x0b\xd1\xe2\xdd\x8a\xed",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xc6\x87\x1c\xff\x08\x24\xfe\x55\xea\x76\x89\xa5"
            "\x22\x29\x88\x67\x30\x45\x0e\x5d\x36\x2d\xa5\xbf"
            "\x59\x0d\xcf\x9a\xcd\x67\xfe\xd4\xcb\x32\x10\x7d"
            "\xf5\xd0\x39\x69\xa6\x6b\x1f\x64\x94\xfd\xf5\xd6"
            "\x3d\x5b\x4d\x0d\x34\xea\x73\x99\xa0\x7d\x01\x16"
            "\x12\x6d\x0d\x51\x8c\x7c\x55\xba\x46\xe1\x2f\x62"
            "\xef\xc8\xfe\x28\xa5\x1c\x9d\x42\x8e\x6d\x37\x1d"
            "\x73\x97\xab\x31\x9f\xc7\x3d\xed\x47\x22\xe5\xb4"
            "\xf3\x00\x04\x03\x2a\x61\x28\xdf\x5e\x74\x97\xec"
            "\xf8\x2c\xa7\xb0\xa5\x0e\x86\x7e\xf6\x72\x8a\x4f"
            "\x50\x9a\x8c\x85\x90\x87\x03\x9c",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x51\x72\x89\xaf\xe4\x44\xa0\xfe\x5e\xd1\xa4\x1d"
            "\xbb\xb5\xeb\x17\x15\x00\x79\xbd\xd3\x1e\x29\xcf"
            "\x2f\xf3\x00\x34\xd8\x26\x8e\x3b",
        .addtlb = (unsigned char *)
            "\x88\x02\x8d\x29\xef\x80\xb4\xe6\xf0\xfe\x12\xf9"
            "\x1d\x74\x49\xfe\x75\x06\x26\x82\xe8\x9c\x57\x14"
            "\x40\xc0\xc9\xb5\x2c\x42\xa6\xe0",
        .addtllen = 32,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x8d\xf0\x13\xb4\xd1\x03\x52\x30\x73\x91\x7d\xdf"
            "\x6a\x86\x97\x93\x05\x9e\x99\x43\xfc\x86\x54\x54"
            "\x9e\x7a\xb2\x2f\x7c\x29\xf1\x22\xda\x26\x25\xaf"
            "\x2d\xdd\x4a\xbc\xce\x3c\xf4\xfa\x46\x59\xd8\x4e",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xb9\x1c\xba\x4c\xc8\x4f\xa2\x5d\xf8\x61\x0b\x81"
            "\xb6\x41\x40\x27\x68\xa2\x09\x72\x34\x93\x2e\x37"
            "\xd5\x90\xb1\x15\x4c\xbd\x23\xf9\x74\x52\xe3\x10"
            "\xe2\x91\xc4\x51\x46\x14\x7f\x0d\xa2\xd8\x17\x61"
            "\xfe\x90\xfb\xa6\x4f\x94\x41\x9c\x0f\x66\x2b\x28"
            "\xc1\xed\x94\xda\x48\x7b\xb7\xe7\x3e\xec\x79\x8f"
            "\xbc\xf9\x81\xb7\x91\xd1\xbe\x4f\x17\x7a\x89\x07"
            "\xaa\x3c\x40\x16\x43\xa5\xb6\x2b\x87\xb8\x9d\x66"
            "\xb3\xa6\x0e\x40\xd4\xa8\xe4\xe9\xd8\x2a\xf6\xd2"
            "\x70\x0e\x6f\x53\x5c\xdb\x51\xf7\x5c\x32\x17\x29"
            "\x10\x37\x41\x03\x0c\xcc\x3a\x56",
        .expectedlen = 128,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\xb5\x71\xe6\x6d\x7c\x33\x8b\xc0\x7b\x76\xad\x37"
            "\x57\xbb\x2f\x94\x52\xbf\x7e\x07\x43\x7a\xe8\x58"
            "\x1c\xe7\xbc\x7c\x3a\xc6\x51\xa9",
        .perslen = 32,
    }, {
        .entropy = (unsigned char *)
            "\xc2\xa5\x66\xa9\xa1\x81\x7b\x15\xc5\xc3\xb7\x78"
            "\x17\x7a\xc8\x7c\x24\xe7\x97\xbe\x0a\x84\x5f\x11"
            "\xc2\xfe\x39\x9d\xd3\x77\x32\xf2\xcb\x18\x94\xeb"
            "\x2b\x97\xb3\xc5\x6e\x62\x83\x29\x51\x6f\x86\xec",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\xb3\xa3\x69\x8d\x77\x76\x99\xa0\xdd\x9f\xa3\xf0"
            "\xa9\xfa\x57\x83\x2d\x3c\xef\xac\x5d\xf2\x44\x37"
            "\xc6\xd7\x3a\x0f\xe4\x10\x40\xf1\x72\x90\x38\xae"
            "\xf1\xe9\x26\x35\x2e\xa5\x9d\xe1\x20\xbf\xb7\xb0"
            "\x73\x18\x3a\x34\x10\x6e\xfe\xd6\x27\x8f\xf8\xad"
            "\x84\x4b\xa0\x44\x81\x15\xdf\xdd\xf3\x31\x9a\x82"
            "\xde\x6b\xb1\x1d\x80\xbd\x87\x1a\x9a\xcd\x35\xc7"
            "\x36\x45\xe1\x27\x0f\xb9\xfe\x4f\xa8\x8e\xc0\xe4"
            "\x65\x40\x9e\xa0\xcb\xa8\x09\xfe\x2f\x45\xe0\x49"
            "\x43\xa2\xe3\x96\xbb\xb7\xdd\x2f\x4e\x07\x95\x30"
            "\x35\x24\xcc\x9c\xc5\xea\x54\xa1",
        .expectedlen = 128,
        .addtla = (unsigned char *)
            "\x41\x3d\xd8\x3f\xe5\x68\x35\xab\xd4\x78\xcb\x96"
            "\x93\xd6\x76\x35\x90\x1c\x40\x23\x9a\x26\x64\x62"
            "\xd3\x13\x3b\x83\xe4\x9c\x82\x0b",
        .addtlb = (unsigned char *)
            "\xd5\xc4\xa7\x1f\x9d\x6d\x95\xa1\xbe\xdf\x0b\xd2"
            "\x24\x7c\x27\x7d\x1f\x84\xa4\xe5\x7a\x4a\x88\x25"
            "\xb8\x2a\x2d\x09\x7d\xe6\x3e\xf1",
        .addtllen = 32,
        .pers = (unsigned char *)
            "\x13\xce\x4d\x8d\xd2\xdb\x97\x96\xf9\x41\x56\xc8"
            "\xe8\xf0\x76\x9b\x0a\xa1\xc8\x2c\x13\x23\xb6\x15"
            "\x36\x60\x3b\xca\x37\xc9\xee\x29",
        .perslen = 32,
    },
};

static struct drbg_testvec drbg_nopr_ctr_aes192_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\xc3\x5c\x2f\xa2\xa8\x9d\x52\xa1\x1f\xa3\x2a\xa9"
            "\x6c\x95\xb8\xf1\xc9\xa8\xf9\xcb\x24\x5a\x8b\x40"
            "\xf3\xa6\xe5\xa7\xfb\xd9\xd3\xc6\x8e\x27\x7b\xa9"
            "\xac\x9b\xbb\x00",
        .entropylen = 40,
        .expected = (unsigned char *)
            "\x8c\x2e\x72\xab\xfd\x9b\xb8\x28\x4d\xb7\x9e\x17"
            "\xa4\x3a\x31\x46\xcd\x76\x94\xe3\x52\x49\xfc\x33"
            "\x83\x91\x4a\x71\x17\xf4\x13\x68\xe6\xd4\xf1\x48"
            "\xff\x49\xbf\x29\x07\x6b\x50\x15\xc5\x9f\x45\x79"
            "\x45\x66\x2e\x3d\x35\x03\x84\x3f\x4a\xa5\xa3\xdf"
            "\x9a\x9d\xf1\x0d",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    },
};

static struct drbg_testvec drbg_nopr_ctr_aes256_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\x36\x40\x19\x40\xfa\x8b\x1f\xba\x91\xa1\x66\x1f"
            "\x21\x1d\x78\xa0\xb9\x38\x9a\x74\xe5\xbc\xcf\xec"
            "\xe8\xd7\x66\xaf\x1a\x6d\x3b\x14\x49\x6f\x25\xb0"
            "\xf1\x30\x1b\x4f\x50\x1b\xe3\x03\x80\xa1\x37\xeb",
        .entropylen = 48,
        .expected = (unsigned char *)
            "\x58\x62\xeb\x38\xbd\x55\x8d\xd9\x78\xa6\x96\xe6"
            "\xdf\x16\x47\x82\xdd\xd8\x87\xe7\xe9\xa6\xc9\xf3"
            "\xf1\xfb\xaf\xb7\x89\x41\xb5\x35\xa6\x49\x12\xdf"
            "\xd2\x24\xc6\xdc\x74\x54\xe5\x25\x0b\x3d\x97\x16"
            "\x5e\x16\x26\x0c\x2f\xaf\x1c\xc7\x73\x5c\xb7\x5f"
            "\xb4\xf0\x7e\x1d",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    },
};

static struct drbg_testvec drbg_nopr_ctr_aes128_tv_template[] = {
    {
        .entropy = (unsigned char *)
            "\x87\xe1\xc5\x32\x99\x7f\x57\xa3\x5c\x28\x6d\xe8"
            "\x64\xbf\xf2\x64\xa3\x9e\x98\xdb\x6c\x10\x78\x7f",
        .entropylen = 24,
        .expected = (unsigned char *)
            "\x2c\x14\x7e\x24\x11\x9a\xd8\xd4\xb2\xed\x61\xc1"
            "\x53\xd0\x50\xc9\x24\xff\x59\x75\x15\xf1\x17\x3a"
            "\x3d\xf4\x4b\x2c\x84\x28\xef\x89\x0e\xb9\xde\xf3"
            "\xe4\x78\x04\xb2\xfd\x9b\x35\x7f\xe1\x3f\x8a\x3e"
            "\x10\xc8\x67\x0a\xf9\xdf\x2d\x6c\x96\xfb\xb2\xb8"
            "\xcb\x2d\xd6\xb0",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\x71\xbd\xce\x35\x42\x7d\x20\xbf\x58\xcf\x17\x74"
            "\xce\x72\xd8\x33\x34\x50\x2d\x8f\x5b\x14\xc4\xdd",
        .entropylen = 24,
        .expected = (unsigned char *)
            "\x97\x33\xe8\x20\x12\xe2\x7b\xa1\x46\x8f\xf2\x34"
            "\xb3\xc9\xb6\x6b\x20\xb2\x4f\xee\x27\xd8\x0b\x21"
            "\x8c\xff\x63\x73\x69\x29\xfb\xf3\x85\xcd\x88\x8e"
            "\x43\x2c\x71\x8b\xa2\x55\xd2\x0f\x1d\x7f\xe3\xe1"
            "\x2a\xa3\xe9\x2c\x25\x89\xc7\x14\x52\x99\x56\xcc"
            "\xc3\xdf\xb3\x81",
        .expectedlen = 64,
        .addtla = (unsigned char *)
            "\x66\xef\x42\xd6\x9a\x8c\x3d\x6d\x4a\x9e\x95\xa6"
            "\x91\x4d\x81\x56",
        .addtlb = (unsigned char *)
            "\xe3\x18\x83\xd9\x4b\x5e\xc4\xcc\xaa\x61\x2f\xbb"
            "\x4a\x55\xd1\xc6",
        .addtllen = 16,
        .pers = NULL,
        .perslen = 0,
    }, {
        .entropy = (unsigned char *)
            "\xca\x4b\x1e\xfa\x75\xbd\x69\x36\x38\x73\xb8\xf9"
            "\xdb\x4d\x35\x0e\x47\xbf\x6c\x37\x72\xfd\xf7\xa9",
        .entropylen = 24,
        .expected = (unsigned char *)
            "\x59\xc3\x19\x79\x1b\xb1\xf3\x0e\xe9\x34\xae\x6e"
            "\x8b\x1f\xad\x1f\x74\xca\x25\x45\x68\xb8\x7f\x75"
            "\x12\xf8\xf2\xab\x4c\x23\x01\x03\x05\xe1\x70\xee"
            "\x75\xd8\xcb\xeb\x23\x4c\x7a\x23\x6e\x12\x27\xdb"
            "\x6f\x7a\xac\x3c\x44\xb7\x87\x4b\x65\x56\x74\x45"
            "\x34\x30\x0c\x3d",
        .expectedlen = 64,
        .addtla = NULL,
        .addtlb = NULL,
        .addtllen = 0,
        .pers = (unsigned char *)
            "\xeb\xaa\x60\x2c\x4d\xbe\x33\xff\x1b\xef\xbf\x0a"
            "\x0b\xc6\x97\x54",
        .perslen = 16,
    }, {
        .entropy = (unsigned char *)
            "\xc0\x70\x1f\x92\x50\x75\x8f\xcd\xf2\xbe\x73\x98"
            "\x80\xdb\x66\xeb\x14\x68\xb4\xa5\x87\x9c\x2d\xa6",
        .entropylen = 24,
        .expected = (unsigned char *)
            "\x97\xc0\xc0\xe5\xa0\xcc\xf2\x4f\x33\x63\x48\x8a"
            "\xdb\x13\x0a\x35\x89\xbf\x80\x65\x62\xee\x13\x95"
            "\x7c\x33\xd3\x7d\xf4\x07\x77\x7a\x2b\x65\x0b\x5f"
            "\x45\x5c\x13\xf1\x90\x77\x7f\xc5\x04\x3f\xcc\x1a"
            "\x38\xf8\xcd\x1b\xbb\xd5\x57\xd1\x4a\x4c\x2e\x8a"
            "\x2b\x49\x1e\x5c",
        .expectedlen = 64,
        .addtla = (unsigned char *)
            "\xf9\x01\xf8\x16\x7a\x1d\xff\xde\x8e\x3c\x83\xe2"
            "\x44\x85\xe7\xfe",
        .addtlb = (unsigned char *)
            "\x17\x1c\x09\x38\xc2\x38\x9f\x97\x87\x60\x55\xb4"
            "\x82\x16\x62\x7f",
        .addtllen = 16,
        .pers = (unsigned char *)
            "\x80\x08\xae\xe8\xe9\x69\x40\xc5\x08\x73\xc7\x9f"
            "\x8e\xcf\xe0\x02",
        .perslen = 16,
    },
};

#endif    /* _LGECRYPTO_SELFTEST_H */
